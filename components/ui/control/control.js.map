{"version":3,"file":"control.js","sources":["control.tsx"],"sourcesContent":["/// <reference path=\"jsx.d.ts\" />\r\nimport * as dom from \"web/dom\";\r\nimport nextTick from \"web/nextTick\";\r\n\r\n/**\r\n * 表示控件的状态。\r\n */\r\nexport const enum ControlState {\r\n\r\n    /**\r\n     * 初始状态。\r\n     */\r\n    initial = 1,\r\n\r\n    /**\r\n     * 需要重新渲染。\r\n     */\r\n    invalidated = 2,\r\n\r\n    /**\r\n     * 正在渲染。\r\n     */\r\n    rendering = 3,\r\n\r\n    /**\r\n     * 已渲染。\r\n     */\r\n    rendered = 4,\r\n\r\n}\r\n\r\n/**\r\n * 表示一个控件。\r\n */\r\nexport default class Control {\r\n\r\n    /**\r\n     * 获取当前控件的渲染状态。\r\n     */\r\n    readyState: ControlState;\r\n\r\n    /**\r\n     * 存储关联的元素。\r\n     */\r\n    private _elem: HTMLElement;\r\n\r\n    /**\r\n     * 关联的元素。\r\n     */\r\n    get elem() {\r\n        if (this.readyState !== ControlState.rendered) {\r\n            this.update();\r\n        }\r\n        return this._elem;\r\n    }\r\n    set elem(value) {\r\n        this.readyState = ControlState.rendered;\r\n        const oldElem = this._elem;\r\n        if (value != oldElem) {\r\n            if (oldElem) {\r\n                this.uninit();\r\n                const parent = oldElem.parentNode;\r\n                if (parent) {\r\n                    if (value) {\r\n                        parent.replaceChild(value, oldElem);\r\n                    } else {\r\n                        parent.removeChild(oldElem);\r\n                    }\r\n                }\r\n                (oldElem as any as JSX.ElementExtension).__control__ = null!;\r\n            }\r\n            if ((this._elem = value)) {\r\n                (value as any as JSX.ElementExtension).__control__ = (value as any as JSX.ElementExtension).__control__ || this;\r\n                this.init();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当被子类重写时负责在关联元素后初始化当前控件。\r\n     */\r\n    protected init() { }\r\n\r\n    /**\r\n     * 当被子类重写时负责在元素被取消关联前取消初始化当前控件。\r\n     */\r\n    protected uninit() { }\r\n\r\n    /**\r\n     * 获取当前控件关联的虚拟节点。\r\n     */\r\n    protected vNode: VNode | null;\r\n\r\n    /**\r\n     * 获取创建该控件使用的源虚拟节点。\r\n     */\r\n    sourceVNode: VNode;\r\n\r\n    /**\r\n     * 使用 JSX 语法定义控件时支持的属性。\r\n     */\r\n    private \"__props__\": Partial<this>;\r\n\r\n    /**\r\n     * 重新渲染当前控件。\r\n     */\r\n    update() {\r\n        if (this.readyState !== ControlState.rendering) {\r\n            this.readyState = ControlState.rendering;\r\n            const oldVNode = this.vNode;\r\n            const newVNode = this.vNode = (this.alwaysUpdate ? this.render(this.sourceVNode ? this.sourceVNode.children : [], this.sourceVNode ? this.sourceVNode.props : {}) : this.render()) || new VNode(null, \"\");\r\n            VNode.sync(newVNode, oldVNode);\r\n            const result = newVNode.result;\r\n            this.elem = typeof newVNode.type === \"function\" ? (result as Control).elem : result as HTMLElement;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当被子类重写时负责返回当前控件的虚拟节点。\r\n     * @param children 渲染的子节点。\r\n     * @param props 渲染的属性。\r\n     * @return 返回表示当前控件内容的虚拟节点。如果当前控件不渲染任何内容则返回 null。\r\n     */\r\n    protected render(children?: VNode[], props?: { [key: string]: any; }): VNode | null;\r\n    protected render() {\r\n        return <div />;\r\n    }\r\n\r\n    /**\r\n     * 控件是否使用主动更新模式。\r\n     */\r\n    get alwaysUpdate() {\r\n        return this.render.length > 0;\r\n    }\r\n    set alwaysUpdate(value) {\r\n        Object.defineProperty(this, \"alwaysUpdate\", { value, writable: true, configurable: true, enumerable: true });\r\n    }\r\n\r\n    /**\r\n     * 获取用于包含子控件和节点的根元素。\r\n     */\r\n    get body() { return this.elem; }\r\n\r\n    /**\r\n     * 重新布局当前控件。\r\n     * @param changes 当前已更新的内容。\r\n     */\r\n    layout(changes: Changes) { }\r\n\r\n    /**\r\n     * 使当前控件无效并在下一帧重新渲染。\r\n     */\r\n    invalidate() {\r\n        if (this.readyState === ControlState.rendered) {\r\n            this.readyState = ControlState.invalidated;\r\n            nextTick(() => {\r\n                if (this.readyState === ControlState.invalidated) {\r\n                    this.update();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将当前控件渲染到指定的父控件或节点。\r\n     * @param parent 要渲染的目标控件或节点。如果为 null 则移除当前控件。\r\n     * @param refChild 在指定的子控件或节点前添加，如果为空则添加到末尾。\r\n     */\r\n    renderTo(parent: Control | Node | null, refChild?: Control | Node | null) {\r\n        if (parent) {\r\n            if (this.elem) {\r\n                while (parent instanceof Control) {\r\n                    parent = parent.body || parent.elem;\r\n                }\r\n                if (refChild) {\r\n                    parent.insertBefore(this.elem, refChild instanceof Control ? refChild.elem : refChild);\r\n                } else {\r\n                    parent.appendChild(this.elem);\r\n                }\r\n            }\r\n        } else if (this._elem && this._elem.parentNode) {\r\n            this._elem.parentNode.removeChild(this._elem);\r\n        }\r\n        this.layout(Changes.none);\r\n    }\r\n\r\n    /**\r\n     * 在当前控件查找指定的子控件或节点。\r\n     * @param selector 要查找的 CSS 选择器。如果为空则返回根控件或节点。\r\n     * @return 返回子控件或节点。如果找不到则返回 null。\r\n     */\r\n    find(selector: string) {\r\n        let elem = this.elem as HTMLElement | null;\r\n        if (selector) {\r\n            elem = elem && dom.find(elem, selector);\r\n            return elem && (elem as any as JSX.ElementExtension).__control__ || elem;\r\n        }\r\n        return this.vNode ? this.vNode.result as HTMLElement | Control : elem;\r\n    }\r\n\r\n    /**\r\n     * 在当前控件查找匹配的所有子控件或节点。\r\n     * @param selector 要查找的 CSS 选择器。如果为空则返回根控件或节点。\r\n     * @return 返回子控件或节点列表。\r\n     */\r\n    query(selector: string) {\r\n        if (selector) {\r\n            return this.elem ? dom.query(this.elem, selector).map(elem => (elem as any as JSX.ElementExtension).__control__ || elem) : [];\r\n        }\r\n        const root = this.find(selector);\r\n        return root ? [root] : [];\r\n    }\r\n\r\n    /**\r\n     * 渐变的持续毫秒数。如果为 0 则不使用渐变。\r\n     * @default 200\r\n     */\r\n    duration: number;\r\n\r\n    /**\r\n     * 存储上次设置的类名。\r\n     */\r\n    private _class: string;\r\n\r\n    /**\r\n     * CSS 类名。\r\n     */\r\n    get class() {\r\n        return this._class || \"\";\r\n    }\r\n    set class(value) {\r\n        if (this._class) {\r\n            this._class.split(\" \").forEach((c: string) => dom.removeClass(this.elem, c));\r\n        }\r\n        this._class = value;\r\n        if (value) {\r\n            value.split(\" \").forEach((c: string) => dom.addClass(this.elem, c));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否隐藏。\r\n     */\r\n    @bind(\"\", \"hidden\") hidden: boolean;\r\n\r\n    /**\r\n     * 控件样式。\r\n     */\r\n    @bind(\"\", \"style\") style: { [key: string]: string | number } | string;\r\n\r\n    /**\r\n     * 控件序号。\r\n     */\r\n    @bind(\"\", \"id\") id: string;\r\n\r\n    /**\r\n     * 控件内容。\r\n     */\r\n    @bind(\"@body\", \"innerHTML\") content: NodeLike;\r\n\r\n    /**\r\n     * 选择开始事件。\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart\r\n     */\r\n    @bind(\"\", \"onSelectStart\") onSelectStart: (e: Event, sender: this) => void;\r\n\r\n    /**\r\n     * 点击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onclick\r\n     */\r\n    @bind(\"\", \"onClick\") onClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 中键点击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onauxclick\r\n     */\r\n    @bind(\"\", \"onAuxClick\") onAuxClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 双击事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ondblclick\r\n     */\r\n    @bind(\"\", \"onDblClick\") onDblClick: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 右键菜单事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/oncontextmenu\r\n     */\r\n    @bind(\"\", \"onContextMenu\") onContextMenu: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标按下事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmousedown\r\n     */\r\n    @bind(\"\", \"onMouseDown\") onMouseDown: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标按上事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseup\r\n     */\r\n    @bind(\"\", \"onMouseUp\") onMouseUp: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseover\r\n     */\r\n    @bind(\"\", \"onMouseOver\") onMouseOver: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseout\r\n     */\r\n    @bind(\"\", \"onMouseOut\") onMouseOut: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标进入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseenter\r\n     */\r\n    @bind(\"\", \"onMouseEnter\") onMouseEnter: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标离开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmouseleave\r\n     */\r\n    @bind(\"\", \"onMouseLeave\") onMouseLeave: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onmousemove\r\n     */\r\n    @bind(\"\", \"onMouseMove\") onMouseMove: (e: MouseEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 鼠标滚轮事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/Events/wheel\r\n     */\r\n    @bind(\"\", \"onWheel\") onWheel: (e: WheelEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 滚动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onscroll\r\n     */\r\n    @bind(\"\", \"onScroll\") onScroll: (e: UIEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸开始事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchstart\r\n     */\r\n    @bind(\"\", \"onTouchStart\") onTouchStart: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchmove\r\n     */\r\n    @bind(\"\", \"onTouchMove\") onTouchMove: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸结束事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchend\r\n     */\r\n    @bind(\"\", \"onTouchEnd\") onTouchEnd: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 触摸撤销事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ontouchcancel\r\n     */\r\n    @bind(\"\", \"onTouchCancel\") onTouchCancel: (e: TouchEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针进入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerenter\r\n     */\r\n    @bind(\"\", \"onPointerEnter\") onPointerEnter: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针离开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerleave\r\n     */\r\n    @bind(\"\", \"onPointerLeave\") onPointerLeave: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移入事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerover\r\n     */\r\n    @bind(\"\", \"onPointerOver\") onPointerOver: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerout\r\n     */\r\n    @bind(\"\", \"onPointerOut\") onPointerOut: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针按下事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerdown\r\n     */\r\n    @bind(\"\", \"onPointerDown\") onPointerDown: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针移动事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointermove\r\n     */\r\n    @bind(\"\", \"onPointerMove\") onPointerMove: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针松开事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointerup\r\n     */\r\n    @bind(\"\", \"onPointerUp\") onPointerUp: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针取消事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onpointercancel\r\n     */\r\n    @bind(\"\", \"onPointerCancel\") onPointerCancel: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针开始捕获事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/ongotpointercapture\r\n     */\r\n    @bind(\"\", \"onGotPointerCapture\") onGotPointerCapture: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 指针停止捕获事件。\r\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalEventHandlers/onlostpointercapture\r\n     */\r\n    @bind(\"\", \"onLostPointerCapture\") onLostPointerCapture: (e: PointerEvent, sender: this) => void;\r\n\r\n    /**\r\n     * 当前控件的属性列表。\r\n     */\r\n    static propTypes: { [prop: string]: PropType };\r\n\r\n}\r\n\r\nControl.prototype.readyState = ControlState.initial;\r\nControl.prototype.duration = 200;\r\n\r\n/**\r\n * 表示一个虚拟节点。\r\n */\r\nexport class VNode {\r\n\r\n    /**\r\n     * 初始化新的虚拟节点。\r\n     * @param type 节点类型。如果是字符串表示 HTML 原生节点；如果是 null 表示文本节点；如果是函数表示控件。\r\n     * @param props 节点属性。如果是文本节点则表示节点内容。\r\n     * @param children 所有子节点。\r\n     */\r\n    constructor(public type: string | null | (new () => Control), public props: any | { [name: string]: any; } | null, public children?: VNode[]) { }\r\n\r\n    /**\r\n     * 添加一个或多个子节点。\r\n     * @param child 要添加的子内容。\r\n     */\r\n    append(child: any) {\r\n        if (child == null) {\r\n            return;\r\n        }\r\n        if (Array.isArray(child)) {\r\n            for (const item of child) {\r\n                this.append(item);\r\n            }\r\n        } else {\r\n            this.children!.push(child instanceof VNode ? child : new VNode(null, child));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 生成的真实节点或控件。\r\n     */\r\n    result: HTMLElement | Text | Control;\r\n\r\n    /**\r\n     * 创建一个虚拟节点。\r\n     * @param type 节点类型。如果是字符串表示 HTML 原生节点；如果是 null 表示文本节点；如果是函数表示控件。\r\n     * @param props 节点属性。如果是文本节点则表示节点内容。\r\n     * @param children 所有子内容。\r\n     * @return 返回创建的虚拟节点。\r\n     */\r\n    static create(type: VNode[\"type\"], props: VNode[\"props\"], ...children: any[]) {\r\n        const r = new VNode(type, props, []);\r\n        r.append(children);\r\n        return r;\r\n    }\r\n\r\n    /**\r\n     * 生成虚拟节点对应的真实节点或控件。\r\n     * @param newVNode 新虚拟节点。\r\n     * @param oldVNode 如果指定了原虚拟节点，则同步时尽量重用上次生成的真实节点。\r\n     * @return 返回所有更新标记。\r\n     */\r\n    static sync(newVNode: VNode, oldVNode?: VNode | null): Changes {\r\n\r\n        // 第一步：同步根节点：如果节点类型和 ID（如果存在）都不变，则重用上一次生成的节点，否则重新生成。\r\n        const type = newVNode.type;\r\n        const isControl = typeof type === \"function\";\r\n        const recreated = !oldVNode || type !== oldVNode.type || type && newVNode.props && oldVNode.props && newVNode.props.id && oldVNode.props.id && newVNode.props.id !== oldVNode.props.id;\r\n        const result = newVNode.result = recreated ? type ? isControl ? new (type as (new () => Control))() : document.createElement(type as string) : document.createTextNode(newVNode.props) : oldVNode!.result;\r\n        let r = recreated ? Changes.type : Changes.none;\r\n\r\n        if (type) {\r\n\r\n            // 第二步：控件和元素：同步属性。\r\n            let body: HTMLElement | undefined;\r\n            let setters: string[] | undefined;\r\n            let deletedCount: number | undefined;\r\n            if (isControl) {\r\n\r\n                // 控件的属性分为：\r\n                // - 自定义属性：直接赋值并标记 invalidated。\r\n                // - @bind 绑定的属性：更新属性值并标记 invalidated。\r\n                // - @bind(...) 绑定的属性或自定义访问器：等待当前节点和子节点同步完成后设置。\r\n\r\n                // 更新创建控件使用的虚拟节点。\r\n                (result as Control).sourceVNode = newVNode;\r\n\r\n                // 判断控件是否总是强制更新。\r\n                const alwaysUpdate = (result as Control).alwaysUpdate;\r\n                if (alwaysUpdate) {\r\n                    r |= Changes.state;\r\n                    (result as Control).readyState = ControlState.invalidated;\r\n                }\r\n\r\n                // 同步被删除的属性。\r\n                if (!recreated) {\r\n                    for (const prop in oldVNode!.props) {\r\n                        if (!newVNode.props || !(prop in newVNode.props)) {\r\n                            const propType = VNode.getPropType(type as any, prop);\r\n                            if (propType === PropType.state) {\r\n                                r |= Changes.state;\r\n                                delete data(result)[prop];\r\n                                (result as Control).readyState = ControlState.invalidated;\r\n                            } else if (propType === PropType.setter) {\r\n                                setters = setters || [];\r\n                                deletedCount = deletedCount! + 1 || 1;\r\n                                setters.push(prop);\r\n                            } else if (propType !== PropType.getter) {\r\n                                r |= Changes.prop;\r\n                                delete (result as any)[prop];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 同步新增和更新的属性。\r\n                for (const prop in newVNode.props) {\r\n                    const value = newVNode.props[prop];\r\n                    const propType = VNode.getPropType(type as any, prop);\r\n                    if (propType === PropType.state) {\r\n                        if (recreated || !oldVNode!.props || value !== oldVNode!.props[prop]) {\r\n                            r |= Changes.state;\r\n                            data(result)[prop] = value;\r\n                            (result as Control).readyState = ControlState.invalidated;\r\n                        }\r\n                    } else if (propType === PropType.setter) {\r\n                        setters = setters || [];\r\n                        setters.push(prop);\r\n                    } else if (propType !== PropType.getter && (recreated || !oldVNode!.props || value !== oldVNode!.props[prop])) {\r\n                        r |= Changes.prop;\r\n                        (result as any)[prop] = value;\r\n                    }\r\n                }\r\n\r\n                // 如果控件使用永久更新模式，则控件内部处理子控件，不再递归更新。\r\n                if (!alwaysUpdate) {\r\n                    body = (result as Control).body;\r\n                }\r\n            } else {\r\n                // HTML 元素可以直接设置所有已更改的属性。\r\n\r\n                // 同步新增和更新的属性。\r\n                for (const prop in newVNode.props) {\r\n                    const value = newVNode.props[prop];\r\n                    if (recreated || VNode.alwaysSet(type, prop, result) || !oldVNode!.props || value !== oldVNode!.props[prop]) {\r\n                        r |= Changes.prop;\r\n                        VNode.set(result as HTMLElement, prop, value);\r\n                    }\r\n                }\r\n                // 同步被删除的属性。\r\n                if (!recreated) {\r\n                    for (const prop in oldVNode!.props) {\r\n                        if (!newVNode.props || !(prop in newVNode.props)) {\r\n                            r |= Changes.prop;\r\n                            VNode.set(result as HTMLElement, prop, null);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 递归更新子节点。\r\n                body = result as HTMLElement;\r\n            }\r\n\r\n            // 第三步：同步子节点。\r\n            if (body) {\r\n\r\n                // 同步新增或更新的子节点。\r\n                let index = 0;\r\n                for (const newChild of newVNode.children!) {\r\n                    const oldChild = (!recreated && oldVNode!.children![index++]) as VNode | null;\r\n                    const childChanges = VNode.sync(newChild, oldChild);\r\n                    if (childChanges) {\r\n                        r |= Changes.children;\r\n                        if (childChanges & Changes.type) {\r\n                            index--;\r\n                            const newChildResult = newChild.result;\r\n                            const oldChildResult = oldChild ? oldChild.result : null;\r\n                            if (newChildResult instanceof Control) {\r\n                                newChildResult.renderTo(result, oldChildResult);\r\n                            } else {\r\n                                try {\r\n                                    if (oldChildResult) {\r\n                                        body.insertBefore(newChildResult, oldChildResult instanceof Control ? oldChildResult.elem : oldChildResult);\r\n                                    } else {\r\n                                        body.appendChild(newChildResult);\r\n                                    }\r\n                                } catch (e) { }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 同步删除的子节点。\r\n                if (!recreated) {\r\n                    for (; index < oldVNode!.children!.length; index++) {\r\n                        r |= Changes.children;\r\n                        const oldChildResult = oldVNode!.children![index].result;\r\n                        if (oldChildResult instanceof Control) {\r\n                            oldChildResult.renderTo(null);\r\n                        } else {\r\n                            try {\r\n                                body.removeChild(oldChildResult);\r\n                            } catch (e) { }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 第四步：当前控件和子控件全部同步完毕，重新布局。\r\n            if (isControl) {\r\n\r\n                // 设置属性。\r\n                // 只要当前节点重新生成或渲染都强制重新设置属性。\r\n                // 对于自定义访问器，由于不确定其内部是否使用子节点等信息。\r\n                // 因此只要子节点有任何改变都强制重新设置。\r\n                if (setters) {\r\n                    let i = 0;\r\n                    if (deletedCount) {\r\n                        for (; i < deletedCount; i++) {\r\n                            r |= Changes.prop;\r\n                            (result as any)[setters[i]] = null;\r\n                        }\r\n                    }\r\n                    for (; i < setters.length; i++) {\r\n                        const setter = setters[i];\r\n                        const value = newVNode.props[setter];\r\n                        if (r & (Changes.type | Changes.state)\r\n                            || ((r & Changes.children) && VNode.getPropType(type as any, setter) === PropType.setter)\r\n                            || VNode.alwaysSet(type, setter, result)\r\n                            || !oldVNode!.props\r\n                            || value !== oldVNode!.props[setter]) {\r\n                            r |= Changes.prop;\r\n                            (result as any)[setter] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 所有渲染所需属性都已传递给控件，确保控件已渲染。\r\n                if ((result as Control).readyState !== ControlState.rendered) {\r\n                    (result as Control).update();\r\n                }\r\n\r\n                // 通知控件重新布局。\r\n                (result as Control).layout(r);\r\n            }\r\n\r\n        } else if (!recreated && oldVNode!.props != newVNode.props) {\r\n            // 第二步：文本节点：同步文本内容。\r\n            r |= Changes.prop;\r\n            (result as Text).textContent = newVNode.props;\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    /**\r\n     * 判断控件类型是否包含指定的属性。\r\n     * @param type 要判断的控件类型。\r\n     * @param prop 要判断的属性名。\r\n     * @return 如果属性无 get/set 操作则返回 true，否则返回 false。\r\n     */\r\n    static getPropType(type: typeof Control, prop: string): PropType {\r\n        const propTypes = VNode.getOwnPropTypes(type);\r\n        let value = propTypes[prop];\r\n        if (value == undefined) {\r\n            if (type.prototype.hasOwnProperty(prop)) {\r\n                const descriptor = Object.getOwnPropertyDescriptor(type.prototype, prop);\r\n                value = descriptor ? descriptor.set ? PropType.setter : descriptor.get ? PropType.getter : PropType.value : PropType.value;\r\n            } else {\r\n                const proto = Object.getPrototypeOf(type.prototype);\r\n                value = proto && proto !== Object.prototype ? VNode.getPropType(proto.constructor, prop) : PropType.value;\r\n            }\r\n            propTypes[prop] = value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 获取控件类型本身的属性列表。\r\n     * @param type 控件类型。\r\n     * @return 返回属性列表。\r\n     */\r\n    static getOwnPropTypes(type: typeof Control) {\r\n        return type.hasOwnProperty(\"propTypes\") ? type.propTypes : (type.propTypes = { __proto__: null! });\r\n    }\r\n\r\n    /**\r\n     * 设置节点特殊属性的读写方式。\r\n     */\r\n    static props: { [prop: string]: { get(elem: HTMLElement, args?: any): any, set(elem: HTMLElement, value: any, args?: any): void } } = {\r\n        __proto__: null!,\r\n        class: {\r\n            get(elem: HTMLElement, args?: string) {\r\n                if (args) {\r\n                    return dom.hasClass(elem, args);\r\n                }\r\n                return elem.className;\r\n            },\r\n            set(elem: HTMLElement, value: string | boolean, args?: string) {\r\n                if (args) {\r\n                    dom.toggleClass(elem, args, value as boolean);\r\n                } else {\r\n                    elem.className = value as string;\r\n                }\r\n            }\r\n        },\r\n        style: {\r\n            get(elem: HTMLElement, args?: string) {\r\n                if (args) {\r\n                    return dom.getStyle(elem, args);\r\n                }\r\n                return elem.style;\r\n            },\r\n            set(elem: HTMLElement, value: { [key: string]: string | number } | string | number, args?: string) {\r\n                if (args) {\r\n                    dom.setStyle(elem, args, value as string | number);\r\n                } else if (value == null || typeof value === \"string\") {\r\n                    elem.style.cssText = value as string;\r\n                } else {\r\n                    for (const key in value as { [key: string]: string | number }) {\r\n                        dom.setStyle(elem, key, (value as { [key: string]: string | number })[key]);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        hidden: {\r\n            get(elem: HTMLElement) {\r\n                return dom.getAttr(elem, \"hidden\") || dom.isHidden(elem);\r\n            },\r\n            set(elem: HTMLElement, value: boolean) {\r\n                dom.setAttr(elem, \"hidden\", value);\r\n            }\r\n        },\r\n        innerHTML: {\r\n            get: dom.getHtml,\r\n            set(elem: HTMLElement, value: NodeLike | NodeLike[]) {\r\n                if (typeof value === \"object\") {\r\n                    elem.innerHTML = \"\";\r\n                    if (Array.isArray(value)) {\r\n                        for (const item of value) {\r\n                            render(elem, item);\r\n                        }\r\n                    } else {\r\n                        render(elem, value);\r\n                    }\r\n                } else {\r\n                    dom.setHtml(elem, value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 判断是否需要强制更新指定的属性。\r\n     * @param type 节点类型。\r\n     * @param prop 节点属性。\r\n     * @param target 要重置的控件或节点。\r\n     * @return 如果需要强制更新则返回 true，否则返回 false。\r\n     */\r\n    static alwaysSet(type: VNode[\"type\"], prop: string, target: VNode[\"result\"]) {\r\n        return false;\r\n        // switch (prop) {\r\n        //     case \"value\":\r\n        //     case \"checked\":\r\n        //     case \"selected\":\r\n        //         return true;\r\n        //     default:\r\n        //         return false;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 获取节点的属性。\r\n     * @param target 要获取的节点。\r\n     * @param prop 要获取的属性名。\r\n     * @param args 附加参数。部分属性需要附加参数。\r\n     * @param root 事件作用域。\r\n     * @return 返回属性值。\r\n     */\r\n    static get(target: HTMLElement, prop: string, args?: any, root?: any) {\r\n        const hook = VNode.props[prop];\r\n        if (hook) {\r\n            return hook.get(target, args);\r\n        }\r\n        if (/^on[^a-z]/.test(prop)) {\r\n            return data(root || target)[args ? prop + \" \" + args : prop];\r\n        }\r\n        return dom.getAttr(target, prop);\r\n    }\r\n\r\n    /**\r\n     * 设置节点的属性。\r\n     * @param target 要设置的节点。\r\n     * @param prop 要设置的属性名。\r\n     * @param value 要设置的属性值。\r\n     * @param args 附加参数。部分属性需要附加参数。\r\n     * @param root 事件作用域。\r\n     */\r\n    static set(target: HTMLElement, prop: string, value = null, args?: any, root?: any) {\r\n        const hook = VNode.props[prop];\r\n        if (hook) {\r\n            hook.set(target, value, args);\r\n        } else if (/^on[^a-z]/.test(prop)) {\r\n            const eventName = prop.slice(2).toLowerCase();\r\n            const datas = data(root || target);\r\n            const key = args ? prop + \" \" + args : prop;\r\n            if (datas[key]) {\r\n                dom.off(target, eventName, args || \"\", datas[key], root || (target as any as JSX.ElementExtension).__control__);\r\n            }\r\n            if ((datas[key] = value)) {\r\n                dom.on(target, eventName, args || \"\", value!, root || (target as any as JSX.ElementExtension).__control__);\r\n            }\r\n        } else {\r\n            dom.setAttr(target, prop, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 表示更新的类型。\r\n */\r\nexport const enum Changes {\r\n\r\n    /**\r\n     * 没有任何改变。\r\n     */\r\n    none,\r\n\r\n    /**\r\n     * 类型发生改变。根节点已重新创建。\r\n     */\r\n    type = 1 << 0,\r\n\r\n    /**\r\n     * 状态发生改变。控件已重新渲染。\r\n     */\r\n    state = 1 << 1,\r\n\r\n    /**\r\n     * 属性发生改变。\r\n     */\r\n    prop = 1 << 2,\r\n\r\n    /**\r\n     * 子控件或元素发生改变。\r\n     */\r\n    children = 1 << 3,\r\n\r\n}\r\n\r\n/**\r\n * 表示控件属性的类型。\r\n */\r\nexport const enum PropType {\r\n\r\n    /**\r\n     * 该属性是一个普通的值。\r\n     */\r\n    value,\r\n\r\n    /**\r\n     * 该属性是一个状态值。设置该属性后需要更新控件。\r\n     */\r\n    state,\r\n\r\n    /**\r\n     * 该属性是一个只读访问器。\r\n     */\r\n    getter,\r\n\r\n    /**\r\n     * 该属性是一个可写访问器。\r\n     */\r\n    setter,\r\n\r\n}\r\n\r\n/**\r\n * 获取指定对象关联的数据对象。\r\n * @param obj 要获取的对象。\r\n * @return 返回一个数据对象。\r\n */\r\nexport function data(obj: any) {\r\n    return obj.__data__ || (obj.__data__ = { __proto__: null });\r\n}\r\n\r\n/**\r\n * 绑定属性到指定子控件或节点的属性。\r\n * @param target 要绑定的控件。\r\n * @param propertyName 要绑定的控件属性。\r\n * @param selector 用于查找子控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件的属性。\r\n * @param prop 要绑定的目标属性。\r\n * @param args 附加参数。\r\n * @param descriptor 已定义的属性描述器。\r\n */\r\nexport function bind(target: Control, propertyName: string, selector: string, prop: string, args?: any, descriptor?: PropertyDescriptor): void;\r\n\r\n/**\r\n * 绑定属性。如果属性被重新赋值则在下一帧重新渲染整个控件。\r\n * @param target 要绑定的控件。\r\n * @param propertyName 要绑定的控件属性。\r\n * @param descriptor 已定义的属性描述器。\r\n */\r\nexport function bind(target: Control, propertyName: string, descriptor?: PropertyDescriptor): void;\r\n\r\n/**\r\n * 绑定属性到指定子控件或节点的属性。\r\n * @param selector 用于查找子控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件的属性。\r\n * @param prop 要绑定的目标属性。\r\n * @param args 附加参数。\r\n */\r\nexport function bind(selector: string, prop: string, args?: any): PropertyDecorator;\r\n\r\n/**\r\n * 绑定属性到指定的子控件或节点本身。\r\n * @param selector 用于查找子控件或节点的 CSS 选择器。空字符串表示根控件或节点。如果是 @ 开头表示当前控件的属性。\r\n */\r\nexport function bind(selector: string): PropertyDecorator;\r\n\r\n/**\r\n * 绑定属性。如果属性被重新赋值则在下一帧重新渲染整个控件。\r\n */\r\nexport function bind(): PropertyDecorator;\r\n\r\nexport function bind(target?: any, propertyName?: string, selector?: any, prop?: string, args?: any, descriptor?: PropertyDescriptor) {\r\n\r\n    // @bind(...)\r\n    if (!target || typeof target !== \"object\") {\r\n        return (target2: Control, propertyName2: string, descriptor2?: PropertyDescriptor) => {\r\n            return bind(target2, propertyName2, target, propertyName!, selector, descriptor2);\r\n        };\r\n    }\r\n\r\n    // 支持 bind(target, propertyName, descriptor)\r\n    if (selector && typeof selector === \"object\") {\r\n        descriptor = selector;\r\n        selector = undefined;\r\n    }\r\n\r\n    // 标记属性类型。\r\n    if (selector == undefined) {\r\n        VNode.getOwnPropTypes(target.constructor)[propertyName!] = PropType.state;\r\n    }\r\n\r\n    const desc: PropertyDescriptor = selector == undefined ?\r\n        {\r\n            get(this: Control) {\r\n                return data(this)[propertyName!];\r\n            },\r\n            set(this: Control, value: any) {\r\n                data(this)[propertyName!] = value;\r\n                this.invalidate();\r\n            }\r\n        }\r\n        : selector.charCodeAt(0) === 64 /*@*/ && (selector = selector.slice(1)) ?\r\n            prop == undefined ?\r\n                {\r\n                    get(this: any) {\r\n                        return this[selector];\r\n                    },\r\n                    set(this: any, value: any) {\r\n                        this[selector] = value;\r\n                    }\r\n                } : {\r\n                    get(this: any) {\r\n                        return getProp(this[selector], prop, args, this);\r\n                    },\r\n                    set(this: any, value: any) {\r\n                        setProp(this[selector], prop, value, args, this);\r\n                    }\r\n                }\r\n            : prop == undefined ?\r\n                {\r\n                    get(this: Control) {\r\n                        return this.find(selector);\r\n                    },\r\n                    set(this: Control, value: any) {\r\n                        Object.defineProperty(this, propertyName!, {\r\n                            value: value\r\n                        });\r\n                    }\r\n                } : {\r\n                    get(this: Control) {\r\n                        return getProp(this.find(selector), prop, args, this);\r\n                    },\r\n                    set(this: Control, value: any) {\r\n                        setProp(this.find(selector), prop, value, args, this);\r\n                    }\r\n                };\r\n\r\n    desc.configurable = desc.enumerable = true;\r\n    // 使用 Babel/TypeScript 时会传递 descriptor，此时返回属性描述器以便定义。\r\n    if (descriptor !== undefined) {\r\n        return desc;\r\n    }\r\n    Object.defineProperty(target, propertyName!, desc);\r\n}\r\n\r\nfunction getProp(target: any, prop: string, args: any, root: Control) {\r\n    if (target == null) {\r\n        return;\r\n    }\r\n    if (target instanceof Node) {\r\n        return VNode.get(target as HTMLElement, prop, args, root);\r\n    }\r\n    let value = target[prop];\r\n    if (value && /^on[^a-z]/.test(prop)) {\r\n        value = value.__original__ || value;\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction setProp(target: any, prop: string, value: any, args: any, root: Control) {\r\n    if (target != null) {\r\n        if (target instanceof Node) {\r\n            VNode.set(target as HTMLElement, prop, value, args, root);\r\n        } else {\r\n            if (value && /^on[^a-z]/.test(prop)) {\r\n                const original = value;\r\n                value = function () {\r\n                    if (arguments[arguments.length - 1] === target) {\r\n                        arguments[arguments.length - 1] = root;\r\n                    }\r\n                    return original.apply(root, arguments);\r\n                };\r\n                value.__original__ = original;\r\n            }\r\n            target[prop] = value;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 表示类节点内容。\r\n */\r\nexport type NodeLike = Control | Node | VNode | string;\r\n\r\n/**\r\n * 获取一个控件或节点。\r\n * @param value 一个虚拟节点、节点、控件、选择器或 HTML 片段。]\r\n * @return 返回一个控件或节点。如果找不到则返回 null。\r\n */\r\nexport function from(value: NodeLike | null) {\r\n    if (value instanceof VNode) {\r\n        if (!value.result) {\r\n            VNode.sync(value);\r\n        }\r\n        value = value.result;\r\n    } else {\r\n        if (typeof value !== \"object\") {\r\n            value = dom.parse(value);\r\n        }\r\n        value = value && (value as any as JSX.ElementExtension).__control__ || value;\r\n    }\r\n    return value as HTMLElement | Text | DocumentFragment | Control | null;\r\n}\r\n\r\n/**\r\n * 将指定的内容渲染到指定的容器。\r\n * @param parent 要渲染的容器节点。\r\n * @param content 要渲染的内容。可以是一个虚拟节点、节点、控件、选择器或 HTML 片段。\r\n * @return 返回生成的节点。\r\n */\r\nexport function render(parent: HTMLElement | Control, content: NodeLike | null) {\r\n    content = from(content);\r\n    if (content instanceof Control) {\r\n        content.renderTo(parent);\r\n    } else if (content) {\r\n        (parent instanceof Control ? parent.elem : parent).appendChild(content);\r\n    }\r\n    return content;\r\n}\r\n"],"mappings":"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"}
{"version":3,"file":"listBox.js","sources":["listBox.tsx"],"sourcesContent":["import * as dom from \"web/dom\";\r\nimport { scrollIntoViewIfNeeded } from \"web/scroll\";\r\nimport keyPress, { KeyPressOptions } from \"web/keyPress\";\r\nimport Control, { VNode, bind, NodeLike, from } from \"ui/control\";\r\nimport Input from \"ui/input\";\r\nimport \"./listBox.scss\";\r\n\r\n/**\r\n * 表示一个列表框基类。\r\n */\r\nexport class List extends Input {\r\n\r\n    protected render() {\r\n        return <ul class=\"x-listbox\"></ul>;\r\n    }\r\n\r\n    @bind(\"\", \"class\", \"x-listbox-readonly\") readOnly: boolean;\r\n\r\n    @bind(\"\", \"class\", \"x-listbox-disabled\") disabled: boolean;\r\n\r\n    body: HTMLElement;\r\n\r\n    /**\r\n     * 所有项。\r\n     */\r\n    get items() {\r\n        return this.query(\".x-listbox>li\") as any[] as ListItem[];\r\n    }\r\n    set items(value) {\r\n        this.body.innerHTML = \"\";\r\n        if (Array.isArray(value)) {\r\n            for (const item of value) {\r\n                if (item instanceof ListItem) {\r\n                    item.renderTo(this as any);\r\n                } else {\r\n                    const listItem = new ListItem();\r\n                    listItem.content = item;\r\n                    listItem.renderTo(this as any);\r\n                }\r\n            }\r\n        } else {\r\n            for (const key in value) {\r\n                const item = new ListItem();\r\n                item.key = key;\r\n                item.content = (value as any)[key];\r\n                item.renderTo(this as any);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中的第一项。\r\n     */\r\n    get selectedItem() {\r\n        return this.find(\".x-listbox>.x-listbox-selected\") as ListItem | null;\r\n    }\r\n    set selectedItem(value) {\r\n        const old = this.selectedItem;\r\n        if (old) old.selected = false;\r\n        if (value) value.selected = true;\r\n    }\r\n\r\n    /**\r\n     * 选中的第一项的索引。\r\n     */\r\n    get selectedIndex() {\r\n        const item = this.selectedItem;\r\n        return item ? dom.index(item.elem) : -1;\r\n    }\r\n    set selectedIndex(value) {\r\n        this.selectedItem = value >= 0 ? this.items[value] : null;\r\n    }\r\n\r\n    /**\r\n     * 获取指定键对应的项。\r\n     * @param key 相关的键。\r\n     * @return 返回匹配的第一个项。如果不存在则返回 undefined。\r\n     */\r\n    findItemByKey(key: string) {\r\n        return key == null ? null : this.items.find(x => x.key == key)!;\r\n    }\r\n\r\n    /**\r\n     * 获取指定内容对应的项。\r\n     * @param content 相关的内容。\r\n     * @return 返回匹配的第一个项。如果不存在则返回 undefined。\r\n     */\r\n    findItemByContent(content: string) {\r\n        return this.items.find(x => x.content == content) as ListItem | null;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 表示一个列表项。\r\n */\r\nexport class ListItem extends Control {\r\n\r\n    protected render() {\r\n        return <li><a href=\"javascript:;\" draggable={false}></a></li>;\r\n    }\r\n\r\n    @bind(\"a\") body: HTMLElement;\r\n\r\n    /**\r\n     * 键。\r\n     */\r\n    get key() {\r\n        const key = dom.getAttr(this.elem, \"data-key\");\r\n        return key != undefined ? key : this.content;\r\n    }\r\n    set key(value) {\r\n        dom.setAttr(this.elem, \"data-key\", value);\r\n    }\r\n\r\n    /**\r\n     * 内容。\r\n     */\r\n    @bind(\"@body\", \"textContent\") content: string;\r\n\r\n    /**\r\n     * 是否选中。\r\n     */\r\n    get selected() {\r\n        return dom.hasClass(this.elem, \"x-listbox-selected\");\r\n    }\r\n    set selected(value) {\r\n        dom.toggleClass(this.elem, \"x-listbox-selected\", value);\r\n        if (value) {\r\n            this.elem.setAttribute(\"aria-selected\", \"true\");\r\n        } else {\r\n            this.elem.removeAttribute(\"aria-selected\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 表示一个列表框。\r\n */\r\nexport default class ListBox extends List {\r\n\r\n    /**\r\n     * 值。\r\n     */\r\n    get value() {\r\n        const item = this.selectedItem;\r\n        if (item) {\r\n            return item.key;\r\n        }\r\n        return null;\r\n    }\r\n    set value(value) {\r\n        this.selectedItem = this.findItemByKey(value);\r\n    }\r\n\r\n    protected init() {\r\n        super.init();\r\n        dom.on(this.body, \"click\", \".x-listbox>li\", this.handleItemClick, this);\r\n        keyPress(this.elem, this.keyMappings);\r\n    }\r\n\r\n    /**\r\n     * 处理项点击事件。\r\n     */\r\n    protected handleItemClick(e: MouseEvent, item: HTMLElement) {\r\n        if (!this.disabled && !this.readOnly) {\r\n            this.select(item, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中项。\r\n     * @param item 要选中的项。\r\n     * @param e 事件参数。\r\n     */\r\n    select(item: NodeLike | ListItem | null, e?: UIEvent) {\r\n        item = from(item);\r\n        if (this.onSelect && this.onSelect(item as ListItem, e!, this) === false) {\r\n            return;\r\n        }\r\n        const changed = this.selectedItem !== item;\r\n        if (changed) {\r\n            this.selectedItem = item as ListItem | null;\r\n        }\r\n        if (item) {\r\n            scrollIntoViewIfNeeded((item as ListItem).elem, this.body, this.duration);\r\n        }\r\n        if (changed && this.onChange) {\r\n            this.onChange(e!, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 即将选中事件。\r\n     * @param item 要选中的项。\r\n     * @param multiple 是否为多选模式。\r\n     * @param e 事件参数。\r\n     * @param sender 事件源。\r\n     * @return 如果返回 false 则阻止选中事件。\r\n     */\r\n    onSelect: (item: ListItem, e: UIEvent, sender: this) => boolean | void;\r\n\r\n    /**\r\n     * 获取键盘绑定。\r\n     * @return 返回各个键盘绑定对象。\r\n     */\r\n    get keyMappings(): KeyPressOptions {\r\n        const upDown = (e: KeyboardEvent, delta: number) => {\r\n            const items = this.items;\r\n            if (items.length) {\r\n                let index = this.selectedIndex + delta;\r\n                if (index < 0) index += items.length;\r\n                if (index >= items.length) index = 0;\r\n                this.select(items[index], e);\r\n            }\r\n        };\r\n        return {\r\n            up(e: KeyboardEvent) {\r\n                upDown(e, -1);\r\n            },\r\n            down(e: KeyboardEvent) {\r\n                upDown(e, 1);\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n"],"mappings":"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"}
{"version":3,"file":"form.js","sources":["form.tsx"],"sourcesContent":["import * as dom from \"web/dom\";\r\nimport Control, { VNode, bind } from \"ui/control\";\r\nimport CheckBox from \"ui/checkBox\";\r\nimport Input, { ValidityResult } from \"ui/input\";\r\nimport { scrollIntoViewIfNeeded } from \"web/scroll\";\r\nimport \"./form.scss\";\r\n\r\n/**\r\n * 表示一个表单。\r\n */\r\nexport default class Form extends Control {\r\n\r\n    elem: HTMLFormElement;\r\n\r\n    protected render() {\r\n        return <form class=\"x-form\"></form>;\r\n    }\r\n\r\n    /**\r\n     * 表单的提交地址。\r\n     */\r\n    @bind(\"\", \"action\") action: string;\r\n\r\n    /**\r\n     * 表单的提交谓词。\r\n     */\r\n    @bind(\"\", \"method\") method: string;\r\n\r\n    /**\r\n     * 是否异步提交表单。\r\n     */\r\n    async: boolean;\r\n\r\n    /**\r\n     * 是否禁用验证。\r\n     */\r\n    noValidate: boolean;\r\n\r\n    /**\r\n     * 判断当前表单是否需要验证。\r\n     */\r\n    get willValidate() {\r\n        return !this.noValidate;\r\n    }\r\n\r\n    /**\r\n     * 提交的附加数据。\r\n     */\r\n    data: { [key: string]: any };\r\n\r\n    protected init() {\r\n        dom.on(this.elem, \"submit\", this.handleSubmit, this);\r\n        dom.on(this.elem, \"reset\", this.handleReset, this);\r\n    }\r\n\r\n    /**\r\n     * 处理表单提交事件。\r\n     */\r\n    protected handleSubmit(e: Event) {\r\n        if (!this.action) {\r\n            e.preventDefault();\r\n        }\r\n        if (this.willValidate) {\r\n            const r = this.reportValidity();\r\n            if (r instanceof Promise) {\r\n                // 立即终止当前表单提交。\r\n                // 等待验证成功后重新提交。\r\n                e.preventDefault();\r\n                r.then(r => {\r\n                    if (!r.valid) {\r\n                        return;\r\n                    }\r\n                    const noValidate = this.noValidate;\r\n                    this.noValidate = true;\r\n                    try {\r\n                        this.submit();\r\n                    } finally {\r\n                        this.noValidate = noValidate;\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            if (!r.valid) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 异步提交。\r\n        if (this.async) {\r\n            e.preventDefault();\r\n            // TODO: 异步提交。\r\n            throw (\"异步提交功能正在开发,请不要使用\");\r\n        } else {\r\n            this.onSubmit && this.onSubmit(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理表单重置事件。\r\n     */\r\n    protected handleReset(e: Event) {\r\n        e.preventDefault();\r\n        this.getInputs(false, true).forEach(input => input.reset());\r\n    }\r\n\r\n    /**\r\n     * 最终提交的数据。\r\n     */\r\n    get value() {\r\n        return this.getValue({ hidden: true });\r\n    }\r\n    set value(value) {\r\n        this.data = { ...value };\r\n        for (const input of this.inputs) {\r\n            if (input.name in value) {\r\n                delete this.data[input.name];\r\n                if (input instanceof CheckBox) {\r\n                    input.value = value[input.name] === input.value || Array.isArray(value[input.name]) && value[input.name].indexOf(input.value) >= 0;\r\n                } else {\r\n                    input.value = value[input.name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getValue({ hidden = false, disabled = false }) {\r\n        const r = { ...this.data };\r\n        for (const input of this.inputs) {\r\n            if (input.name) {\r\n                if (disabled == false && input.disabled) {\r\n                    continue;\r\n                }\r\n                if (hidden == false && input.hidden) {\r\n                    continue;\r\n                }\r\n                if (input instanceof CheckBox) {\r\n                    if (input.value) {\r\n                        if (Array.isArray(r[input.name])) {\r\n                            r[input.name].push(input.value);\r\n                        } else if (input.name in r) {\r\n                            r[input.name] = [r[input.name], input.value];\r\n                        } else {\r\n                            r[input.name] = input.value;\r\n                        }\r\n                    }\r\n                } else {\r\n                    r[input.name] = input.value;\r\n                }\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n    /**\r\n     * 获取表单内所有输入域。\r\n     * @param disabled 是否包含禁用的项。\r\n     * @param hidden 是否包含隐藏的项。\r\n     * @return 返回输入域列表。\r\n     */\r\n    getInputs(disabled = false, hidden = false) {\r\n        const r: Input[] = [];\r\n        next: for (const ctrl of this.query(\"*\")) {\r\n            if (!(ctrl instanceof Input) || !disabled && ctrl.disabled || r.indexOf(ctrl) >= 0) {\r\n                continue;\r\n            }\r\n            if (!hidden && !ctrl.elem.offsetHeight) {\r\n                for (let p = ctrl.elem; p; p = p.parentNode as HTMLElement) {\r\n                    if (dom.isHidden(p)) {\r\n                        continue next;\r\n                    }\r\n                }\r\n            }\r\n            r.push(ctrl);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    /**\r\n     * 当前表单内的所有输入域。\r\n     */\r\n    get inputs() {\r\n        return this.getInputs(true, true);\r\n    }\r\n\r\n    /**\r\n     * 是否禁用。禁用后数据不会被提交到服务端。\r\n     */\r\n    get disabled() {\r\n        return this.getInputs(true, true).every(input => input.disabled);\r\n    }\r\n    set disabled(value: boolean) {\r\n        this.getInputs(true, true).forEach(input => {\r\n            input.disabled = value;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 是否只读。\r\n     */\r\n    get readOnly() {\r\n        return this.getInputs(true, true).every(input => input.readOnly);\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this.getInputs(true, true).forEach(input => {\r\n            input.readOnly = value;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 提交当前表单。\r\n     */\r\n    submit() {\r\n        this.elem.submit();\r\n    }\r\n\r\n    /**\r\n     * 重置当前表单。\r\n     */\r\n    reset() {\r\n        this.elem.reset();\r\n    }\r\n\r\n    /**\r\n     * 验证表单事件。\r\n     * @param r 当前验证的结果。\r\n     * @return 如果验证失败则返回 true，如果正在执行异步验证则返回一个确认对象。\r\n     */\r\n    onValidate: (r: FormValidityResult) => void | boolean | Promise<boolean>;\r\n\r\n    /**\r\n     * 提交表单事件。\r\n     */\r\n    onSubmit: (e: Event) => void;\r\n\r\n    /**\r\n     * 验证当前表单内的所有输入域。\r\n     * @return 返回验证后的出错的字段列表。如果返回空数组说明验证成功。如果正在执行异步验证则返回一个确认对象。\r\n     */\r\n    checkValidity() {\r\n        return this._checkValidity();\r\n    }\r\n\r\n    /**\r\n     * 向用户报告验证结果。\r\n     */\r\n    reportValidity() {\r\n        return this._checkValidity(true);\r\n    }\r\n\r\n    private _checkValidity(report?: boolean) {\r\n        const r: FormValidityResult = {\r\n            valid: true,\r\n            inputs: [],\r\n            results: []\r\n        };\r\n        const promises: Promise<void>[] = [];\r\n        let firstError;\r\n        for (const input of this.inputs) {\r\n            if (input.hidden) {\r\n                continue;\r\n            }\r\n            if (!input.willValidate) {\r\n                continue;\r\n            }\r\n            const inputResult = report ? input.reportValidity() : input.checkValidity();\r\n            if (inputResult instanceof Promise) {\r\n                promises.push(inputResult.then(inputResult => {\r\n                    if (!inputResult.valid) {\r\n                        r.valid = false;\r\n                    }\r\n                    r.inputs.push(input);\r\n                    r.results.push(inputResult);\r\n                }));\r\n            } else {\r\n                if (!inputResult.valid) {\r\n                    r.valid = false;\r\n                    firstError = firstError || input;\r\n                }\r\n                r.inputs.push(input);\r\n                r.results.push(inputResult);\r\n            }\r\n        }\r\n        if (this.onValidate) {\r\n            const newResult = this.onValidate(r);\r\n            if (newResult instanceof Promise) {\r\n                promises.push(newResult.then(newResult => {\r\n                    if (newResult === false) {\r\n                        r.valid = newResult;\r\n                    }\r\n                }));\r\n            } else if (newResult === false) {\r\n                r.valid = newResult;\r\n            }\r\n        }\r\n        if (promises.length) {\r\n            return Promise.all(promises).then(() => r);\r\n        }\r\n        if (report && firstError) {\r\n            scrollIntoViewIfNeeded(firstError.elem);\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 表示一个表单验证结果。\r\n */\r\nexport interface FormValidityResult {\r\n\r\n    /**\r\n     * 是否验证通过。\r\n     */\r\n    valid: boolean;\r\n\r\n    /**\r\n     * 所有验证的字段。\r\n     */\r\n    inputs: Input[];\r\n\r\n    /**\r\n     * 所有验证的结果。\r\n     */\r\n    results: ValidityResult[];\r\n\r\n}\r\n"],"mappings":"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"}
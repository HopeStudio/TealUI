{"version":3,"file":"selected.js","sources":["selected.ts"],"sourcesContent":["import * as dom from \"web/dom\";\r\n\r\n/**\r\n * 获取列表中的元素的选中元素。\r\n * @param items 所有元素列表。\r\n * @param className 选中的 CSS 类名。\r\n * @return 返回选中的元素。如果不存在则返回 null。\r\n */\r\nexport function getSelected(items: ArrayLike<HTMLElement>, className: string) {\r\n    for (const item of items as any) {\r\n        if (dom.hasClass(item, className)) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * 设置列表中指定的元素为选中样式。\r\n * @param items 所有元素列表。\r\n * @param className 选中的 CSS 类名。\r\n * @param value 要选中的元素。如果为 null 则表示撤销已有的选中元素。\r\n */\r\nexport function setSelected(items: ArrayLike<HTMLElement>, className: string, value: HTMLElement | null | undefined) {\r\n    for (const item of items as any) {\r\n        dom.toggleClass(item, className, item === value);\r\n    }\r\n}\r\n"],"mappings":";;;IAEA;;;;;OAKG;IACH,qBAA4B,KAA6B,EAAE,SAAiB;QACxE,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,KAAY,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAM,IAAI,SAAA;YACX,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;SACJ;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAPD,kCAOC;IAED;;;;;OAKG;IACH,qBAA4B,KAA6B,EAAE,SAAiB,EAAE,KAAqC;QAC/G,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,KAAY,EAAZ,cAAY,EAAZ,IAAY;YAA1B,IAAM,IAAI,SAAA;YACX,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,KAAK,KAAK,CAAC,CAAC;SACpD;IACL,CAAC;IAJD,kCAIC"}
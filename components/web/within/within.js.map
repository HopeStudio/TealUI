{"version":3,"file":"within.js","sources":["within.ts"],"sourcesContent":["import * as dom from \"web/dom\";\r\n\r\n/**\r\n * 判断元素是否和指定区域存在交集。\r\n * @param elem 元素。\r\n * @param container 要判断的容器元素或区域。\r\n * @param containerPadding 容器的内边距。即将元素和容器判定为相交时的最小的距离。\r\n * @return 如果元素和目标容器有任一交集则返回 true，否则返回 false。\r\n * @example within(elem, { x:0, y:0, width: 400, height: 500 });\r\n */\r\nexport default function within(elem: HTMLElement, container: HTMLElement | Document | dom.Rect, containerPadding = 0) {\r\n    container = (container as HTMLElement | Document).nodeType ? dom.getRect(container as HTMLElement | Document) : container as dom.Rect;\r\n    const rect = dom.getRect(elem);\r\n    const deltaY = rect.y - container.y;\r\n    const deltaX = rect.x - container.x;\r\n    return (deltaY < containerPadding ? deltaY + rect.height >= containerPadding : deltaY <= container.height) && (deltaX < containerPadding ? deltaX + rect.width >= containerPadding : deltaX <= container.width);\r\n}\r\n"],"mappings":";;;IAEA;;;;;;;OAOG;IACH,gBAA+B,IAAiB,EAAE,SAA4C,EAAE,gBAAoB;QAApB,iCAAA,EAAA,oBAAoB;QAChH,SAAS,GAAI,SAAoC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAmC,CAAC,CAAC,CAAC,CAAC,SAAqB,CAAC;QACtI,IAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QACpC,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,IAAI,gBAAgB,CAAC,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;IACpN,CAAC;IAND,yBAMC"}
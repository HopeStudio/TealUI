{"version":3,"file":"class.js","sources":["class.ts"],"sourcesContent":["/**\r\n * 表示一个类。\r\n */\r\nexport default class Class {\r\n\r\n    /**\r\n     * 继承当前类创建新的子类。\r\n     * @param prototype 子类实例成员。其中 `contructor` 表示子类的构造函数。\r\n     * @return 返回一个新类。\r\n     * @desc\r\n     * - 只支持单继承。\r\n     * - 子类的构造函数会覆盖父类构造函数。\r\n     * - 定义的引用成员会被所有实例共用，引用类型的字段应在构造函数中赋初始值。\r\n     * @example\r\n     * var MyClass = Class.extend({name: \"xuld\"});  // 创建子类。\r\n     * var obj = new MyClass();                     // 创建子类的实例。\r\n     * console.log(obj.name);\r\n     */\r\n    static extend(prototype?: any) {\r\n\r\n        // 未指定函数则使用默认构造函数(Object.prototype.constructor)。\r\n        prototype = prototype || {};\r\n\r\n        let subClass: { new(...args: any[]): any; extend: (typeof Class)[\"extend\"] };\r\n\r\n        // 生成缺省构造函数：直接调用父类构造函数 。\r\n        if (!Object.prototype.hasOwnProperty.call(prototype, \"constructor\")) {\r\n            prototype.constructor = function Object() {\r\n                if ((subClass as any).__proto__ !== Class) {\r\n                    return (subClass as any).__proto__.apply(this, arguments);\r\n                }\r\n            };\r\n        }\r\n\r\n        // 直接使用构造函数作为类型本身。\r\n        subClass = prototype.constructor;\r\n\r\n        // 设置派生类的原型。\r\n        subClass.prototype = prototype;\r\n\r\n        /*@cc_on\r\n\r\n        // IE6-9: 不支持 __proto__\r\n        if (!('__proto__' in Object.prototype)) {\r\n            let key;\r\n            function BaseClass() {\r\n                for (key in prototype) {\r\n                    this[key] = prototype[key];\r\n                }\r\n                // IE6-8 无法遍历 JS 内置 constructor 属性，这里手动覆盖。\r\n                this.constructor = subClass;\r\n            };\r\n            for (key in this) {\r\n                subClass[key] = this[key];\r\n            }\r\n            BaseClass.prototype = this.prototype;\r\n            subClass.prototype = new BaseClass;\r\n        }\r\n\r\n        @*/\r\n\r\n        (subClass as any).__proto__ = this;\r\n        prototype.__proto__ = this.prototype;\r\n\r\n        return subClass;\r\n\r\n    }\r\n\r\n}\r\n"],"mappings":";;;IAAA;;OAEG;IACH;QAAA;QAiEA,CAAC;QA/DG;;;;;;;;;;;;WAYG;QACI,YAAM,GAAb,UAAc,SAAe;YAEzB,gDAAgD;YAChD,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;YAE5B,IAAI,QAAwE,CAAC;YAE7E,wBAAwB;YACxB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBAClE,SAAS,CAAC,WAAW,GAAG;oBACpB,EAAE,CAAC,CAAE,QAAgB,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC;wBACxC,MAAM,CAAE,QAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBAC9D,CAAC;gBACL,CAAC,CAAC;YACN,CAAC;YAED,kBAAkB;YAClB,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC;YAEjC,YAAY;YACZ,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;YAE/B;;;;;;;;;;;;;;;;;;;eAmBG;YAEF,QAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;YACnC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAErC,MAAM,CAAC,QAAQ,CAAC;QAEpB,CAAC;QAEL,YAAC;IAAD,CAAC,AAjED,IAiEC"}
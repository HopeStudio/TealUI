{"version":3,"file":"html.js","sources":["html.ts"],"sourcesContent":["/**\r\n * 编码 HTML 转义字符。\r\n * @param value 要编码的字符串。\r\n * @return 返回已编码的字符串。HTML 特殊字符 `&`、`<`、`>`、`'`、`\"` 分别会被编码成 `&amp;`、`&lt;`、`&gt;`、`&#39;`、`&quot;`。\r\n * @example encodeHTML(\"<a></a>\") // \"&lt;a&gt;&lt;/a&gt;\"\r\n */\r\nexport function encodeHTML(value: string) {\r\n    return value.replace(/[&<>'\"]/g, c => ({\r\n        \"&\": \"&amp;\",\r\n        \"<\": \"&lt;\",\r\n        \">\": \"&gt;\",\r\n        \"\\'\": \"&#39;\",\r\n        '\\\"': \"&quot;\"\r\n    } as any)[c]);\r\n}\r\n\r\n/**\r\n * 编码 HTML 属性转义字符。\r\n * @param value 要编码的字符串。\r\n * @return 返回已编码的字符串。HTML 属性转义字符 `'`、`\"` 分别会被编码成 `&#39;`、`&quot;`。\r\n * @example encodeHTMLAttribute(\"'\") // \"&#39;\"\r\n */\r\nexport function encodeHTMLAttribute(value: string) {\r\n    return value.replace(/['\"]/g, c => ({\r\n        \"\\'\": \"&#39;\",\r\n        '\\\"': \"&quot;\"\r\n    } as any)[c]);\r\n}\r\n\r\n/**\r\n * 解码 HTML 转义字符。\r\n * @param value 要解码的字符串。\r\n * @return 返回已解码的字符串。\r\n * @example decodeHTML(\"&lt;a&gt;&lt;/a&gt;\") // \"<a></a>\"\r\n */\r\nexport function decodeHTML(value: string) {\r\n    return value.replace(/&(#(\\d+)|\\w+);/g, (_: string, word: string, unicode: string) => unicode ? String.fromCharCode(+unicode) : (({\r\n        \"amp\": \"&\",\r\n        \"lt\": \"<\",\r\n        \"gt\": \">\",\r\n        \"quot\": '\\\"'\r\n    } as any)[word] || word));\r\n}\r\n\r\n/**\r\n * 为 HTML 属性值添加引号。\r\n * @param value HTML 属性值。\r\n * @param quote 要添加的引号。\r\n * @return 返回含引号的 HTML 属性。属性值的引号会被编码。\r\n * @example escapeHTMLAttribute(\"a\", '\"') // \"\\\"a\\\"\"\r\n */\r\nexport function wrapHTMLAttribute(value: string, quote?: string): string {\r\n    const q = quote && quote.charCodeAt(0);\r\n    return q === 34 /*\"*/ ? '\"' + value.replace(/\"/g, \"&quot;\") + '\"' :\r\n        q === 39 /*'*/ ? \"'\" + value.replace(/'/g, \"&#39;\") + \"'\" :\r\n            /[>\\s=\"']/.test(value) ? wrapHTMLAttribute(value, value.indexOf('\"') >= 0 && value.indexOf(\"\\'\") < 0 ? \"\\'\" : '\"') : value;\r\n}\r\n\r\n/**\r\n * 删除 HTML 属性值的引号。\r\n * @param value 含引号的 HTML 属性。\r\n * @return 返回原始 HTML 属性值。属性值的 HTML 会被解码。\r\n * @example unescapeHTMLAttribute(\"'a'\") // \"a\"\r\n */\r\nexport function unwrapHTMLAttribute(value: string) {\r\n    return decodeHTML(value.replace(/^(['\"])(.*)\\1$/, \"$2\"));\r\n}\r\n"],"mappings":";;IAAA;;;;;OAKG;IACH,oBAA2B,KAAa;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC;YACnC,GAAG,EAAE,OAAO;YACZ,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,MAAM;YACX,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,QAAQ;SACT,CAAC,CAAC,CAAC,CAAA,EAN0B,CAM1B,CAAC,CAAC;IAClB,CAAC;IARD,gCAQC;IAED;;;;;OAKG;IACH,6BAAoC,KAAa;QAC7C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC;YAChC,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,QAAQ;SACT,CAAC,CAAC,CAAC,CAAA,EAHuB,CAGvB,CAAC,CAAC;IAClB,CAAC;IALD,kDAKC;IAED;;;;;OAKG;IACH,oBAA2B,KAAa;QACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAC,CAAS,EAAE,IAAY,EAAE,OAAe,IAAK,OAAA,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAE;YAC9H,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,IAAI;SACP,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAL8D,CAK9D,CAAC,CAAC;IAC9B,CAAC;IAPD,gCAOC;IAED;;;;;;OAMG;IACH,2BAAkC,KAAa,EAAE,KAAc;QAC3D,IAAM,CAAC,GAAG,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;YAC/D,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;gBACvD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACvI,CAAC;IALD,8CAKC;IAED;;;;;OAKG;IACH,6BAAoC,KAAa;QAC7C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAFD,kDAEC"}
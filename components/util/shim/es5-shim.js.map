{"version":3,"file":"es5-shim.js","sources":["es5-shim.ts"],"sourcesContent":["import \"./json-shim\";\r\n\r\n/**\r\n * 创建一个拥有指定原型和若干个属性的对象。\r\n * @param proto 原型对象。\r\n * @param properties 包含的属性。\r\n * @return 返回创建的对象。\r\n * @example Object.create({a: 3, b: 5}) // {a: 3, b: 5}\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\r\n */\r\nObject.create = Object.create || function (proto: object | null, properties?: PropertyDescriptorMap & ThisType<any>) {\r\n    function Temp() { }\r\n    Temp.prototype = proto;\r\n    const r = new (Temp as any)();\r\n    for (const key in properties!) {\r\n        Object.defineProperty(r, key, properties![key]);\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 定义或修改对象的属性。\r\n * @param obj 对象。\r\n * @param prop 要定义或修改的属性名。\r\n * @param descriptor 要定义或修改的属性描述符。\r\n * @return 返回原对象。\r\n * @example Object.defineProperty({}, \"prop\", {value: 1})\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\r\n */\r\nObject.defineProperty = Object.defineProperty || function (obj: any, prop: string, descriptor: PropertyDescriptor) {\r\n    if (descriptor.get) {\r\n        obj.__defineGetter__(prop, descriptor.get);\r\n    }\r\n    if (descriptor.set) {\r\n        obj.__defineSetter__(prop, descriptor.set);\r\n    }\r\n    if (\"value\" in descriptor) {\r\n        obj[prop] = descriptor.value;\r\n    }\r\n};\r\n\r\n/**\r\n * 定义或修改对象的多个属性。\r\n * @param obj 对象。\r\n * @param props 要定义或修改的属性名和描述符组成的键值对。\r\n * @return 返回原对象。\r\n * @example Object.defineProperties({}, { props: value: 1 })\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\r\n */\r\nObject.defineProperties = Object.defineProperties || function (obj: any, props: PropertyDescriptorMap) {\r\n    for (const key in props) {\r\n        Object.defineProperty(obj, key, props[key]);\r\n    }\r\n};\r\n\r\n/**\r\n * 返回对象的原型。\r\n * @param obj 对象。\r\n * @return 返回原型对象。\r\n * @example Object.getPrototypeOf({}) // Object.prototype\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\r\n */\r\nObject.getPrototypeOf = Object.getPrototypeOf || function (obj: any) {\r\n    const proto = obj.__proto__;\r\n    if (proto || proto === null) {\r\n        return proto;\r\n    }\r\n    if (obj.constructor) {\r\n        return obj.constructor.prototype;\r\n    }\r\n    return Object.prototype;\r\n};\r\n\r\n/**\r\n * 获取对象自身的所有键。\r\n * @param obj 对象。\r\n * @return 返回所有键组成的数组。\r\n * @example Object.keys({a: 3, b: 5}) // [\"a\", \"b\"]\r\n * @example Object.keys([0, 1]) // [\"0\", \"1\"]\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\r\n */\r\nObject.keys = Object.keys || function <T>(obj: T) {\r\n    const r: (keyof T)[] = [];\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            r.push(key);\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 冻结一个对象，禁止增删改对象的属性。\r\n * @param obj 要被冻结的对象。\r\n * @return 返回已冻结的对象。\r\n * @example Object.freeze({}) // {}\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n */\r\nObject.freeze = Object.freeze || function <T>(obj: T) {\r\n    return obj;\r\n};\r\n\r\n/**\r\n * 判断一个对象是否已被冻结。\r\n * @param obj 要判断的对象。\r\n * @return 如果已被冻结则返回 true，否则返回 false。\r\n * @example Object.isFrozen({}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\r\n */\r\nObject.isFrozen = Object.isFrozen || function (obj: any) {\r\n    return false;\r\n};\r\n\r\n/**\r\n * 密封一个对象，禁止增删对象的属性。\r\n * @param obj 要被密封的对象。\r\n * @return 返回已密封的对象。\r\n * @example Object.seal({}) // {}\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\r\n */\r\nObject.seal = Object.seal || function <T>(obj: T) {\r\n    return obj;\r\n};\r\n\r\n/**\r\n * 禁止增加对象的新属性。\r\n * @param obj 要被禁止的对象。\r\n * @return 返回已禁止的对象。\r\n * @example Object.freeze({}) // {}\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\r\n */\r\nObject.preventExtensions = Object.preventExtensions || function <T>(obj: T) {\r\n    return obj;\r\n};\r\n\r\n/**\r\n * 判断一个对象是否被密封。\r\n * @param obj 要判断的对象。\r\n * @return 如果已被密封则返回 true，否则返回 false。\r\n * @example Object.isSealed({}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\r\n */\r\nObject.isSealed = Object.isSealed || function (obj: any) {\r\n    return false;\r\n};\r\n\r\n/**\r\n * 判断一个对象是否可扩展。\r\n * @param obj 要判断的对象。\r\n * @return 如果不可扩展则返回 true，否则返回 false。\r\n * @example Object.isExtensible({}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\r\n */\r\nObject.isExtensible = Object.isExtensible || function (obj: any) {\r\n    return obj instanceof Object;\r\n};\r\n\r\n/**\r\n * 获取对象自有属性的描述符。\r\n * @param obj 对象。\r\n * @param prop 要获取的属性名。\r\n * @return 返回属性描述符（property descriptor），如果对象自身不含对应的属性名则返回 undefined。\r\n * @example Object.getOwnPropertyDescriptor({}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\r\n */\r\nObject.getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor || function (obj: any, prop: string) {\r\n    return obj.hasOwnProperty(prop) ? {\r\n        get: obj.__lookupGetter__(prop),\r\n        set: obj.__lookupSetter__(prop),\r\n        value: obj[prop]\r\n    } : undefined;\r\n};\r\n\r\n/**\r\n * 获取对象所有自有属性列表。\r\n * @param obj 对象。\r\n * @return 所有自有属性列表。\r\n * @example Object.getOwnPropertyNames({}) // []\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\r\n */\r\nObject.getOwnPropertyNames = Object.getOwnPropertyNames || Object.keys;\r\n\r\n/**\r\n * 判断一个对象是否是数组。\r\n * @param obj 要判断的对象。\r\n * @return 如果对象是原生数组则返回 true，否则返回 false。\r\n * @example Array.isArray([]) // true\r\n * @example Array.isArray(document.getElementsByTagName(\"div\")) // false\r\n * @example Array.isArray(new Array) // true\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\n */\r\nArray.isArray = Array.isArray || function (obj: any): obj is any[] {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n};\r\n\r\n/**\r\n * 查找指定项在数组内的第一个索引。\r\n * @param value 要查找的项。\r\n * @param startIndex 查找开始的位置。\r\n * @return 返回索引。如果找不到则返回 -1。\r\n * @example [\"a\", \"b\", \"b\", \"c\"].indexOf(\"b\") // 1\r\n * @example [\"a\", \"b\", \"b\", \"c\"].indexOf(\"e\") // -1\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\r\n */\r\nArray.prototype.indexOf = Array.prototype.indexOf || function <T>(this: T[], value: T, startIndex = 0) {\r\n    for (; startIndex < this.length; startIndex++) {\r\n        if (this[startIndex] === value) {\r\n            return startIndex;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\n/**\r\n * 查找指定项在数组内的最后一个索引。\r\n * @param value 要查找的项。\r\n * @param startIndex 查找开始的位置。\r\n * @return 返回索引。如果找不到则返回 -1。\r\n * @example [\"a\", \"b\", \"b\", \"c\"].lastIndexOf(\"b\") // 2\r\n * @example [\"a\", \"b\", \"b\", \"c\"].lastIndexOf(\"e\") // -1\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\r\n */\r\nArray.prototype.lastIndexOf = Array.prototype.lastIndexOf || function <T>(this: T[], value: T, startIndex = 0) {\r\n    for (let i = this.length - 1; i >= startIndex; i--) {\r\n        if (this[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\n/**\r\n * 对数组的每一项执行一次回调函数。\r\n * @param callback 回调函数。函数接收以下参数：\r\n * - value：当前项的值。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @example [\"a\", \"b\"].forEach(console.log, console) // 打印“0  a”和“1  b”\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\r\n */\r\nArray.prototype.forEach = Array.prototype.forEach || function <T>(this: T[], callback: (value: T, index: number, target: T[]) => void, thisArg?: any) {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i in this) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * 对数组的每一项执行一次回调函数，然后将每个结果组成新数组。\r\n * @param callback 回调函数。函数接收以下参数：\r\n * - value：当前项的值。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 函数应返回新的结果。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 返回一个新数组。\r\n * @example [1, 9, 9, 0].map(function(item) { return item + 1; }) // [2, 10, 10, 1]\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/map\r\n */\r\nArray.prototype.map = Array.prototype.map || function <T, R>(this: T[], callback: (value: T, index: number, target: T[]) => R, thisArg?: any) {\r\n    const r: T[] = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i in this) {\r\n            r[i] = callback.call(thisArg, this[i], i, this);\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 筛选数组中符合条件的项并组成一个新数组。\r\n * @param callback 用于确定每一项是否符合条件的回调函数。函数接收以下参数：\r\n * - value：当前项的值。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 如果当前项符合条件应返回 true，否则返回 false。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 返回一个新数组。\r\n * @example [1, 2].filter(function(item) { return item > 1; }) // [2]\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\r\n */\r\nArray.prototype.filter = Array.prototype.filter || function <T>(this: T[], callback: (value: T, index: number, target: T[]) => boolean, thisArg?: any) {\r\n    const r: T[] = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        if ((i in this) && callback.call(thisArg, this[i], i, this)) {\r\n            r.push(this[i]);\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 判断数组的每一项是否都符合条件。\r\n * @param callback 用于确定每一项是否符合条件的回调函数。函数接收以下参数：\r\n * - value：当前项的值。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 如果当前项符合条件应返回 true，否则返回 false。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 如果所有项满足条件则返回 true，否则返回 false。\r\n * @example [1, 2].every(function(item) {return item > 0}) // true\r\n * @example [1, 2].every(function(item) {return item > 1}) // false\r\n * @example [1, 2].every(function(item) {return item > 2}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/every\r\n */\r\nArray.prototype.every = Array.prototype.every || function <T>(this: T[], callback: (value: T, index: number, target: T[]) => boolean, thisArg?: any) {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if ((i in this) && !callback.call(thisArg, this[i], i, this)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * 判断数组中是否存在一项或多项符合条件。\r\n * @param callback 用于确定每一项是否符合条件的回调函数。函数接收以下参数：\r\n * - value：当前项的值。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 如果当前项符合条件应返回 true，否则返回 false。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 如果至少存在一项满足条件则返回 true，否则返回 false。\r\n * @example [1, 2].some(function(item) {return item > 0}) // true\r\n * @example [1, 2].some(function(item) {return item > 1}) // true\r\n * @example [1, 2].some(function(item) {return item > 2}) // false\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/some\r\n */\r\nArray.prototype.some = Array.prototype.some || function <T>(this: T[], callback: (value: T, index: number, target: T[]) => boolean, thisArg?: any) {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if ((i in this) && callback.call(thisArg, this[i], i, this)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * 从左往右依次合并数组中的每一项并最终返回一个值。\r\n * @param callback 用于合并两个项的回调函数。函数接收以下参数：\r\n * - previousValue：要合并的前一项。\r\n * - currentValue：要合并的当前项。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 函数应合并的结果。\r\n * @param initialValue 用于合并第一项的初始值。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 返回合并后的最终结果值。\r\n * @example [1, 2].reduce(function(x, y) { return x + y; }) // 3\r\n * @example [1, 2].reduce(function(x, y) { return x + y; }, 10) // 13\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\r\n */\r\nArray.prototype.reduce = Array.prototype.reduce || function <T, R>(this: T[], callback: (previousValue: R, currentValue: T, index: number, target: T[]) => R, initialValue?: R) {\r\n    let r: R | undefined;\r\n    let first = true;\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i in this) {\r\n            if (first) {\r\n                first = false;\r\n                r = initialValue === undefined ? this[i] as any : callback(initialValue, this[i], i, this);\r\n            } else {\r\n                r = callback(r!, this[i], i, this);\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 从右往左依次合并数组中的每一项并最终返回一个值。\r\n * @param callback 用于合并两个项的回调函数。函数接收以下参数：\r\n * - previousValue：要合并的前一项。\r\n * - currentValue：要合并的当前项。\r\n * - index：当前项的索引。\r\n * - target：数组本身。\r\n *\r\n * 函数应合并的结果。\r\n * @param initialValue 用于合并第一项的初始值。\r\n * @param thisArg 执行回调函数时 this 的值。\r\n * @return 返回合并后的最终结果值。\r\n * @example [1, 2].reduceRight(function(x, y) {return x + y}) // 3\r\n * @example [1, 2].reduceRight(function(x, y) {return x + y}, 10) // 13\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\r\n */\r\nArray.prototype.reduceRight = Array.prototype.reduceRight || function <T, R>(this: T[], callback: (previousValue: R, currentValue: T, index: number, target: T[]) => R, initialValue?: R) {\r\n    let r: R | undefined;\r\n    let first = true;\r\n    for (let i = this.length; --i >= 0;) {\r\n        if (i in this) {\r\n            if (first) {\r\n                first = false;\r\n                r = initialValue === undefined ? this[i] as any : callback(initialValue, this[i], i, this);\r\n            } else {\r\n                r = callback(r!, this[i], i, this);\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\n/**\r\n * 去除字符串的首尾空格。\r\n * @return 返回新字符串。\r\n * @example \"  a\".trim() // \"a\"\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/trim\r\n */\r\nString.prototype.trim = String.prototype.trim || function (this: string) {\r\n    return this.replace(/^[\\s\\u00A0]+|[\\s\\u00A0]+$/g, \"\");\r\n};\r\n\r\n/**\r\n * 获取当前时间戳。\r\n * @return 返回当前时间和 1970/1/1 08:00:00 的相差毫秒数。\r\n * @example Date.now() // 相当于 new Date().getTime()\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/now\r\n */\r\nDate.now = Date.now || function () {\r\n    return +new Date();\r\n};\r\n\r\n/**\r\n * 返回一个 ISO（ISO 8601 Extended Format）格式的字符串（YYYY-MM-DDTHH:mm:ss.sssZ）。\r\n * @return 返回 ISO 格式的字符串。时区总是 UTC（协调世界时），加一个后缀“Z”标识。\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\r\n */\r\nDate.prototype.toISOString = Date.prototype.toISOString || function (this: Date) {\r\n    return `${this.getUTCFullYear()}-${this.getUTCMonth() + 1}-${this.getUTCDate()}T${this.getUTCHours()}:${this.getUTCMinutes()}:${this.getUTCSeconds()}.${(this.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5)}Z`.replace(/([-T:])(\\d\\D)/g, \"$10$2\");\r\n};\r\n\r\n/**\r\n * 返回一个新函数，这个函数执行时 this 始终为指定的值。\r\n * @param thisArg 要绑定的 this 的值。\r\n * @return 返回一个新函数。\r\n * @example (function(){ return this; }).bind([0])()[0] // 0\r\n * @since ES5\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\r\n */\r\nFunction.prototype.bind = Function.prototype.bind || function (thisArg: any, ...args: any[]) {\r\n    return (...args2: any[]) => {\r\n        return this.apply(thisArg, args.concat(args2));\r\n    };\r\n};\r\n"],"mappings":"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"}
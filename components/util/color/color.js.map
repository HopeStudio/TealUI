{"version":3,"file":"color.js","sources":["color.ts"],"sourcesContent":["/**\r\n * 表示一个由红、绿、蓝三原色组成的颜色。\r\n */\r\nexport interface RGB {\r\n\r\n    /**\r\n     * 红值（Red）。范围为 0 到 255（含）。\r\n     */\r\n    r: number;\r\n\r\n    /**\r\n     * 绿值（Green）。范围为 0 到 255（含）。\r\n     */\r\n    g: number;\r\n\r\n    /**\r\n     * 蓝值（Blue）。范围为 0 到 255（含）。\r\n     */\r\n    b: number;\r\n\r\n    /**\r\n     * 透明度（Alpha）。范围为 0 到 1（含）。\r\n     */\r\n    a?: number;\r\n\r\n}\r\n\r\n/**\r\n * 表示一个由色调、饱和度、亮度组成的颜色。\r\n */\r\nexport interface HSL {\r\n\r\n    /**\r\n     * 色调（Hue）。范围为 0 到 359（含）。\r\n     */\r\n    h: number;\r\n\r\n    /**\r\n     * 饱和度（Saturation）。范围为 0 到 1（含）。\r\n     */\r\n    s: number;\r\n\r\n    /**\r\n     * 亮度（Lightness）。范围为 0 到 1（含）。\r\n     */\r\n    l: number;\r\n\r\n    /**\r\n     * 透明度（Alpha）。范围为 0 到 1（含）。\r\n     */\r\n    a?: number;\r\n\r\n}\r\n\r\n/**\r\n * 表示一个由色调、饱和度、明度组成的颜色。\r\n */\r\nexport interface HSV {\r\n\r\n    /**\r\n     * 色调（Hue）。范围为 0 到 359（含）。\r\n     */\r\n    h: number;\r\n\r\n    /**\r\n     * 饱和度（Saturation）。范围为 0 到 1（含）。\r\n     */\r\n    s: number;\r\n\r\n    /**\r\n     * 明度（Value）。范围为 0 到 1（含）。\r\n     */\r\n    v: number;\r\n\r\n    /**\r\n     * 透明度（Alpha）。范围为 0 到 1（含）。\r\n     */\r\n    a?: number;\r\n\r\n}\r\n\r\n/**\r\n * 表示一个颜色。\r\n * @desc\r\n * 颜色有以下格式：\r\n * - `{r: 0, g: 0, b: 0, a: 1}`\r\n * - `{h: 0, s: 0, l: 0, a: 1}`\r\n * - `{h: 0, s: 0, v: 0, a: 1}`\r\n * - `\"#000\"`\r\n * - `\"#000000\"`\r\n * - `\"#000000ff\"`\r\n * - `\"rgb(0, 0, 0)\"`\r\n * - `\"rgba(0, 0, 0, 1)\"`\r\n * - `\"hsl(0, 0, 0)\"`\r\n * - `\"hsla(0, 0, 0, 1)\"`\r\n * - 0x000000\r\n */\r\nexport type Color = string | RGB | HSL | HSV | number;\r\n\r\n/**\r\n * 将任意颜色格式转为 RGB 对象格式。\r\n * @param color 要转换的颜色。\r\n * @return 返回包含 RGB 信息的对象。如果原对象已经是 RGB 格式则返回原对象。\r\n * @example toRGB(\"#000\") // {r: 0, g: 0, b: 0}\r\n * @example toRGB(\"#ff0000\") // {r: 255, g: 0, b: 0}\r\n * @example toRGB(\"#ff0000ff\") // {r: 255, g: 0, b: 0, a: 1}\r\n * @example toRGB(\"rgb(255,0,0)\") // {r: 255, g: 0, b: 0, a: 1}\r\n * @example toRGB(\"rgba(255,0,0,0.9)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB(\"hsl(255,0,0)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB(\"hsla(255,0,0,0.9)\") // {r: 255, g: 0, b: 0, a: 0.9}\r\n * @example toRGB({h:255, s: 0, l: 0}) // {r: 255, g: 0, b: 0}\r\n * @example toRGB({h:255, s: 0, l: 0, a: 0}) // {r: 255, g: 0, b: 0}\r\n */\r\nexport function toRGB(color: Color): RGB {\r\n    if (typeof color === \"string\") {\r\n        // #ff0000，ff0000ff\r\n        let match = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/.exec(color);\r\n        if (match) {\r\n            return {\r\n                r: parseInt(match[1], 16),\r\n                g: parseInt(match[2], 16),\r\n                b: parseInt(match[3], 16),\r\n                a: match[4] ? parseInt(match[4], 16) / 255 : undefined\r\n            };\r\n        }\r\n\r\n        // #ff0\r\n        match = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/.exec(color);\r\n        if (match) {\r\n            return {\r\n                r: parseInt(match[1] + match[1], 16),\r\n                g: parseInt(match[2] + match[2], 16),\r\n                b: parseInt(match[3] + match[3], 16)\r\n            };\r\n        }\r\n\r\n        // rgb(255,0,0)，rgba(255,0,0,0.9)\r\n        match = /rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(color);\r\n        if (match) {\r\n            return {\r\n                r: parseInt(match[1]),\r\n                g: parseInt(match[2]),\r\n                b: parseInt(match[3]),\r\n                a: match[4] ? parsePercent(match[4]) : undefined\r\n            };\r\n        }\r\n\r\n        // hsl(255,0,0)，hsla(255,0,0,0.9)\r\n        match = /hsla?\\s*\\(\\s*(\\d+)\\s*,\\s*([\\d\\.]+%?)\\s*,\\s*([\\d\\.]+%?)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(color);\r\n        if (!match) {\r\n            return {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0\r\n            };\r\n        }\r\n\r\n        color = {\r\n            h: parseInt(match[1]),\r\n            s: parsePercent(match[2]),\r\n            l: parsePercent(match[3]),\r\n            a: match[4] ? parsePercent(match[4]) : undefined\r\n        };\r\n    }\r\n\r\n    if (typeof color === \"number\") {\r\n        return intToRGB(color);\r\n    }\r\n\r\n    if (typeof (color as HSL).l === \"number\") {\r\n        return hslToRGB((color as HSL).h, (color as HSL).s, (color as HSL).l, (color as HSL).a);\r\n    }\r\n\r\n    if (typeof (color as HSV).v === \"number\") {\r\n        return hsvToRGB((color as HSV).h, (color as HSV).s, (color as HSV).v, (color as HSV).a);\r\n    }\r\n\r\n    return color as RGB;\r\n}\r\n\r\n/**\r\n * 将任意颜色格式转为 HSL 对象格式。\r\n * @param color 要转换的颜色。\r\n * @return 返回包含 HSL 信息的对象。如果原对象已经是 HSL 格式则返回原对象。\r\n * @example toHSL(\"#000\") // {h: 0, s: 0, l: 0}\r\n */\r\nexport function toHSL(color: Color): HSL {\r\n    if (typeof color === \"string\") {\r\n        // hsl(255,0,0)，hsla(255,0,0,0.9)\r\n        let match = /hsla?\\s*\\(\\s*(\\d+)\\s*,\\s*([\\d\\.]+%?)\\s*,\\s*([\\d\\.]+%?)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(color);\r\n        if (match) {\r\n            return {\r\n                h: parseInt(match[1]),\r\n                s: parsePercent(match[2]),\r\n                l: parsePercent(match[3]),\r\n                a: match[4] ? parsePercent(match[4]) : undefined\r\n            };\r\n        }\r\n\r\n        if ((match = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?$/.exec(color))) {\r\n            // #ff0000，ff0000ff\r\n            color = {\r\n                r: parseInt(match[1], 16),\r\n                g: parseInt(match[2], 16),\r\n                b: parseInt(match[3], 16),\r\n                a: match[4] ? parseInt(match[4], 16) / 255 : undefined\r\n            };\r\n        } else if ((match = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/.exec(color))) {\r\n            // #ff0\r\n            color = {\r\n                r: parseInt(match[1] + match[1], 16),\r\n                g: parseInt(match[2] + match[2], 16),\r\n                b: parseInt(match[3] + match[3], 16)\r\n            };\r\n        } else if ((match = /rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*([\\d\\.]+%?))?\\)/.exec(color))) {\r\n            // rgb(255,0,0)，rgba(255,0,0,0.9)\r\n            color = {\r\n                r: parseInt(match[1]),\r\n                g: parseInt(match[2]),\r\n                b: parseInt(match[3]),\r\n                a: match[4] ? parsePercent(match[4]) : undefined\r\n            };\r\n        } else {\r\n            return {\r\n                h: 0,\r\n                s: 0,\r\n                l: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    if (typeof (color as HSV).v === \"number\") {\r\n        color = toRGB(color);\r\n    }\r\n\r\n    if (typeof (color as RGB).r === \"number\") {\r\n        return rgbToHSL((color as RGB).r, (color as RGB).g, (color as RGB).b, (color as RGB).a);\r\n    }\r\n\r\n    return color as HSL;\r\n}\r\n\r\n/**\r\n * 将任意颜色格式转为 HSV 对象格式。\r\n * @param color 要转换的颜色。\r\n * @return 返回包含 HSV 信息的对象。\r\n * @example toHSV(\"#000\") // {h: 0, s: 0, v: 0}\r\n */\r\nexport function toHSV(color: Color): HSV {\r\n    color = toRGB(color);\r\n    return rgbToHSV(color.r, color.g, color.b, color.a);\r\n}\r\n\r\n/**\r\n * 将任意格式的颜色转为 32 位整数。\r\n * @param color 要转换的颜色。\r\n * @return 返回 32 位整数，从高位到地位分别是：1 - 透明度、红值、绿值、蓝值。\r\n * @example toInt(\"#000\") // {h: 0, s: 0, v: 0}\r\n */\r\nexport function toInt(color: Color) {\r\n    const rgb = toRGB(color);\r\n    return rgbToInt(rgb.r, rgb.g, rgb.b, rgb.a);\r\n}\r\n\r\nfunction parsePercent(value: string) {\r\n    const num = parseFloat(value);\r\n    return /%$/.test(value) ? num / 100 : num;\r\n}\r\n\r\nfunction hslToRGB(h: number, s: number, l: number, a: number | undefined) {\r\n    let r: number;\r\n    let g: number;\r\n    let b: number;\r\n    if (s === 0) {\r\n        r = g = b = l;\r\n    } else {\r\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        const p = 2 * l - q;\r\n        h /= 360;\r\n        r = hueToRGB(p, q, h + 1 / 3);\r\n        g = hueToRGB(p, q, h);\r\n        b = hueToRGB(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: r * 255,\r\n        g: g * 255,\r\n        b: b * 255,\r\n        a: a\r\n    };\r\n}\r\n\r\nfunction hueToRGB(p: number, q: number, t: number) {\r\n    if (t < 0) t++;\r\n    if (t > 1) t--;\r\n    if (t * 6 < 1) return p + (q - p) * 6 * t;\r\n    if (t * 2 < 1) return q;\r\n    if (t * 3 < 2) return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\n\r\nfunction rgbToHSL(r: number, g: number, b: number, a: number | undefined) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h: number;\r\n    let s: number;\r\n    const l = (max + min) / 2;\r\n\r\n    if (max == min) {\r\n        h = s = 0;\r\n    } else {\r\n        const d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            default: h = (r - g) / d + 4; break;\r\n        }\r\n        h *= 60;\r\n    }\r\n\r\n    return { h, s, l, a };\r\n}\r\n\r\nfunction rgbToHSV(r: number, g: number, b: number, a: number | undefined) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h: number;\r\n    let s: number;\r\n    const v = max;\r\n\r\n    const d = max - min;\r\n    s = max == 0 ? 0 : d / max;\r\n\r\n    if (max == min) {\r\n        h = 0;\r\n    } else {\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            default: h = (r - g) / d + 4; break;\r\n        }\r\n        h *= 60;\r\n    }\r\n    return { h, s, v, a };\r\n}\r\n\r\nfunction hsvToRGB(h: number, s: number, v: number, a: number | undefined) {\r\n    let r: number;\r\n    let g: number;\r\n    let b: number;\r\n\r\n    const i = Math.floor(h * 6);\r\n    const f = h * 6 - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        default: r = v; g = p; b = q; break;\r\n    }\r\n\r\n    return {\r\n        r: r * 255,\r\n        g: g * 255,\r\n        b: b * 255,\r\n        a: a\r\n    };\r\n}\r\n\r\nfunction rgbToInt(r: number, g: number, b: number, a: number | undefined) {\r\n    return r << 16 | g << 8 | b | (a == undefined ? 0 : 1 - a) << 24;\r\n}\r\n\r\nfunction intToRGB(v: number) {\r\n    return {\r\n        r: (v >> 16) & 255,\r\n        g: (v >> 8) & 255,\r\n        b: v & 255,\r\n        a: 1 - ((v >> 24) & 255),\r\n    };\r\n}\r\n\r\n/**\r\n * 格式化颜色为字符串。\r\n * @param color 颜色。\r\n * @param format 颜色格式，可以使用以下值之一：\r\n * - `auto`：`#000000` 或 `rgba(0, 0, 0, 1)` 取最短的格式。\r\n * - `hex`：`#000` 或 `#000000` 或 `#000000ff` 取最短的格式。\r\n * - `hex6`：`#000000` 或 `#000000ff` 取最短的格式。\r\n * - `hex8`：`#000000ff`。\r\n * - `rgb`：`rgb(0, 0, 0)` 或 `rgba(0, 0, 0, 1)` 取最短的格式。\r\n * - `rgba`：`rgba(0, 0, 0, 1)`。\r\n * - `hsl`：`hsl(0, 0, 0)` 或 `hsla(0, 0, 0, 1)` 取最短的格式。\r\n * - `hsla`：`hsla(0, 0, 0, 1)`。\r\n * @return 返回格式化后的字符串。\r\n * @example format(\"rgb(0, 0, 0)\") // \"#000000\"\r\n */\r\nexport function format(color: Color, format: \"auto\" | \"hex\" | \"hex6\" | \"hex8\" | \"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" = \"auto\"): string {\r\n    if (format === \"hsl\" || format === \"hsla\") {\r\n        color = toHSL(color);\r\n        if (color.a! < 1 || format === \"hsla\") {\r\n            return `hsla(${color.h},${color.s},${color.l},${color.a == undefined ? 1 : color.a})`;\r\n        } else {\r\n            return `hsl(${color.h},${color.s},${color.l})`;\r\n        }\r\n    } else {\r\n        color = toRGB(color);\r\n        if (color.a! < 1 && (format === \"auto\" || format === \"rgb\") || format === \"rgba\") {\r\n            return `rgba(${color.r},${color.g},${color.b},${color.a == undefined ? 1 : color.a})`;\r\n        }\r\n\r\n        if (format === \"rgb\") {\r\n            return `rgb(${color.r},${color.g},${color.b})`;\r\n        }\r\n\r\n        let r = `#${hex(color.r)}${hex(color.g)}${hex(color.b)}`;\r\n        if (color.a! < 1) {\r\n            r += hex(Math.round(color.a! * 255));\r\n        } else if (format === \"hex\") {\r\n            r = r.replace(/#(.)\\1(.)\\2(.)\\3/, \"#$1$2$3\");\r\n        }\r\n        return r;\r\n    }\r\n}\r\n\r\nfunction hex(num: number) {\r\n    if (num <= 0) return \"00\";\r\n    if (num > 255) return \"ff\";\r\n    const str = Math.round(num).toString(16);\r\n    return str.length < 2 ? \"0\" + str : str;\r\n}\r\n\r\n/**\r\n * 调整颜色的色相。\r\n * @param color 颜色。\r\n * @param value 要增加的色相值。范围为 -359 到 359。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example spin(\"#666\", 50) // \"#666666\"\r\n */\r\nexport function spin<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.h += value;\r\n    return convert(hsl, color);\r\n}\r\n\r\n/**\r\n * 调整颜色的饱和度。\r\n * @param color 颜色。\r\n * @param value 要增加的饱和度。范围为 -1 到 1。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example saturate(\"#666\", 0.5) // \"#993333\"\r\n */\r\nexport function saturate<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.s += value;\r\n    return convert(hsl, color);\r\n}\r\n\r\n/**\r\n * 减少颜色的亮度。\r\n * @param color 颜色。\r\n * @param value 要减少的亮度。范围为 0 到 1。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example darken(\"#666\", 0.5) // \"#000000\"\r\n */\r\nexport function darken<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.l -= value;\r\n    return convert(hsl, color);\r\n}\r\n\r\n/**\r\n * 增加颜色的亮度。\r\n * @param color 颜色。\r\n * @param value 要增加的亮度。范围为 0 到 1。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example lighten(\"#666\", 0.5) // \"#e6e6e6\"\r\n */\r\nexport function lighten<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.l += value;\r\n    return convert(hsl, color);\r\n}\r\n\r\n/**\r\n * 调整颜色的透明度。\r\n * @param color 颜色。\r\n * @param value 要增加的透明度。范围为 -1 到 1。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example fade(\"#666\", 0.5) // \"rgba(102,102,102,0.5)\"\r\n */\r\nexport function fade<T extends Color>(color: T, value: number) {\r\n    const hsl = toHSL(color);\r\n    hsl.a = (hsl.a == undefined ? 1 : 0) - value;\r\n    return convert(hsl, color);\r\n}\r\n\r\n/**\r\n * 设置颜色的透明度。\r\n * @param color 颜色。\r\n * @param value 要设置的透明度。范围为 -1 到 1。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example alpha(\"#666\", 0.5) // \"rgba(102,102,102,0.5)\"\r\n */\r\nexport function alpha<T extends Color>(color: T, value: number) {\r\n    const rgb = toRGB(color);\r\n    rgb.a = value;\r\n    return convert(rgb, color);\r\n}\r\n\r\n/**\r\n * 获取颜色的反色。\r\n * @param color 颜色。\r\n * @return 返回新颜色，格式同原颜色。\r\n * @example invert(\"#666\") // \"#999999\"\r\n */\r\nexport function invert<T extends Color>(color: T) {\r\n    const rgb = toRGB(color);\r\n    return convert({\r\n        r: 255 - rgb.r,\r\n        g: 255 - rgb.g,\r\n        b: 255 - rgb.b,\r\n        a: rgb.a\r\n    }, color);\r\n}\r\n\r\n/**\r\n * 叠加两个颜色并返回新颜色。\r\n * @param color1 要叠加的第一个颜色。\r\n * @param color2 要叠加的第二个颜色。\r\n * @param weight 第二个颜色的透明度。\r\n * @return 返回新颜色，格式同第一个颜色。\r\n * @example mix(\"#0f0\", \"#f00\") // \"#808000\"\r\n */\r\nexport function mix<T extends Color>(color1: T, color2: Color, weight = 0.5) {\r\n    const rgb1 = toRGB(color1);\r\n    const rgb2 = toRGB(color2);\r\n    const w = weight * 2 - 1;\r\n    const alpha1 = rgb1.a == undefined ? 1 : rgb1.a;\r\n    const alpha2 = rgb2.a == undefined ? 1 : rgb2.a;\r\n    const a = alpha1 - alpha2;\r\n    const w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n    const w2 = 1 - w1;\r\n    return convert({\r\n        r: rgb1.r * w1 + rgb2.r * w2,\r\n        g: rgb1.g * w1 + rgb2.g * w2,\r\n        b: rgb1.b * w1 + rgb2.b * w2,\r\n        a: alpha1 * weight + alpha2 * (1 - weight)\r\n    }, color1);\r\n}\r\n\r\n/**\r\n * 获取颜色的亮度。\r\n * @param color 颜色。\r\n * @return 返回亮度，值越大亮度越高（越接近白色），范围为 0 到 1（含）。\r\n * @example luma(\"#666\") // 0.13286832155381795\r\n */\r\nexport function luma(color: Color) {\r\n    color = toRGB(color);\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n    g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n    b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\r\n/**\r\n * 计算和指定颜色对比度最大的颜色。\r\n * @param color 颜色。\r\n * @param color1 要比较的第一个颜色。\r\n * @param color2 要比较的第二个颜色。\r\n * @param threshold 对比度阀值。将优先选择亮度高于此值的颜色。\r\n * @return 返回给定两个颜色中的其中一个。\r\n * @example contrast(\"#666\", \"#000\", \"#fff\") // \"#ffffff\"\r\n */\r\nexport function contrast<T extends Color, U extends Color = T>(color: Color, color1: T, color2: U, threshold = 0.43) {\r\n    return (luma(color) < threshold) === (luma(color1) <= luma(color2)) ? color2 : color1;\r\n}\r\n\r\n/**\r\n * 将一个 HSL 或 RGB 颜色对象转为和指定颜色格式相同的格式。\r\n * @param color HSL 或 RGB 颜色对象。\r\n * @param type 目标颜色格式。\r\n * @return 返回指定格式的颜色。\r\n */\r\nfunction convert<T extends Color>(color: HSL | RGB, type: T) {\r\n    if (typeof type !== \"string\") {\r\n        if (typeof type === \"number\") {\r\n            return toInt(color);\r\n        }\r\n        const isRGB = typeof (color as RGB).r === \"number\";\r\n        if ((typeof (type as RGB).r === \"number\") === isRGB) {\r\n            return color;\r\n        }\r\n        return isRGB ? toRGB(color) : toHSL(color);\r\n    }\r\n    return format(color, /^#/.test(type) ? \"auto\" : /^hsl/.test(type) ? \"hsl\" : \"rgb\");\r\n}\r\n"],"mappings":"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"}
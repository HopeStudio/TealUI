{"version":3,"file":"currency.js","sources":["currency.ts"],"sourcesContent":["/**\r\n * 精确计算两个货币的和。\r\n * @param x 要计算的第一个货币值。最大不得超过 1 万亿，最多只能有两位小数。\r\n * @param y 要计算的第二个货币值。最大不得超过 1 万亿，最多只能有两位小数。\r\n * @return 返回计算的结果。\r\n * @example add(86.24, 0.1) // 86.34\r\n */\r\nexport function add(x: number, y: number) {\r\n    return Math.round((x + y) * 100) / 100;\r\n}\r\n\r\n/**\r\n * 精确计算两个货币的差。\r\n * @param x 要计算的第一个货币值。最大不得超过 1 万亿，最多只能有两位小数。\r\n * @param y 要计算的第二个货币值。最大不得超过 1 万亿，最多只能有两位小数。\r\n * @return 返回计算的结果。\r\n * @example sub(7, 0.8) // 6.2\r\n */\r\nexport function sub(x: number, y: number) {\r\n    return Math.round((x - y) * 100) / 100;\r\n}\r\n\r\n/**\r\n * 精确计算两个货币的积。\r\n * @param x 要计算的第一个货币值。最大不得超过 10 亿，最多只能有两位小数。\r\n * @param y 要计算的第二个货币值。最大不得超过 10 亿，最多只能有两位小数。\r\n * @return 返回计算的结果。\r\n * @example mul(7, 0.8) // 5.6\r\n */\r\nexport function mul(x: number, y: number) {\r\n    return Math.round((x * 1000) * (y * 1000)) / 1000000;\r\n}\r\n\r\n/**\r\n * 精确计算两个货币的商。\r\n * @param x 要计算的第一个货币值。最大不得超过 10 亿，最多只能有两位小数。\r\n * @param y 要计算的第二个货币值。最大不得超过 10 亿，最多只能有两位小数。\r\n * @return 返回计算的结果。\r\n * @example div(7, 0.8) // 8.75\r\n */\r\nexport function div(x: number, y: number) {\r\n    return Math.round(x * 1000 / y) / 1000;\r\n}\r\n\r\n/**\r\n * 保留小数点后两位四舍五入。\r\n * @param value 要计算的货币值。最大不得超过 10 亿。\r\n * @return 返回计算的结果。\r\n * @example round(86.245) // 86.25\r\n */\r\nexport function round(value: number) {\r\n    return Math.round(value * 100) / 100;\r\n}\r\n\r\n/**\r\n * 格式化货币为带“,”的字符串（如“86,234.25”）。\r\n * @param value 要格式化的货币值。最大不得超过 10 亿。\r\n * @return 返回格式化后的字符串。字符串保留两位小数四舍五入，整数部分每三位有一个“,”分隔符。\r\n * @example format(86234.245) // \"86,234.25\"\r\n */\r\nexport function format(value: number) {\r\n    const t = Math.round(Math.abs(value) * 100);\r\n    const r = Math.floor(value) + \"\";\r\n    const c = (r.length - 1) % 3 + (value < 0 ? 2 : 1);\r\n    return r.substr(0, c) + r.substr(c).replace(/(\\d{3})/g, \",$1\") + \".\" + Math.floor(t / 10) % 10 + t % 10;\r\n}\r\n"],"mappings":";;IAAA;;;;;;OAMG;IACH,aAAoB,CAAS,EAAE,CAAS;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,CAAC;IAFD,kBAEC;IAED;;;;;;OAMG;IACH,aAAoB,CAAS,EAAE,CAAS;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,CAAC;IAFD,kBAEC;IAED;;;;;;OAMG;IACH,aAAoB,CAAS,EAAE,CAAS;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC;IACzD,CAAC;IAFD,kBAEC;IAED;;;;;;OAMG;IACH,aAAoB,CAAS,EAAE,CAAS;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC3C,CAAC;IAFD,kBAEC;IAED;;;;;OAKG;IACH,eAAsB,KAAa;QAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACzC,CAAC;IAFD,sBAEC;IAED;;;;;OAKG;IACH,gBAAuB,KAAa;QAChC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5C,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACjC,IAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5G,CAAC;IALD,wBAKC"}
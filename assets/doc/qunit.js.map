{"version":3,"file":"qunit.js","sources":["qunit.js"],"sourcesContent":["/*!\r\n * QUnit 2.4.0\r\n * https://qunitjs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * https://jquery.org/license\r\n *\r\n * Date: 2017-07-08T15:20Z\r\n */\r\n(function (global$1) {\r\n  'use strict';\r\n\r\n  global$1 = global$1 && 'default' in global$1 ? global$1['default'] : global$1;\r\n\r\n  var window = global$1.window;\r\n  var self$1 = global$1.self;\r\n  var console = global$1.console;\r\n  var setTimeout = global$1.setTimeout;\r\n  var clearTimeout = global$1.clearTimeout;\r\n\r\n  var document = window && window.document;\r\n  var navigator = window && window.navigator;\r\n\r\n  var localSessionStorage = function () {\r\n  \tvar x = \"qunit-test-string\";\r\n  \ttry {\r\n  \t\tglobal$1.sessionStorage.setItem(x, x);\r\n  \t\tglobal$1.sessionStorage.removeItem(x);\r\n  \t\treturn global$1.sessionStorage;\r\n  \t} catch (e) {\r\n  \t\treturn undefined;\r\n  \t}\r\n  }();\r\n\r\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n    return typeof obj;\r\n  } : function (obj) {\r\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  var classCallCheck = function (instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n      throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n  };\r\n\r\n  var createClass = function () {\r\n    function defineProperties(target, props) {\r\n      for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) descriptor.writable = true;\r\n        Object.defineProperty(target, descriptor.key, descriptor);\r\n      }\r\n    }\r\n\r\n    return function (Constructor, protoProps, staticProps) {\r\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n      if (staticProps) defineProperties(Constructor, staticProps);\r\n      return Constructor;\r\n    };\r\n  }();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  var toConsumableArray = function (arr) {\r\n    if (Array.isArray(arr)) {\r\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\r\n\r\n      return arr2;\r\n    } else {\r\n      return Array.from(arr);\r\n    }\r\n  };\r\n\r\n  var toString = Object.prototype.toString;\r\n  var hasOwn = Object.prototype.hasOwnProperty;\r\n  var now = Date.now || function () {\r\n  \treturn new Date().getTime();\r\n  };\r\n\r\n  var defined = {\r\n  \tdocument: window && window.document !== undefined,\r\n  \tsetTimeout: setTimeout !== undefined\r\n  };\r\n\r\n  // Returns a new Array with the elements that are in a but not in b\r\n  function diff(a, b) {\r\n  \tvar i,\r\n  \t    j,\r\n  \t    result = a.slice();\r\n\r\n  \tfor (i = 0; i < result.length; i++) {\r\n  \t\tfor (j = 0; j < b.length; j++) {\r\n  \t\t\tif (result[i] === b[j]) {\r\n  \t\t\t\tresult.splice(i, 1);\r\n  \t\t\t\ti--;\r\n  \t\t\t\tbreak;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n  \treturn result;\r\n  }\r\n\r\n  /**\r\n   * Determines whether an element exists in a given array or not.\r\n   *\r\n   * @method inArray\r\n   * @param {Any} elem\r\n   * @param {Array} array\r\n   * @return {Boolean}\r\n   */\r\n  function inArray(elem, array) {\r\n  \treturn array.indexOf(elem) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Makes a clone of an object using only Array or Object as base,\r\n   * and copies over the own enumerable properties.\r\n   *\r\n   * @param {Object} obj\r\n   * @return {Object} New object with only the own properties (recursively).\r\n   */\r\n  function objectValues(obj) {\r\n  \tvar key,\r\n  \t    val,\r\n  \t    vals = is(\"array\", obj) ? [] : {};\r\n  \tfor (key in obj) {\r\n  \t\tif (hasOwn.call(obj, key)) {\r\n  \t\t\tval = obj[key];\r\n  \t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\r\n  \t\t}\r\n  \t}\r\n  \treturn vals;\r\n  }\r\n\r\n  function extend(a, b, undefOnly) {\r\n  \tfor (var prop in b) {\r\n  \t\tif (hasOwn.call(b, prop)) {\r\n  \t\t\tif (b[prop] === undefined) {\r\n  \t\t\t\tdelete a[prop];\r\n  \t\t\t} else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\r\n  \t\t\t\ta[prop] = b[prop];\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n\r\n  \treturn a;\r\n  }\r\n\r\n  function objectType(obj) {\r\n  \tif (typeof obj === \"undefined\") {\r\n  \t\treturn \"undefined\";\r\n  \t}\r\n\r\n  \t// Consider: typeof null === object\r\n  \tif (obj === null) {\r\n  \t\treturn \"null\";\r\n  \t}\r\n\r\n  \tvar match = toString.call(obj).match(/^\\[object\\s(.*)\\]$/),\r\n  \t    type = match && match[1];\r\n\r\n  \tswitch (type) {\r\n  \t\tcase \"Number\":\r\n  \t\t\tif (isNaN(obj)) {\r\n  \t\t\t\treturn \"nan\";\r\n  \t\t\t}\r\n  \t\t\treturn \"number\";\r\n  \t\tcase \"String\":\r\n  \t\tcase \"Boolean\":\r\n  \t\tcase \"Array\":\r\n  \t\tcase \"Set\":\r\n  \t\tcase \"Map\":\r\n  \t\tcase \"Date\":\r\n  \t\tcase \"RegExp\":\r\n  \t\tcase \"Function\":\r\n  \t\tcase \"Symbol\":\r\n  \t\t\treturn type.toLowerCase();\r\n  \t\tdefault:\r\n  \t\t\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\r\n  \t}\r\n  }\r\n\r\n  // Safe object type checking\r\n  function is(type, obj) {\r\n  \treturn objectType(obj) === type;\r\n  }\r\n\r\n  // Based on Java's String.hashCode, a simple but not\r\n  // rigorously collision resistant hashing function\r\n  function generateHash(module, testName) {\r\n  \tvar str = module + \"\\x1C\" + testName;\r\n  \tvar hash = 0;\r\n\r\n  \tfor (var i = 0; i < str.length; i++) {\r\n  \t\thash = (hash << 5) - hash + str.charCodeAt(i);\r\n  \t\thash |= 0;\r\n  \t}\r\n\r\n  \t// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\r\n  \t// strictly necessary but increases user understanding that the id is a SHA-like hash\r\n  \tvar hex = (0x100000000 + hash).toString(16);\r\n  \tif (hex.length < 8) {\r\n  \t\thex = \"0000000\" + hex;\r\n  \t}\r\n\r\n  \treturn hex.slice(-8);\r\n  }\r\n\r\n  // Test for equality any JavaScript type.\r\n  // Authors: Philippe RathÃ© <prathe@gmail.com>, David Chan <david@troi.org>\r\n  var equiv = (function () {\r\n\r\n  \t// Value pairs queued for comparison. Used for breadth-first processing order, recursion\r\n  \t// detection and avoiding repeated comparison (see below for details).\r\n  \t// Elements are { a: val, b: val }.\r\n  \tvar pairs = [];\r\n\r\n  \tvar getProto = Object.getPrototypeOf || function (obj) {\r\n  \t\treturn obj.__proto__;\r\n  \t};\r\n\r\n  \tfunction useStrictEquality(a, b) {\r\n\r\n  \t\t// This only gets called if a and b are not strict equal, and is used to compare on\r\n  \t\t// the primitive values inside object wrappers. For example:\r\n  \t\t// `var i = 1;`\r\n  \t\t// `var j = new Number(1);`\r\n  \t\t// Neither a nor b can be null, as a !== b and they have the same type.\r\n  \t\tif ((typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) === \"object\") {\r\n  \t\t\ta = a.valueOf();\r\n  \t\t}\r\n  \t\tif ((typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) === \"object\") {\r\n  \t\t\tb = b.valueOf();\r\n  \t\t}\r\n\r\n  \t\treturn a === b;\r\n  \t}\r\n\r\n  \tfunction compareConstructors(a, b) {\r\n  \t\tvar protoA = getProto(a);\r\n  \t\tvar protoB = getProto(b);\r\n\r\n  \t\t// Comparing constructors is more strict than using `instanceof`\r\n  \t\tif (a.constructor === b.constructor) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\t// Ref #851\r\n  \t\t// If the obj prototype descends from a null constructor, treat it\r\n  \t\t// as a null prototype.\r\n  \t\tif (protoA && protoA.constructor === null) {\r\n  \t\t\tprotoA = null;\r\n  \t\t}\r\n  \t\tif (protoB && protoB.constructor === null) {\r\n  \t\t\tprotoB = null;\r\n  \t\t}\r\n\r\n  \t\t// Allow objects with no prototype to be equivalent to\r\n  \t\t// objects with Object as their constructor.\r\n  \t\tif (protoA === null && protoB === Object.prototype || protoB === null && protoA === Object.prototype) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\treturn false;\r\n  \t}\r\n\r\n  \tfunction getRegExpFlags(regexp) {\r\n  \t\treturn \"flags\" in regexp ? regexp.flags : regexp.toString().match(/[gimuy]*$/)[0];\r\n  \t}\r\n\r\n  \tfunction isContainer(val) {\r\n  \t\treturn [\"object\", \"array\", \"map\", \"set\"].indexOf(objectType(val)) !== -1;\r\n  \t}\r\n\r\n  \tfunction breadthFirstCompareChild(a, b) {\r\n\r\n  \t\t// If a is a container not reference-equal to b, postpone the comparison to the\r\n  \t\t// end of the pairs queue -- unless (a, b) has been seen before, in which case skip\r\n  \t\t// over the pair.\r\n  \t\tif (a === b) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n  \t\tif (!isContainer(a)) {\r\n  \t\t\treturn typeEquiv(a, b);\r\n  \t\t}\r\n  \t\tif (pairs.every(function (pair) {\r\n  \t\t\treturn pair.a !== a || pair.b !== b;\r\n  \t\t})) {\r\n\r\n  \t\t\t// Not yet started comparing this pair\r\n  \t\t\tpairs.push({ a: a, b: b });\r\n  \t\t}\r\n  \t\treturn true;\r\n  \t}\r\n\r\n  \tvar callbacks = {\r\n  \t\t\"string\": useStrictEquality,\r\n  \t\t\"boolean\": useStrictEquality,\r\n  \t\t\"number\": useStrictEquality,\r\n  \t\t\"null\": useStrictEquality,\r\n  \t\t\"undefined\": useStrictEquality,\r\n  \t\t\"symbol\": useStrictEquality,\r\n  \t\t\"date\": useStrictEquality,\r\n\r\n  \t\t\"nan\": function nan() {\r\n  \t\t\treturn true;\r\n  \t\t},\r\n\r\n  \t\t\"regexp\": function regexp(a, b) {\r\n  \t\t\treturn a.source === b.source &&\r\n\r\n  \t\t\t// Include flags in the comparison\r\n  \t\t\tgetRegExpFlags(a) === getRegExpFlags(b);\r\n  \t\t},\r\n\r\n  \t\t// abort (identical references / instance methods were skipped earlier)\r\n  \t\t\"function\": function _function() {\r\n  \t\t\treturn false;\r\n  \t\t},\r\n\r\n  \t\t\"array\": function array(a, b) {\r\n  \t\t\tvar i, len;\r\n\r\n  \t\t\tlen = a.length;\r\n  \t\t\tif (len !== b.length) {\r\n\r\n  \t\t\t\t// Safe and faster\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n\r\n  \t\t\tfor (i = 0; i < len; i++) {\r\n\r\n  \t\t\t\t// Compare non-containers; queue non-reference-equal containers\r\n  \t\t\t\tif (!breadthFirstCompareChild(a[i], b[i])) {\r\n  \t\t\t\t\treturn false;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\treturn true;\r\n  \t\t},\r\n\r\n  \t\t// Define sets a and b to be equivalent if for each element aVal in a, there\r\n  \t\t// is some element bVal in b such that aVal and bVal are equivalent. Element\r\n  \t\t// repetitions are not counted, so these are equivalent:\r\n  \t\t// a = new Set( [ {}, [], [] ] );\r\n  \t\t// b = new Set( [ {}, {}, [] ] );\r\n  \t\t\"set\": function set$$1(a, b) {\r\n  \t\t\tvar innerEq,\r\n  \t\t\t    outerEq = true;\r\n\r\n  \t\t\tif (a.size !== b.size) {\r\n\r\n  \t\t\t\t// This optimization has certain quirks because of the lack of\r\n  \t\t\t\t// repetition counting. For instance, adding the same\r\n  \t\t\t\t// (reference-identical) element to two equivalent sets can\r\n  \t\t\t\t// make them non-equivalent.\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n\r\n  \t\t\ta.forEach(function (aVal) {\r\n\r\n  \t\t\t\t// Short-circuit if the result is already known. (Using for...of\r\n  \t\t\t\t// with a break clause would be cleaner here, but it would cause\r\n  \t\t\t\t// a syntax error on older Javascript implementations even if\r\n  \t\t\t\t// Set is unused)\r\n  \t\t\t\tif (!outerEq) {\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tinnerEq = false;\r\n\r\n  \t\t\t\tb.forEach(function (bVal) {\r\n  \t\t\t\t\tvar parentPairs;\r\n\r\n  \t\t\t\t\t// Likewise, short-circuit if the result is already known\r\n  \t\t\t\t\tif (innerEq) {\r\n  \t\t\t\t\t\treturn;\r\n  \t\t\t\t\t}\r\n\r\n  \t\t\t\t\t// Swap out the global pairs list, as the nested call to\r\n  \t\t\t\t\t// innerEquiv will clobber its contents\r\n  \t\t\t\t\tparentPairs = pairs;\r\n  \t\t\t\t\tif (innerEquiv(bVal, aVal)) {\r\n  \t\t\t\t\t\tinnerEq = true;\r\n  \t\t\t\t\t}\r\n\r\n  \t\t\t\t\t// Replace the global pairs list\r\n  \t\t\t\t\tpairs = parentPairs;\r\n  \t\t\t\t});\r\n\r\n  \t\t\t\tif (!innerEq) {\r\n  \t\t\t\t\touterEq = false;\r\n  \t\t\t\t}\r\n  \t\t\t});\r\n\r\n  \t\t\treturn outerEq;\r\n  \t\t},\r\n\r\n  \t\t// Define maps a and b to be equivalent if for each key-value pair (aKey, aVal)\r\n  \t\t// in a, there is some key-value pair (bKey, bVal) in b such that\r\n  \t\t// [ aKey, aVal ] and [ bKey, bVal ] are equivalent. Key repetitions are not\r\n  \t\t// counted, so these are equivalent:\r\n  \t\t// a = new Map( [ [ {}, 1 ], [ {}, 1 ], [ [], 1 ] ] );\r\n  \t\t// b = new Map( [ [ {}, 1 ], [ [], 1 ], [ [], 1 ] ] );\r\n  \t\t\"map\": function map(a, b) {\r\n  \t\t\tvar innerEq,\r\n  \t\t\t    outerEq = true;\r\n\r\n  \t\t\tif (a.size !== b.size) {\r\n\r\n  \t\t\t\t// This optimization has certain quirks because of the lack of\r\n  \t\t\t\t// repetition counting. For instance, adding the same\r\n  \t\t\t\t// (reference-identical) key-value pair to two equivalent maps\r\n  \t\t\t\t// can make them non-equivalent.\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n\r\n  \t\t\ta.forEach(function (aVal, aKey) {\r\n\r\n  \t\t\t\t// Short-circuit if the result is already known. (Using for...of\r\n  \t\t\t\t// with a break clause would be cleaner here, but it would cause\r\n  \t\t\t\t// a syntax error on older Javascript implementations even if\r\n  \t\t\t\t// Map is unused)\r\n  \t\t\t\tif (!outerEq) {\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tinnerEq = false;\r\n\r\n  \t\t\t\tb.forEach(function (bVal, bKey) {\r\n  \t\t\t\t\tvar parentPairs;\r\n\r\n  \t\t\t\t\t// Likewise, short-circuit if the result is already known\r\n  \t\t\t\t\tif (innerEq) {\r\n  \t\t\t\t\t\treturn;\r\n  \t\t\t\t\t}\r\n\r\n  \t\t\t\t\t// Swap out the global pairs list, as the nested call to\r\n  \t\t\t\t\t// innerEquiv will clobber its contents\r\n  \t\t\t\t\tparentPairs = pairs;\r\n  \t\t\t\t\tif (innerEquiv([bVal, bKey], [aVal, aKey])) {\r\n  \t\t\t\t\t\tinnerEq = true;\r\n  \t\t\t\t\t}\r\n\r\n  \t\t\t\t\t// Replace the global pairs list\r\n  \t\t\t\t\tpairs = parentPairs;\r\n  \t\t\t\t});\r\n\r\n  \t\t\t\tif (!innerEq) {\r\n  \t\t\t\t\touterEq = false;\r\n  \t\t\t\t}\r\n  \t\t\t});\r\n\r\n  \t\t\treturn outerEq;\r\n  \t\t},\r\n\r\n  \t\t\"object\": function object(a, b) {\r\n  \t\t\tvar i,\r\n  \t\t\t    aProperties = [],\r\n  \t\t\t    bProperties = [];\r\n\r\n  \t\t\tif (compareConstructors(a, b) === false) {\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n\r\n  \t\t\t// Be strict: don't ensure hasOwnProperty and go deep\r\n  \t\t\tfor (i in a) {\r\n\r\n  \t\t\t\t// Collect a's properties\r\n  \t\t\t\taProperties.push(i);\r\n\r\n  \t\t\t\t// Skip OOP methods that look the same\r\n  \t\t\t\tif (a.constructor !== Object && typeof a.constructor !== \"undefined\" && typeof a[i] === \"function\" && typeof b[i] === \"function\" && a[i].toString() === b[i].toString()) {\r\n  \t\t\t\t\tcontinue;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\t// Compare non-containers; queue non-reference-equal containers\r\n  \t\t\t\tif (!breadthFirstCompareChild(a[i], b[i])) {\r\n  \t\t\t\t\treturn false;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n\r\n  \t\t\tfor (i in b) {\r\n\r\n  \t\t\t\t// Collect b's properties\r\n  \t\t\t\tbProperties.push(i);\r\n  \t\t\t}\r\n\r\n  \t\t\t// Ensures identical properties name\r\n  \t\t\treturn typeEquiv(aProperties.sort(), bProperties.sort());\r\n  \t\t}\r\n  \t};\r\n\r\n  \tfunction typeEquiv(a, b) {\r\n  \t\tvar type = objectType(a);\r\n\r\n  \t\t// Callbacks for containers will append to the pairs queue to achieve breadth-first\r\n  \t\t// search order. The pairs queue is also used to avoid reprocessing any pair of\r\n  \t\t// containers that are reference-equal to a previously visited pair (a special case\r\n  \t\t// this being recursion detection).\r\n  \t\t//\r\n  \t\t// Because of this approach, once typeEquiv returns a false value, it should not be\r\n  \t\t// called again without clearing the pair queue else it may wrongly report a visited\r\n  \t\t// pair as being equivalent.\r\n  \t\treturn objectType(b) === type && callbacks[type](a, b);\r\n  \t}\r\n\r\n  \tfunction innerEquiv(a, b) {\r\n  \t\tvar i, pair;\r\n\r\n  \t\t// We're done when there's nothing more to compare\r\n  \t\tif (arguments.length < 2) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\t// Clear the global pair queue and add the top-level values being compared\r\n  \t\tpairs = [{ a: a, b: b }];\r\n\r\n  \t\tfor (i = 0; i < pairs.length; i++) {\r\n  \t\t\tpair = pairs[i];\r\n\r\n  \t\t\t// Perform type-specific comparison on any pairs that are not strictly\r\n  \t\t\t// equal. For container types, that comparison will postpone comparison\r\n  \t\t\t// of any sub-container pair to the end of the pair queue. This gives\r\n  \t\t\t// breadth-first search order. It also avoids the reprocessing of\r\n  \t\t\t// reference-equal siblings, cousins etc, which can have a significant speed\r\n  \t\t\t// impact when comparing a container of small objects each of which has a\r\n  \t\t\t// reference to the same (singleton) large object.\r\n  \t\t\tif (pair.a !== pair.b && !typeEquiv(pair.a, pair.b)) {\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// ...across all consecutive argument pairs\r\n  \t\treturn arguments.length === 2 || innerEquiv.apply(this, [].slice.call(arguments, 1));\r\n  \t}\r\n\r\n  \treturn function () {\r\n  \t\tvar result = innerEquiv.apply(undefined, arguments);\r\n\r\n  \t\t// Release any retained objects\r\n  \t\tpairs.length = 0;\r\n  \t\treturn result;\r\n  \t};\r\n  })();\r\n\r\n  /**\r\n   * Config object: Maintain internal state\r\n   * Later exposed as QUnit.config\r\n   * `config` initialized at top of scope\r\n   */\r\n  var config = {\r\n\r\n  \t// The queue of tests to run\r\n  \tqueue: [],\r\n\r\n  \t// Block until document ready\r\n  \tblocking: true,\r\n\r\n  \t// By default, run previously failed tests first\r\n  \t// very useful in combination with \"Hide passed tests\" checked\r\n  \treorder: true,\r\n\r\n  \t// By default, modify document.title when suite is done\r\n  \taltertitle: true,\r\n\r\n  \t// HTML Reporter: collapse every test except the first failing test\r\n  \t// If false, all failing tests will be expanded\r\n  \tcollapse: true,\r\n\r\n  \t// By default, scroll to top of the page when suite is done\r\n  \tscrolltop: true,\r\n\r\n  \t// Depth up-to which object will be dumped\r\n  \tmaxDepth: 5,\r\n\r\n  \t// When enabled, all tests must call expect()\r\n  \trequireExpects: false,\r\n\r\n  \t// Placeholder for user-configurable form-exposed URL parameters\r\n  \turlConfig: [],\r\n\r\n  \t// Set of all modules.\r\n  \tmodules: [],\r\n\r\n  \t// The first unnamed module\r\n  \tcurrentModule: {\r\n  \t\tname: \"\",\r\n  \t\ttests: [],\r\n  \t\tchildModules: [],\r\n  \t\ttestsRun: 0,\r\n  \t\tunskippedTestsRun: 0,\r\n  \t\thooks: {\r\n  \t\t\tbefore: [],\r\n  \t\t\tbeforeEach: [],\r\n  \t\t\tafterEach: [],\r\n  \t\t\tafter: []\r\n  \t\t}\r\n  \t},\r\n\r\n  \tcallbacks: {},\r\n\r\n  \t// The storage module to use for reordering tests\r\n  \tstorage: localSessionStorage\r\n  };\r\n\r\n  // take a predefined QUnit.config and extend the defaults\r\n  var globalConfig = window && window.QUnit && window.QUnit.config;\r\n\r\n  // only extend the global config if there is no QUnit overload\r\n  if (window && window.QUnit && !window.QUnit.version) {\r\n  \textend(config, globalConfig);\r\n  }\r\n\r\n  // Push a loose unnamed module to the modules collection\r\n  config.modules.push(config.currentModule);\r\n\r\n  // Based on jsDump by Ariel Flesler\r\n  // http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html\r\n  var dump = (function () {\r\n  \tfunction quote(str) {\r\n  \t\treturn \"\\\"\" + str.toString().replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\") + \"\\\"\";\r\n  \t}\r\n  \tfunction literal(o) {\r\n  \t\treturn o + \"\";\r\n  \t}\r\n  \tfunction join(pre, arr, post) {\r\n  \t\tvar s = dump.separator(),\r\n  \t\t    base = dump.indent(),\r\n  \t\t    inner = dump.indent(1);\r\n  \t\tif (arr.join) {\r\n  \t\t\tarr = arr.join(\",\" + s + inner);\r\n  \t\t}\r\n  \t\tif (!arr) {\r\n  \t\t\treturn pre + post;\r\n  \t\t}\r\n  \t\treturn [pre, inner + arr, base + post].join(s);\r\n  \t}\r\n  \tfunction array(arr, stack) {\r\n  \t\tvar i = arr.length,\r\n  \t\t    ret = new Array(i);\r\n\r\n  \t\tif (dump.maxDepth && dump.depth > dump.maxDepth) {\r\n  \t\t\treturn \"[object Array]\";\r\n  \t\t}\r\n\r\n  \t\tthis.up();\r\n  \t\twhile (i--) {\r\n  \t\t\tret[i] = this.parse(arr[i], undefined, stack);\r\n  \t\t}\r\n  \t\tthis.down();\r\n  \t\treturn join(\"[\", ret, \"]\");\r\n  \t}\r\n\r\n  \tfunction isArray(obj) {\r\n  \t\treturn (\r\n\r\n  \t\t\t//Native Arrays\r\n  \t\t\ttoString.call(obj) === \"[object Array]\" ||\r\n\r\n  \t\t\t// NodeList objects\r\n  \t\t\ttypeof obj.length === \"number\" && obj.item !== undefined && (obj.length ? obj.item(0) === obj[0] : obj.item(0) === null && obj[0] === undefined)\r\n  \t\t);\r\n  \t}\r\n\r\n  \tvar reName = /^function (\\w+)/,\r\n  \t    dump = {\r\n\r\n  \t\t// The objType is used mostly internally, you can fix a (custom) type in advance\r\n  \t\tparse: function parse(obj, objType, stack) {\r\n  \t\t\tstack = stack || [];\r\n  \t\t\tvar res,\r\n  \t\t\t    parser,\r\n  \t\t\t    parserType,\r\n  \t\t\t    objIndex = stack.indexOf(obj);\r\n\r\n  \t\t\tif (objIndex !== -1) {\r\n  \t\t\t\treturn \"recursion(\" + (objIndex - stack.length) + \")\";\r\n  \t\t\t}\r\n\r\n  \t\t\tobjType = objType || this.typeOf(obj);\r\n  \t\t\tparser = this.parsers[objType];\r\n  \t\t\tparserType = typeof parser === \"undefined\" ? \"undefined\" : _typeof(parser);\r\n\r\n  \t\t\tif (parserType === \"function\") {\r\n  \t\t\t\tstack.push(obj);\r\n  \t\t\t\tres = parser.call(this, obj, stack);\r\n  \t\t\t\tstack.pop();\r\n  \t\t\t\treturn res;\r\n  \t\t\t}\r\n  \t\t\treturn parserType === \"string\" ? parser : this.parsers.error;\r\n  \t\t},\r\n  \t\ttypeOf: function typeOf(obj) {\r\n  \t\t\tvar type;\r\n\r\n  \t\t\tif (obj === null) {\r\n  \t\t\t\ttype = \"null\";\r\n  \t\t\t} else if (typeof obj === \"undefined\") {\r\n  \t\t\t\ttype = \"undefined\";\r\n  \t\t\t} else if (is(\"regexp\", obj)) {\r\n  \t\t\t\ttype = \"regexp\";\r\n  \t\t\t} else if (is(\"date\", obj)) {\r\n  \t\t\t\ttype = \"date\";\r\n  \t\t\t} else if (is(\"function\", obj)) {\r\n  \t\t\t\ttype = \"function\";\r\n  \t\t\t} else if (obj.setInterval !== undefined && obj.document !== undefined && obj.nodeType === undefined) {\r\n  \t\t\t\ttype = \"window\";\r\n  \t\t\t} else if (obj.nodeType === 9) {\r\n  \t\t\t\ttype = \"document\";\r\n  \t\t\t} else if (obj.nodeType) {\r\n  \t\t\t\ttype = \"node\";\r\n  \t\t\t} else if (isArray(obj)) {\r\n  \t\t\t\ttype = \"array\";\r\n  \t\t\t} else if (obj.constructor === Error.prototype.constructor) {\r\n  \t\t\t\ttype = \"error\";\r\n  \t\t\t} else {\r\n  \t\t\t\ttype = typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\r\n  \t\t\t}\r\n  \t\t\treturn type;\r\n  \t\t},\r\n\r\n  \t\tseparator: function separator() {\r\n  \t\t\tif (this.multiline) {\r\n  \t\t\t\treturn this.HTML ? \"<br />\" : \"\\n\";\r\n  \t\t\t} else {\r\n  \t\t\t\treturn this.HTML ? \"&#160;\" : \" \";\r\n  \t\t\t}\r\n  \t\t},\r\n\r\n  \t\t// Extra can be a number, shortcut for increasing-calling-decreasing\r\n  \t\tindent: function indent(extra) {\r\n  \t\t\tif (!this.multiline) {\r\n  \t\t\t\treturn \"\";\r\n  \t\t\t}\r\n  \t\t\tvar chr = this.indentChar;\r\n  \t\t\tif (this.HTML) {\r\n  \t\t\t\tchr = chr.replace(/\\t/g, \"   \").replace(/ /g, \"&#160;\");\r\n  \t\t\t}\r\n  \t\t\treturn new Array(this.depth + (extra || 0)).join(chr);\r\n  \t\t},\r\n  \t\tup: function up(a) {\r\n  \t\t\tthis.depth += a || 1;\r\n  \t\t},\r\n  \t\tdown: function down(a) {\r\n  \t\t\tthis.depth -= a || 1;\r\n  \t\t},\r\n  \t\tsetParser: function setParser(name, parser) {\r\n  \t\t\tthis.parsers[name] = parser;\r\n  \t\t},\r\n\r\n  \t\t// The next 3 are exposed so you can use them\r\n  \t\tquote: quote,\r\n  \t\tliteral: literal,\r\n  \t\tjoin: join,\r\n  \t\tdepth: 1,\r\n  \t\tmaxDepth: config.maxDepth,\r\n\r\n  \t\t// This is the list of parsers, to modify them, use dump.setParser\r\n  \t\tparsers: {\r\n  \t\t\twindow: \"[Window]\",\r\n  \t\t\tdocument: \"[Document]\",\r\n  \t\t\terror: function error(_error) {\r\n  \t\t\t\treturn \"Error(\\\"\" + _error.message + \"\\\")\";\r\n  \t\t\t},\r\n  \t\t\tunknown: \"[Unknown]\",\r\n  \t\t\t\"null\": \"null\",\r\n  \t\t\t\"undefined\": \"undefined\",\r\n  \t\t\t\"function\": function _function(fn) {\r\n  \t\t\t\tvar ret = \"function\",\r\n\r\n\r\n  \t\t\t\t// Functions never have name in IE\r\n  \t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\r\n\r\n  \t\t\t\tif (name) {\r\n  \t\t\t\t\tret += \" \" + name;\r\n  \t\t\t\t}\r\n  \t\t\t\tret += \"(\";\r\n\r\n  \t\t\t\tret = [ret, dump.parse(fn, \"functionArgs\"), \"){\"].join(\"\");\r\n  \t\t\t\treturn join(ret, dump.parse(fn, \"functionCode\"), \"}\");\r\n  \t\t\t},\r\n  \t\t\tarray: array,\r\n  \t\t\tnodelist: array,\r\n  \t\t\t\"arguments\": array,\r\n  \t\t\tobject: function object(map, stack) {\r\n  \t\t\t\tvar keys,\r\n  \t\t\t\t    key,\r\n  \t\t\t\t    val,\r\n  \t\t\t\t    i,\r\n  \t\t\t\t    nonEnumerableProperties,\r\n  \t\t\t\t    ret = [];\r\n\r\n  \t\t\t\tif (dump.maxDepth && dump.depth > dump.maxDepth) {\r\n  \t\t\t\t\treturn \"[object Object]\";\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tdump.up();\r\n  \t\t\t\tkeys = [];\r\n  \t\t\t\tfor (key in map) {\r\n  \t\t\t\t\tkeys.push(key);\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\t// Some properties are not always enumerable on Error objects.\r\n  \t\t\t\tnonEnumerableProperties = [\"message\", \"name\"];\r\n  \t\t\t\tfor (i in nonEnumerableProperties) {\r\n  \t\t\t\t\tkey = nonEnumerableProperties[i];\r\n  \t\t\t\t\tif (key in map && !inArray(key, keys)) {\r\n  \t\t\t\t\t\tkeys.push(key);\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tkeys.sort();\r\n  \t\t\t\tfor (i = 0; i < keys.length; i++) {\r\n  \t\t\t\t\tkey = keys[i];\r\n  \t\t\t\t\tval = map[key];\r\n  \t\t\t\t\tret.push(dump.parse(key, \"key\") + \": \" + dump.parse(val, undefined, stack));\r\n  \t\t\t\t}\r\n  \t\t\t\tdump.down();\r\n  \t\t\t\treturn join(\"{\", ret, \"}\");\r\n  \t\t\t},\r\n  \t\t\tnode: function node(_node) {\r\n  \t\t\t\tvar len,\r\n  \t\t\t\t    i,\r\n  \t\t\t\t    val,\r\n  \t\t\t\t    open = dump.HTML ? \"&lt;\" : \"<\",\r\n  \t\t\t\t    close = dump.HTML ? \"&gt;\" : \">\",\r\n  \t\t\t\t    tag = _node.nodeName.toLowerCase(),\r\n  \t\t\t\t    ret = open + tag,\r\n  \t\t\t\t    attrs = _node.attributes;\r\n\r\n  \t\t\t\tif (attrs) {\r\n  \t\t\t\t\tfor (i = 0, len = attrs.length; i < len; i++) {\r\n  \t\t\t\t\t\tval = attrs[i].nodeValue;\r\n\r\n  \t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly\r\n  \t\t\t\t\t\t// set. Those have values like undefined, null, 0, false, \"\" or\r\n  \t\t\t\t\t\t// \"inherit\".\r\n  \t\t\t\t\t\tif (val && val !== \"inherit\") {\r\n  \t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + dump.parse(val, \"attribute\");\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tret += close;\r\n\r\n  \t\t\t\t// Show content of TextNode or CDATASection\r\n  \t\t\t\tif (_node.nodeType === 3 || _node.nodeType === 4) {\r\n  \t\t\t\t\tret += _node.nodeValue;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\treturn ret + open + \"/\" + tag + close;\r\n  \t\t\t},\r\n\r\n  \t\t\t// Function calls it internally, it's the arguments part of the function\r\n  \t\t\tfunctionArgs: function functionArgs(fn) {\r\n  \t\t\t\tvar args,\r\n  \t\t\t\t    l = fn.length;\r\n\r\n  \t\t\t\tif (!l) {\r\n  \t\t\t\t\treturn \"\";\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\targs = new Array(l);\r\n  \t\t\t\twhile (l--) {\r\n\r\n  \t\t\t\t\t// 97 is 'a'\r\n  \t\t\t\t\targs[l] = String.fromCharCode(97 + l);\r\n  \t\t\t\t}\r\n  \t\t\t\treturn \" \" + args.join(\", \") + \" \";\r\n  \t\t\t},\r\n\r\n  \t\t\t// Object calls it internally, the key part of an item in a map\r\n  \t\t\tkey: quote,\r\n\r\n  \t\t\t// Function calls it internally, it's the content of the function\r\n  \t\t\tfunctionCode: \"[code]\",\r\n\r\n  \t\t\t// Node calls it internally, it's a html attribute value\r\n  \t\t\tattribute: quote,\r\n  \t\t\tstring: quote,\r\n  \t\t\tdate: quote,\r\n  \t\t\tregexp: literal,\r\n  \t\t\tnumber: literal,\r\n  \t\t\t\"boolean\": literal,\r\n  \t\t\tsymbol: function symbol(sym) {\r\n  \t\t\t\treturn sym.toString();\r\n  \t\t\t}\r\n  \t\t},\r\n\r\n  \t\t// If true, entities are escaped ( <, >, \\t, space and \\n )\r\n  \t\tHTML: false,\r\n\r\n  \t\t// Indentation unit\r\n  \t\tindentChar: \"  \",\r\n\r\n  \t\t// If true, items in a collection, are separated by a \\n, else just a space.\r\n  \t\tmultiline: true\r\n  \t};\r\n\r\n  \treturn dump;\r\n  })();\r\n\r\n  var LISTENERS = Object.create(null);\r\n  var SUPPORTED_EVENTS = [\"runStart\", \"suiteStart\", \"testStart\", \"assertion\", \"testEnd\", \"suiteEnd\", \"runEnd\"];\r\n\r\n  /**\r\n   * Emits an event with the specified data to all currently registered listeners.\r\n   * Callbacks will fire in the order in which they are registered (FIFO). This\r\n   * function is not exposed publicly; it is used by QUnit internals to emit\r\n   * logging events.\r\n   *\r\n   * @private\r\n   * @method emit\r\n   * @param {String} eventName\r\n   * @param {Object} data\r\n   * @return {Void}\r\n   */\r\n  function emit(eventName, data) {\r\n  \tif (objectType(eventName) !== \"string\") {\r\n  \t\tthrow new TypeError(\"eventName must be a string when emitting an event\");\r\n  \t}\r\n\r\n  \t// Clone the callbacks in case one of them registers a new callback\r\n  \tvar originalCallbacks = LISTENERS[eventName];\r\n  \tvar callbacks = originalCallbacks ? [].concat(toConsumableArray(originalCallbacks)) : [];\r\n\r\n  \tfor (var i = 0; i < callbacks.length; i++) {\r\n  \t\tcallbacks[i](data);\r\n  \t}\r\n  }\r\n\r\n  /**\r\n   * Registers a callback as a listener to the specified event.\r\n   *\r\n   * @public\r\n   * @method on\r\n   * @param {String} eventName\r\n   * @param {Function} callback\r\n   * @return {Void}\r\n   */\r\n  function on(eventName, callback) {\r\n  \tif (objectType(eventName) !== \"string\") {\r\n  \t\tthrow new TypeError(\"eventName must be a string when registering a listener\");\r\n  \t} else if (!inArray(eventName, SUPPORTED_EVENTS)) {\r\n  \t\tvar events = SUPPORTED_EVENTS.join(\", \");\r\n  \t\tthrow new Error(\"\\\"\" + eventName + \"\\\" is not a valid event; must be one of: \" + events + \".\");\r\n  \t} else if (objectType(callback) !== \"function\") {\r\n  \t\tthrow new TypeError(\"callback must be a function when registering a listener\");\r\n  \t}\r\n\r\n  \tif (!LISTENERS[eventName]) {\r\n  \t\tLISTENERS[eventName] = [];\r\n  \t}\r\n\r\n  \t// Don't register the same callback more than once\r\n  \tif (!inArray(callback, LISTENERS[eventName])) {\r\n  \t\tLISTENERS[eventName].push(callback);\r\n  \t}\r\n  }\r\n\r\n  // Register logging callbacks\r\n  function registerLoggingCallbacks(obj) {\r\n  \tvar i,\r\n  \t    l,\r\n  \t    key,\r\n  \t    callbackNames = [\"begin\", \"done\", \"log\", \"testStart\", \"testDone\", \"moduleStart\", \"moduleDone\"];\r\n\r\n  \tfunction registerLoggingCallback(key) {\r\n  \t\tvar loggingCallback = function loggingCallback(callback) {\r\n  \t\t\tif (objectType(callback) !== \"function\") {\r\n  \t\t\t\tthrow new Error(\"QUnit logging methods require a callback function as their first parameters.\");\r\n  \t\t\t}\r\n\r\n  \t\t\tconfig.callbacks[key].push(callback);\r\n  \t\t};\r\n\r\n  \t\treturn loggingCallback;\r\n  \t}\r\n\r\n  \tfor (i = 0, l = callbackNames.length; i < l; i++) {\r\n  \t\tkey = callbackNames[i];\r\n\r\n  \t\t// Initialize key collection of logging callback\r\n  \t\tif (objectType(config.callbacks[key]) === \"undefined\") {\r\n  \t\t\tconfig.callbacks[key] = [];\r\n  \t\t}\r\n\r\n  \t\tobj[key] = registerLoggingCallback(key);\r\n  \t}\r\n  }\r\n\r\n  function runLoggingCallbacks(key, args) {\r\n  \tvar i, l, callbacks;\r\n\r\n  \tcallbacks = config.callbacks[key];\r\n  \tfor (i = 0, l = callbacks.length; i < l; i++) {\r\n  \t\tcallbacks[i](args);\r\n  \t}\r\n  }\r\n\r\n  // Doesn't support IE9, it will return undefined on these browsers\r\n  // See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\r\n  var fileName = (sourceFromStacktrace(0) || \"\").replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\");\r\n\r\n  function extractStacktrace(e, offset) {\r\n  \toffset = offset === undefined ? 4 : offset;\r\n\r\n  \tvar stack, include, i;\r\n\r\n  \tif (e && e.stack) {\r\n  \t\tstack = e.stack.split(\"\\n\");\r\n  \t\tif (/^error$/i.test(stack[0])) {\r\n  \t\t\tstack.shift();\r\n  \t\t}\r\n  \t\tif (fileName) {\r\n  \t\t\tinclude = [];\r\n  \t\t\tfor (i = offset; i < stack.length; i++) {\r\n  \t\t\t\tif (stack[i].indexOf(fileName) !== -1) {\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\t}\r\n  \t\t\t\tinclude.push(stack[i]);\r\n  \t\t\t}\r\n  \t\t\tif (include.length) {\r\n  \t\t\t\treturn include.join(\"\\n\");\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\treturn stack[offset];\r\n  \t}\r\n  }\r\n\r\n  function sourceFromStacktrace(offset) {\r\n  \tvar error = new Error();\r\n\r\n  \t// Support: Safari <=7 only, IE <=10 - 11 only\r\n  \t// Not all browsers generate the `stack` property for `new Error()`, see also #636\r\n  \tif (!error.stack) {\r\n  \t\ttry {\r\n  \t\t\tthrow error;\r\n  \t\t} catch (err) {\r\n  \t\t\terror = err;\r\n  \t\t}\r\n  \t}\r\n\r\n  \treturn extractStacktrace(error, offset);\r\n  }\r\n\r\n  var priorityCount = 0;\r\n  var unitSampler = void 0;\r\n\r\n  /**\r\n   * Advances the ProcessingQueue to the next item if it is ready.\r\n   * @param {Boolean} last\r\n   */\r\n  function advance() {\r\n  \tvar start = now();\r\n  \tconfig.depth = (config.depth || 0) + 1;\r\n\r\n  \twhile (config.queue.length && !config.blocking) {\r\n  \t\tvar elapsedTime = now() - start;\r\n\r\n  \t\tif (!defined.setTimeout || config.updateRate <= 0 || elapsedTime < config.updateRate) {\r\n  \t\t\tif (priorityCount > 0) {\r\n  \t\t\t\tpriorityCount--;\r\n  \t\t\t}\r\n\r\n  \t\t\tconfig.queue.shift()();\r\n  \t\t} else {\r\n  \t\t\tsetTimeout(advance, 13);\r\n  \t\t\tbreak;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tconfig.depth--;\r\n\r\n  \tif (!config.blocking && !config.queue.length && config.depth === 0) {\r\n  \t\tdone();\r\n  \t}\r\n  }\r\n\r\n  function addToQueueImmediate(callback) {\r\n  \tif (objectType(callback) === \"array\") {\r\n  \t\twhile (callback.length) {\r\n  \t\t\taddToQueueImmediate(callback.pop());\r\n  \t\t}\r\n\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tconfig.queue.unshift(callback);\r\n  \tpriorityCount++;\r\n  }\r\n\r\n  /**\r\n   * Adds a function to the ProcessingQueue for execution.\r\n   * @param {Function|Array} callback\r\n   * @param {Boolean} priority\r\n   * @param {String} seed\r\n   */\r\n  function addToQueue(callback, prioritize, seed) {\r\n  \tif (prioritize) {\r\n  \t\tconfig.queue.splice(priorityCount++, 0, callback);\r\n  \t} else if (seed) {\r\n  \t\tif (!unitSampler) {\r\n  \t\t\tunitSampler = unitSamplerGenerator(seed);\r\n  \t\t}\r\n\r\n  \t\t// Insert into a random position after all prioritized items\r\n  \t\tvar index = Math.floor(unitSampler() * (config.queue.length - priorityCount + 1));\r\n  \t\tconfig.queue.splice(priorityCount + index, 0, callback);\r\n  \t} else {\r\n  \t\tconfig.queue.push(callback);\r\n  \t}\r\n  }\r\n\r\n  /**\r\n   * Creates a seeded \"sample\" generator which is used for randomizing tests.\r\n   */\r\n  function unitSamplerGenerator(seed) {\r\n\r\n  \t// 32-bit xorshift, requires only a nonzero seed\r\n  \t// http://excamera.com/sphinx/article-xorshift.html\r\n  \tvar sample = parseInt(generateHash(seed), 16) || -1;\r\n  \treturn function () {\r\n  \t\tsample ^= sample << 13;\r\n  \t\tsample ^= sample >>> 17;\r\n  \t\tsample ^= sample << 5;\r\n\r\n  \t\t// ECMAScript has no unsigned number type\r\n  \t\tif (sample < 0) {\r\n  \t\t\tsample += 0x100000000;\r\n  \t\t}\r\n\r\n  \t\treturn sample / 0x100000000;\r\n  \t};\r\n  }\r\n\r\n  /**\r\n   * This function is called when the ProcessingQueue is done processing all\r\n   * items. It handles emitting the final run events.\r\n   */\r\n  function done() {\r\n  \tvar storage = config.storage;\r\n\r\n  \tProcessingQueue.finished = true;\r\n\r\n  \tvar runtime = now() - config.started;\r\n  \tvar passed = config.stats.all - config.stats.bad;\r\n\r\n  \temit(\"runEnd\", globalSuite.end(true));\r\n  \trunLoggingCallbacks(\"done\", {\r\n  \t\tpassed: passed,\r\n  \t\tfailed: config.stats.bad,\r\n  \t\ttotal: config.stats.all,\r\n  \t\truntime: runtime\r\n  \t});\r\n\r\n  \t// Clear own storage items if all tests passed\r\n  \tif (storage && config.stats.bad === 0) {\r\n  \t\tfor (var i = storage.length - 1; i >= 0; i--) {\r\n  \t\t\tvar key = storage.key(i);\r\n\r\n  \t\t\tif (key.indexOf(\"qunit-test-\") === 0) {\r\n  \t\t\t\tstorage.removeItem(key);\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n  }\r\n\r\n  var ProcessingQueue = {\r\n  \tfinished: false,\r\n  \tadd: addToQueue,\r\n  \taddImmediate: addToQueueImmediate,\r\n  \tadvance: advance\r\n  };\r\n\r\n  var TestReport = function () {\r\n  \tfunction TestReport(name, suite, options) {\r\n  \t\tclassCallCheck(this, TestReport);\r\n\r\n  \t\tthis.name = name;\r\n  \t\tthis.suiteName = suite.name;\r\n  \t\tthis.fullName = suite.fullName.concat(name);\r\n  \t\tthis.runtime = 0;\r\n  \t\tthis.assertions = [];\r\n\r\n  \t\tthis.skipped = !!options.skip;\r\n  \t\tthis.todo = !!options.todo;\r\n\r\n  \t\tthis.valid = options.valid;\r\n\r\n  \t\tthis._startTime = 0;\r\n  \t\tthis._endTime = 0;\r\n\r\n  \t\tsuite.pushTest(this);\r\n  \t}\r\n\r\n  \tcreateClass(TestReport, [{\r\n  \t\tkey: \"start\",\r\n  \t\tvalue: function start(recordTime) {\r\n  \t\t\tif (recordTime) {\r\n  \t\t\t\tthis._startTime = Date.now();\r\n  \t\t\t}\r\n\r\n  \t\t\treturn {\r\n  \t\t\t\tname: this.name,\r\n  \t\t\t\tsuiteName: this.suiteName,\r\n  \t\t\t\tfullName: this.fullName.slice()\r\n  \t\t\t};\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"end\",\r\n  \t\tvalue: function end(recordTime) {\r\n  \t\t\tif (recordTime) {\r\n  \t\t\t\tthis._endTime = Date.now();\r\n  \t\t\t}\r\n\r\n  \t\t\treturn extend(this.start(), {\r\n  \t\t\t\truntime: this.getRuntime(),\r\n  \t\t\t\tstatus: this.getStatus(),\r\n  \t\t\t\terrors: this.getFailedAssertions(),\r\n  \t\t\t\tassertions: this.getAssertions()\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"pushAssertion\",\r\n  \t\tvalue: function pushAssertion(assertion) {\r\n  \t\t\tthis.assertions.push(assertion);\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getRuntime\",\r\n  \t\tvalue: function getRuntime() {\r\n  \t\t\treturn this._endTime - this._startTime;\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getStatus\",\r\n  \t\tvalue: function getStatus() {\r\n  \t\t\tif (this.skipped) {\r\n  \t\t\t\treturn \"skipped\";\r\n  \t\t\t}\r\n\r\n  \t\t\tvar testPassed = this.getFailedAssertions().length > 0 ? this.todo : !this.todo;\r\n\r\n  \t\t\tif (!testPassed) {\r\n  \t\t\t\treturn \"failed\";\r\n  \t\t\t} else if (this.todo) {\r\n  \t\t\t\treturn \"todo\";\r\n  \t\t\t} else {\r\n  \t\t\t\treturn \"passed\";\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getFailedAssertions\",\r\n  \t\tvalue: function getFailedAssertions() {\r\n  \t\t\treturn this.assertions.filter(function (assertion) {\r\n  \t\t\t\treturn !assertion.passed;\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getAssertions\",\r\n  \t\tvalue: function getAssertions() {\r\n  \t\t\treturn this.assertions.slice();\r\n  \t\t}\r\n\r\n  \t\t// Remove actual and expected values from assertions. This is to prevent\r\n  \t\t// leaking memory throughout a test suite.\r\n\r\n  \t}, {\r\n  \t\tkey: \"slimAssertions\",\r\n  \t\tvalue: function slimAssertions() {\r\n  \t\t\tthis.assertions = this.assertions.map(function (assertion) {\r\n  \t\t\t\tdelete assertion.actual;\r\n  \t\t\t\tdelete assertion.expected;\r\n  \t\t\t\treturn assertion;\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}]);\r\n  \treturn TestReport;\r\n  }();\r\n\r\n  var focused$1 = false;\r\n\r\n  function Test(settings) {\r\n  \tvar i, l;\r\n\r\n  \t++Test.count;\r\n\r\n  \tthis.expected = null;\r\n  \tthis.assertions = [];\r\n  \tthis.semaphore = 0;\r\n  \tthis.module = config.currentModule;\r\n  \tthis.stack = sourceFromStacktrace(3);\r\n  \tthis.steps = [];\r\n  \tthis.timeout = undefined;\r\n\r\n  \t// If a module is skipped, all its tests and the tests of the child suites\r\n  \t// should be treated as skipped even if they are defined as `only` or `todo`.\r\n  \t// As for `todo` module, all its tests will be treated as `todo` except for\r\n  \t// tests defined as `skip` which will be left intact.\r\n  \t//\r\n  \t// So, if a test is defined as `todo` and is inside a skipped module, we should\r\n  \t// then treat that test as if was defined as `skip`.\r\n  \tif (this.module.skip) {\r\n  \t\tsettings.skip = true;\r\n  \t\tsettings.todo = false;\r\n\r\n  \t\t// Skipped tests should be left intact\r\n  \t} else if (this.module.todo && !settings.skip) {\r\n  \t\tsettings.todo = true;\r\n  \t}\r\n\r\n  \textend(this, settings);\r\n\r\n  \tthis.testReport = new TestReport(settings.testName, this.module.suiteReport, {\r\n  \t\ttodo: settings.todo,\r\n  \t\tskip: settings.skip,\r\n  \t\tvalid: this.valid()\r\n  \t});\r\n\r\n  \t// Register unique strings\r\n  \tfor (i = 0, l = this.module.tests; i < l.length; i++) {\r\n  \t\tif (this.module.tests[i].name === this.testName) {\r\n  \t\t\tthis.testName += \" \";\r\n  \t\t}\r\n  \t}\r\n\r\n  \tthis.testId = generateHash(this.module.name, this.testName);\r\n\r\n  \tthis.module.tests.push({\r\n  \t\tname: this.testName,\r\n  \t\ttestId: this.testId,\r\n  \t\tskip: !!settings.skip\r\n  \t});\r\n\r\n  \tif (settings.skip) {\r\n\r\n  \t\t// Skipped tests will fully ignore any sent callback\r\n  \t\tthis.callback = function () {};\r\n  \t\tthis.async = false;\r\n  \t\tthis.expected = 0;\r\n  \t} else {\r\n  \t\tthis.assert = new Assert(this);\r\n  \t}\r\n  }\r\n\r\n  Test.count = 0;\r\n\r\n  function getNotStartedModules(startModule) {\r\n  \tvar module = startModule,\r\n  \t    modules = [];\r\n\r\n  \twhile (module && module.testsRun === 0) {\r\n  \t\tmodules.push(module);\r\n  \t\tmodule = module.parentModule;\r\n  \t}\r\n\r\n  \treturn modules;\r\n  }\r\n\r\n  Test.prototype = {\r\n  \tbefore: function before() {\r\n  \t\tvar i,\r\n  \t\t    startModule,\r\n  \t\t    module = this.module,\r\n  \t\t    notStartedModules = getNotStartedModules(module);\r\n\r\n  \t\tfor (i = notStartedModules.length - 1; i >= 0; i--) {\r\n  \t\t\tstartModule = notStartedModules[i];\r\n  \t\t\tstartModule.stats = { all: 0, bad: 0, started: now() };\r\n  \t\t\temit(\"suiteStart\", startModule.suiteReport.start(true));\r\n  \t\t\trunLoggingCallbacks(\"moduleStart\", {\r\n  \t\t\t\tname: startModule.name,\r\n  \t\t\t\ttests: startModule.tests\r\n  \t\t\t});\r\n  \t\t}\r\n\r\n  \t\tconfig.current = this;\r\n\r\n  \t\tthis.testEnvironment = extend({}, module.testEnvironment);\r\n\r\n  \t\tthis.started = now();\r\n  \t\temit(\"testStart\", this.testReport.start(true));\r\n  \t\trunLoggingCallbacks(\"testStart\", {\r\n  \t\t\tname: this.testName,\r\n  \t\t\tmodule: module.name,\r\n  \t\t\ttestId: this.testId,\r\n  \t\t\tpreviousFailure: this.previousFailure\r\n  \t\t});\r\n\r\n  \t\tif (!config.pollution) {\r\n  \t\t\tsaveGlobal();\r\n  \t\t}\r\n  \t},\r\n\r\n  \trun: function run() {\r\n  \t\tvar promise;\r\n\r\n  \t\tconfig.current = this;\r\n\r\n  \t\tthis.callbackStarted = now();\r\n\r\n  \t\tif (config.notrycatch) {\r\n  \t\t\trunTest(this);\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\ttry {\r\n  \t\t\trunTest(this);\r\n  \t\t} catch (e) {\r\n  \t\t\tthis.pushFailure(\"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + (e.message || e), extractStacktrace(e, 0));\r\n\r\n  \t\t\t// Else next test will carry the responsibility\r\n  \t\t\tsaveGlobal();\r\n\r\n  \t\t\t// Restart the tests if they're blocking\r\n  \t\t\tif (config.blocking) {\r\n  \t\t\t\tinternalRecover(this);\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tfunction runTest(test) {\r\n  \t\t\tpromise = test.callback.call(test.testEnvironment, test.assert);\r\n  \t\t\ttest.resolvePromise(promise);\r\n\r\n  \t\t\t// If the test has a \"lock\" on it, but the timeout is 0, then we push a\r\n  \t\t\t// failure as the test should be synchronous.\r\n  \t\t\tif (test.timeout === 0 && test.semaphore !== 0) {\r\n  \t\t\t\tpushFailure(\"Test did not finish synchronously even though assert.timeout( 0 ) was used.\", sourceFromStacktrace(2));\r\n  \t\t\t}\r\n  \t\t}\r\n  \t},\r\n\r\n  \tafter: function after() {\r\n  \t\tcheckPollution();\r\n  \t},\r\n\r\n  \tqueueHook: function queueHook(hook, hookName, hookOwner) {\r\n  \t\tvar _this = this;\r\n\r\n  \t\tvar callHook = function callHook() {\r\n  \t\t\tvar promise = hook.call(_this.testEnvironment, _this.assert);\r\n  \t\t\t_this.resolvePromise(promise, hookName);\r\n  \t\t};\r\n\r\n  \t\tvar runHook = function runHook() {\r\n  \t\t\tif (hookName === \"before\") {\r\n  \t\t\t\tif (hookOwner.unskippedTestsRun !== 0) {\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\t_this.preserveEnvironment = true;\r\n  \t\t\t}\r\n\r\n  \t\t\tif (hookName === \"after\" && hookOwner.unskippedTestsRun !== numberOfUnskippedTests(hookOwner) - 1 && config.queue.length > 2) {\r\n  \t\t\t\treturn;\r\n  \t\t\t}\r\n\r\n  \t\t\tconfig.current = _this;\r\n  \t\t\tif (config.notrycatch) {\r\n  \t\t\t\tcallHook();\r\n  \t\t\t\treturn;\r\n  \t\t\t}\r\n  \t\t\ttry {\r\n  \t\t\t\tcallHook();\r\n  \t\t\t} catch (error) {\r\n  \t\t\t\t_this.pushFailure(hookName + \" failed on \" + _this.testName + \": \" + (error.message || error), extractStacktrace(error, 0));\r\n  \t\t\t}\r\n  \t\t};\r\n\r\n  \t\treturn runHook;\r\n  \t},\r\n\r\n\r\n  \t// Currently only used for module level hooks, can be used to add global level ones\r\n  \thooks: function hooks(handler) {\r\n  \t\tvar hooks = [];\r\n\r\n  \t\tfunction processHooks(test, module) {\r\n  \t\t\tif (module.parentModule) {\r\n  \t\t\t\tprocessHooks(test, module.parentModule);\r\n  \t\t\t}\r\n\r\n  \t\t\tif (module.hooks[handler].length) {\r\n  \t\t\t\tfor (var i = 0; i < module.hooks[handler].length; i++) {\r\n  \t\t\t\t\thooks.push(test.queueHook(module.hooks[handler][i], handler, module));\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Hooks are ignored on skipped tests\r\n  \t\tif (!this.skip) {\r\n  \t\t\tprocessHooks(this, this.module);\r\n  \t\t}\r\n\r\n  \t\treturn hooks;\r\n  \t},\r\n\r\n\r\n  \tfinish: function finish() {\r\n  \t\tconfig.current = this;\r\n  \t\tif (config.requireExpects && this.expected === null) {\r\n  \t\t\tthis.pushFailure(\"Expected number of assertions to be defined, but expect() was \" + \"not called.\", this.stack);\r\n  \t\t} else if (this.expected !== null && this.expected !== this.assertions.length) {\r\n  \t\t\tthis.pushFailure(\"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack);\r\n  \t\t} else if (this.expected === null && !this.assertions.length) {\r\n  \t\t\tthis.pushFailure(\"Expected at least one assertion, but none were run - call \" + \"expect(0) to accept zero assertions.\", this.stack);\r\n  \t\t}\r\n\r\n  \t\tvar i,\r\n  \t\t    module = this.module,\r\n  \t\t    moduleName = module.name,\r\n  \t\t    testName = this.testName,\r\n  \t\t    skipped = !!this.skip,\r\n  \t\t    todo = !!this.todo,\r\n  \t\t    bad = 0,\r\n  \t\t    storage = config.storage;\r\n\r\n  \t\tthis.runtime = now() - this.started;\r\n\r\n  \t\tconfig.stats.all += this.assertions.length;\r\n  \t\tmodule.stats.all += this.assertions.length;\r\n\r\n  \t\tfor (i = 0; i < this.assertions.length; i++) {\r\n  \t\t\tif (!this.assertions[i].result) {\r\n  \t\t\t\tbad++;\r\n  \t\t\t\tconfig.stats.bad++;\r\n  \t\t\t\tmodule.stats.bad++;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tnotifyTestsRan(module, skipped);\r\n\r\n  \t\t// Store result when possible\r\n  \t\tif (storage) {\r\n  \t\t\tif (bad) {\r\n  \t\t\t\tstorage.setItem(\"qunit-test-\" + moduleName + \"-\" + testName, bad);\r\n  \t\t\t} else {\r\n  \t\t\t\tstorage.removeItem(\"qunit-test-\" + moduleName + \"-\" + testName);\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// After emitting the js-reporters event we cleanup the assertion data to\r\n  \t\t// avoid leaking it. It is not used by the legacy testDone callbacks.\r\n  \t\temit(\"testEnd\", this.testReport.end(true));\r\n  \t\tthis.testReport.slimAssertions();\r\n\r\n  \t\trunLoggingCallbacks(\"testDone\", {\r\n  \t\t\tname: testName,\r\n  \t\t\tmodule: moduleName,\r\n  \t\t\tskipped: skipped,\r\n  \t\t\ttodo: todo,\r\n  \t\t\tfailed: bad,\r\n  \t\t\tpassed: this.assertions.length - bad,\r\n  \t\t\ttotal: this.assertions.length,\r\n  \t\t\truntime: skipped ? 0 : this.runtime,\r\n\r\n  \t\t\t// HTML Reporter use\r\n  \t\t\tassertions: this.assertions,\r\n  \t\t\ttestId: this.testId,\r\n\r\n  \t\t\t// Source of Test\r\n  \t\t\tsource: this.stack\r\n  \t\t});\r\n\r\n  \t\tif (module.testsRun === numberOfTests(module)) {\r\n  \t\t\tlogSuiteEnd(module);\r\n\r\n  \t\t\t// Check if the parent modules, iteratively, are done. If that the case,\r\n  \t\t\t// we emit the `suiteEnd` event and trigger `moduleDone` callback.\r\n  \t\t\tvar parent = module.parentModule;\r\n  \t\t\twhile (parent && parent.testsRun === numberOfTests(parent)) {\r\n  \t\t\t\tlogSuiteEnd(parent);\r\n  \t\t\t\tparent = parent.parentModule;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tconfig.current = undefined;\r\n\r\n  \t\tfunction logSuiteEnd(module) {\r\n  \t\t\temit(\"suiteEnd\", module.suiteReport.end(true));\r\n  \t\t\trunLoggingCallbacks(\"moduleDone\", {\r\n  \t\t\t\tname: module.name,\r\n  \t\t\t\ttests: module.tests,\r\n  \t\t\t\tfailed: module.stats.bad,\r\n  \t\t\t\tpassed: module.stats.all - module.stats.bad,\r\n  \t\t\t\ttotal: module.stats.all,\r\n  \t\t\t\truntime: now() - module.stats.started\r\n  \t\t\t});\r\n  \t\t}\r\n  \t},\r\n\r\n  \tpreserveTestEnvironment: function preserveTestEnvironment() {\r\n  \t\tif (this.preserveEnvironment) {\r\n  \t\t\tthis.module.testEnvironment = this.testEnvironment;\r\n  \t\t\tthis.testEnvironment = extend({}, this.module.testEnvironment);\r\n  \t\t}\r\n  \t},\r\n\r\n  \tqueue: function queue() {\r\n  \t\tvar test = this;\r\n\r\n  \t\tif (!this.valid()) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tfunction runTest() {\r\n\r\n  \t\t\t// Each of these can by async\r\n  \t\t\tProcessingQueue.addImmediate([function () {\r\n  \t\t\t\ttest.before();\r\n  \t\t\t}, test.hooks(\"before\"), function () {\r\n  \t\t\t\ttest.preserveTestEnvironment();\r\n  \t\t\t}, test.hooks(\"beforeEach\"), function () {\r\n  \t\t\t\ttest.run();\r\n  \t\t\t}, test.hooks(\"afterEach\").reverse(), test.hooks(\"after\").reverse(), function () {\r\n  \t\t\t\ttest.after();\r\n  \t\t\t}, function () {\r\n  \t\t\t\ttest.finish();\r\n  \t\t\t}]);\r\n  \t\t}\r\n\r\n  \t\tvar previousFailCount = config.storage && +config.storage.getItem(\"qunit-test-\" + this.module.name + \"-\" + this.testName);\r\n\r\n  \t\t// Prioritize previously failed tests, detected from storage\r\n  \t\tvar prioritize = config.reorder && !!previousFailCount;\r\n\r\n  \t\tthis.previousFailure = !!previousFailCount;\r\n\r\n  \t\tProcessingQueue.add(runTest, prioritize, config.seed);\r\n\r\n  \t\t// If the queue has already finished, we manually process the new test\r\n  \t\tif (ProcessingQueue.finished) {\r\n  \t\t\tProcessingQueue.advance();\r\n  \t\t}\r\n  \t},\r\n\r\n\r\n  \tpushResult: function pushResult(resultInfo) {\r\n  \t\tif (this !== config.current) {\r\n  \t\t\tthrow new Error(\"Assertion occured after test had finished.\");\r\n  \t\t}\r\n\r\n  \t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\r\n  \t\tvar source,\r\n  \t\t    details = {\r\n  \t\t\tmodule: this.module.name,\r\n  \t\t\tname: this.testName,\r\n  \t\t\tresult: resultInfo.result,\r\n  \t\t\tmessage: resultInfo.message,\r\n  \t\t\tactual: resultInfo.actual,\r\n  \t\t\texpected: resultInfo.expected,\r\n  \t\t\ttestId: this.testId,\r\n  \t\t\tnegative: resultInfo.negative || false,\r\n  \t\t\truntime: now() - this.started,\r\n  \t\t\ttodo: !!this.todo\r\n  \t\t};\r\n\r\n  \t\tif (!resultInfo.result) {\r\n  \t\t\tsource = resultInfo.source || sourceFromStacktrace();\r\n\r\n  \t\t\tif (source) {\r\n  \t\t\t\tdetails.source = source;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tthis.logAssertion(details);\r\n\r\n  \t\tthis.assertions.push({\r\n  \t\t\tresult: !!resultInfo.result,\r\n  \t\t\tmessage: resultInfo.message\r\n  \t\t});\r\n  \t},\r\n\r\n  \tpushFailure: function pushFailure(message, source, actual) {\r\n  \t\tif (!(this instanceof Test)) {\r\n  \t\t\tthrow new Error(\"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2));\r\n  \t\t}\r\n\r\n  \t\tthis.pushResult({\r\n  \t\t\tresult: false,\r\n  \t\t\tmessage: message || \"error\",\r\n  \t\t\tactual: actual || null,\r\n  \t\t\texpected: null,\r\n  \t\t\tsource: source\r\n  \t\t});\r\n  \t},\r\n\r\n  \t/**\r\n    * Log assertion details using both the old QUnit.log interface and\r\n    * QUnit.on( \"assertion\" ) interface.\r\n    *\r\n    * @private\r\n    */\r\n  \tlogAssertion: function logAssertion(details) {\r\n  \t\trunLoggingCallbacks(\"log\", details);\r\n\r\n  \t\tvar assertion = {\r\n  \t\t\tpassed: details.result,\r\n  \t\t\tactual: details.actual,\r\n  \t\t\texpected: details.expected,\r\n  \t\t\tmessage: details.message,\r\n  \t\t\tstack: details.source,\r\n  \t\t\ttodo: details.todo\r\n  \t\t};\r\n  \t\tthis.testReport.pushAssertion(assertion);\r\n  \t\temit(\"assertion\", assertion);\r\n  \t},\r\n\r\n\r\n  \tresolvePromise: function resolvePromise(promise, phase) {\r\n  \t\tvar then,\r\n  \t\t    resume,\r\n  \t\t    message,\r\n  \t\t    test = this;\r\n  \t\tif (promise != null) {\r\n  \t\t\tthen = promise.then;\r\n  \t\t\tif (objectType(then) === \"function\") {\r\n  \t\t\t\tresume = internalStop(test);\r\n  \t\t\t\tthen.call(promise, function () {\r\n  \t\t\t\t\tresume();\r\n  \t\t\t\t}, function (error) {\r\n  \t\t\t\t\tmessage = \"Promise rejected \" + (!phase ? \"during\" : phase.replace(/Each$/, \"\")) + \" \\\"\" + test.testName + \"\\\": \" + (error && error.message || error);\r\n  \t\t\t\t\ttest.pushFailure(message, extractStacktrace(error, 0));\r\n\r\n  \t\t\t\t\t// Else next test will carry the responsibility\r\n  \t\t\t\t\tsaveGlobal();\r\n\r\n  \t\t\t\t\t// Unblock\r\n  \t\t\t\t\tresume();\r\n  \t\t\t\t});\r\n  \t\t\t}\r\n  \t\t}\r\n  \t},\r\n\r\n  \tvalid: function valid() {\r\n  \t\tvar filter = config.filter,\r\n  \t\t    regexFilter = /^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec(filter),\r\n  \t\t    module = config.module && config.module.toLowerCase(),\r\n  \t\t    fullName = this.module.name + \": \" + this.testName;\r\n\r\n  \t\tfunction moduleChainNameMatch(testModule) {\r\n  \t\t\tvar testModuleName = testModule.name ? testModule.name.toLowerCase() : null;\r\n  \t\t\tif (testModuleName === module) {\r\n  \t\t\t\treturn true;\r\n  \t\t\t} else if (testModule.parentModule) {\r\n  \t\t\t\treturn moduleChainNameMatch(testModule.parentModule);\r\n  \t\t\t} else {\r\n  \t\t\t\treturn false;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tfunction moduleChainIdMatch(testModule) {\r\n  \t\t\treturn inArray(testModule.moduleId, config.moduleId) || testModule.parentModule && moduleChainIdMatch(testModule.parentModule);\r\n  \t\t}\r\n\r\n  \t\t// Internally-generated tests are always valid\r\n  \t\tif (this.callback && this.callback.validTest) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\tif (config.moduleId && config.moduleId.length > 0 && !moduleChainIdMatch(this.module)) {\r\n\r\n  \t\t\treturn false;\r\n  \t\t}\r\n\r\n  \t\tif (config.testId && config.testId.length > 0 && !inArray(this.testId, config.testId)) {\r\n\r\n  \t\t\treturn false;\r\n  \t\t}\r\n\r\n  \t\tif (module && !moduleChainNameMatch(this.module)) {\r\n  \t\t\treturn false;\r\n  \t\t}\r\n\r\n  \t\tif (!filter) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n\r\n  \t\treturn regexFilter ? this.regexFilter(!!regexFilter[1], regexFilter[2], regexFilter[3], fullName) : this.stringFilter(filter, fullName);\r\n  \t},\r\n\r\n  \tregexFilter: function regexFilter(exclude, pattern, flags, fullName) {\r\n  \t\tvar regex = new RegExp(pattern, flags);\r\n  \t\tvar match = regex.test(fullName);\r\n\r\n  \t\treturn match !== exclude;\r\n  \t},\r\n\r\n  \tstringFilter: function stringFilter(filter, fullName) {\r\n  \t\tfilter = filter.toLowerCase();\r\n  \t\tfullName = fullName.toLowerCase();\r\n\r\n  \t\tvar include = filter.charAt(0) !== \"!\";\r\n  \t\tif (!include) {\r\n  \t\t\tfilter = filter.slice(1);\r\n  \t\t}\r\n\r\n  \t\t// If the filter matches, we need to honour include\r\n  \t\tif (fullName.indexOf(filter) !== -1) {\r\n  \t\t\treturn include;\r\n  \t\t}\r\n\r\n  \t\t// Otherwise, do the opposite\r\n  \t\treturn !include;\r\n  \t}\r\n  };\r\n\r\n  function pushFailure() {\r\n  \tif (!config.current) {\r\n  \t\tthrow new Error(\"pushFailure() assertion outside test context, in \" + sourceFromStacktrace(2));\r\n  \t}\r\n\r\n  \t// Gets current test obj\r\n  \tvar currentTest = config.current;\r\n\r\n  \treturn currentTest.pushFailure.apply(currentTest, arguments);\r\n  }\r\n\r\n  function saveGlobal() {\r\n  \tconfig.pollution = [];\r\n\r\n  \tif (config.noglobals) {\r\n  \t\tfor (var key in global$1) {\r\n  \t\t\tif (hasOwn.call(global$1, key)) {\r\n\r\n  \t\t\t\t// In Opera sometimes DOM element ids show up here, ignore them\r\n  \t\t\t\tif (/^qunit-test-output/.test(key)) {\r\n  \t\t\t\t\tcontinue;\r\n  \t\t\t\t}\r\n  \t\t\t\tconfig.pollution.push(key);\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n  }\r\n\r\n  function checkPollution() {\r\n  \tvar newGlobals,\r\n  \t    deletedGlobals,\r\n  \t    old = config.pollution;\r\n\r\n  \tsaveGlobal();\r\n\r\n  \tnewGlobals = diff(config.pollution, old);\r\n  \tif (newGlobals.length > 0) {\r\n  \t\tpushFailure(\"Introduced global variable(s): \" + newGlobals.join(\", \"));\r\n  \t}\r\n\r\n  \tdeletedGlobals = diff(old, config.pollution);\r\n  \tif (deletedGlobals.length > 0) {\r\n  \t\tpushFailure(\"Deleted global variable(s): \" + deletedGlobals.join(\", \"));\r\n  \t}\r\n  }\r\n\r\n  // Will be exposed as QUnit.test\r\n  function test(testName, callback) {\r\n  \tif (focused$1) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar newTest = new Test({\r\n  \t\ttestName: testName,\r\n  \t\tcallback: callback\r\n  \t});\r\n\r\n  \tnewTest.queue();\r\n  }\r\n\r\n  function todo(testName, callback) {\r\n  \tif (focused$1) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar newTest = new Test({\r\n  \t\ttestName: testName,\r\n  \t\tcallback: callback,\r\n  \t\ttodo: true\r\n  \t});\r\n\r\n  \tnewTest.queue();\r\n  }\r\n\r\n  // Will be exposed as QUnit.skip\r\n  function skip(testName) {\r\n  \tif (focused$1) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar test = new Test({\r\n  \t\ttestName: testName,\r\n  \t\tskip: true\r\n  \t});\r\n\r\n  \ttest.queue();\r\n  }\r\n\r\n  // Will be exposed as QUnit.only\r\n  function only(testName, callback) {\r\n  \tif (focused$1) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tconfig.queue.length = 0;\r\n  \tfocused$1 = true;\r\n\r\n  \tvar newTest = new Test({\r\n  \t\ttestName: testName,\r\n  \t\tcallback: callback\r\n  \t});\r\n\r\n  \tnewTest.queue();\r\n  }\r\n\r\n  // Put a hold on processing and return a function that will release it.\r\n  function internalStop(test) {\r\n  \ttest.semaphore += 1;\r\n  \tconfig.blocking = true;\r\n\r\n  \t// Set a recovery timeout, if so configured.\r\n  \tif (defined.setTimeout) {\r\n  \t\tvar timeoutDuration = void 0;\r\n\r\n  \t\tif (typeof test.timeout === \"number\") {\r\n  \t\t\ttimeoutDuration = test.timeout;\r\n  \t\t} else if (typeof config.testTimeout === \"number\") {\r\n  \t\t\ttimeoutDuration = config.testTimeout;\r\n  \t\t}\r\n\r\n  \t\tif (typeof timeoutDuration === \"number\" && timeoutDuration > 0) {\r\n  \t\t\tclearTimeout(config.timeout);\r\n  \t\t\tconfig.timeout = setTimeout(function () {\r\n  \t\t\t\tpushFailure(\"Test took longer than \" + timeoutDuration + \"ms; test timed out.\", sourceFromStacktrace(2));\r\n  \t\t\t\tinternalRecover(test);\r\n  \t\t\t}, timeoutDuration);\r\n  \t\t}\r\n  \t}\r\n\r\n  \tvar released = false;\r\n  \treturn function resume() {\r\n  \t\tif (released) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\treleased = true;\r\n  \t\ttest.semaphore -= 1;\r\n  \t\tinternalStart(test);\r\n  \t};\r\n  }\r\n\r\n  // Forcefully release all processing holds.\r\n  function internalRecover(test) {\r\n  \ttest.semaphore = 0;\r\n  \tinternalStart(test);\r\n  }\r\n\r\n  // Release a processing hold, scheduling a resumption attempt if no holds remain.\r\n  function internalStart(test) {\r\n\r\n  \t// If semaphore is non-numeric, throw error\r\n  \tif (isNaN(test.semaphore)) {\r\n  \t\ttest.semaphore = 0;\r\n\r\n  \t\tpushFailure(\"Invalid value on test.semaphore\", sourceFromStacktrace(2));\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \t// Don't start until equal number of stop-calls\r\n  \tif (test.semaphore > 0) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \t// Throw an Error if start is called more often than stop\r\n  \tif (test.semaphore < 0) {\r\n  \t\ttest.semaphore = 0;\r\n\r\n  \t\tpushFailure(\"Tried to restart test while already started (test's semaphore was 0 already)\", sourceFromStacktrace(2));\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \t// Add a slight delay to allow more assertions etc.\r\n  \tif (defined.setTimeout) {\r\n  \t\tif (config.timeout) {\r\n  \t\t\tclearTimeout(config.timeout);\r\n  \t\t}\r\n  \t\tconfig.timeout = setTimeout(function () {\r\n  \t\t\tif (test.semaphore > 0) {\r\n  \t\t\t\treturn;\r\n  \t\t\t}\r\n\r\n  \t\t\tif (config.timeout) {\r\n  \t\t\t\tclearTimeout(config.timeout);\r\n  \t\t\t}\r\n\r\n  \t\t\tbegin();\r\n  \t\t}, 13);\r\n  \t} else {\r\n  \t\tbegin();\r\n  \t}\r\n  }\r\n\r\n  function collectTests(module) {\r\n  \tvar tests = [].concat(module.tests);\r\n  \tvar modules = [].concat(toConsumableArray(module.childModules));\r\n\r\n  \t// Do a breadth-first traversal of the child modules\r\n  \twhile (modules.length) {\r\n  \t\tvar nextModule = modules.shift();\r\n  \t\ttests.push.apply(tests, nextModule.tests);\r\n  \t\tmodules.push.apply(modules, toConsumableArray(nextModule.childModules));\r\n  \t}\r\n\r\n  \treturn tests;\r\n  }\r\n\r\n  function numberOfTests(module) {\r\n  \treturn collectTests(module).length;\r\n  }\r\n\r\n  function numberOfUnskippedTests(module) {\r\n  \treturn collectTests(module).filter(function (test) {\r\n  \t\treturn !test.skip;\r\n  \t}).length;\r\n  }\r\n\r\n  function notifyTestsRan(module, skipped) {\r\n  \tmodule.testsRun++;\r\n  \tif (!skipped) {\r\n  \t\tmodule.unskippedTestsRun++;\r\n  \t}\r\n  \twhile (module = module.parentModule) {\r\n  \t\tmodule.testsRun++;\r\n  \t\tif (!skipped) {\r\n  \t\t\tmodule.unskippedTestsRun++;\r\n  \t\t}\r\n  \t}\r\n  }\r\n\r\n  /**\r\n   * Returns a function that proxies to the given method name on the globals\r\n   * console object. The proxy will also detect if the console doesn't exist and\r\n   * will appropriately no-op. This allows support for IE9, which doesn't have a\r\n   * console if the developer tools are not open.\r\n   */\r\n  function consoleProxy(method) {\r\n  \treturn function () {\r\n  \t\tif (console) {\r\n  \t\t\tconsole[method].apply(console, arguments);\r\n  \t\t}\r\n  \t};\r\n  }\r\n\r\n  var Logger = {\r\n  \twarn: consoleProxy(\"warn\")\r\n  };\r\n\r\n  var Assert = function () {\r\n  \tfunction Assert(testContext) {\r\n  \t\tclassCallCheck(this, Assert);\r\n\r\n  \t\tthis.test = testContext;\r\n  \t}\r\n\r\n  \t// Assert helpers\r\n\r\n  \tcreateClass(Assert, [{\r\n  \t\tkey: \"timeout\",\r\n  \t\tvalue: function timeout(duration) {\r\n  \t\t\tif (typeof duration !== \"number\") {\r\n  \t\t\t\tthrow new Error(\"You must pass a number as the duration to assert.timeout\");\r\n  \t\t\t}\r\n\r\n  \t\t\tthis.test.timeout = duration;\r\n  \t\t}\r\n\r\n  \t\t// Documents a \"step\", which is a string value, in a test as a passing assertion\r\n\r\n  \t}, {\r\n  \t\tkey: \"step\",\r\n  \t\tvalue: function step(message) {\r\n  \t\t\tvar result = !!message;\r\n\r\n  \t\t\tthis.test.steps.push(message);\r\n\r\n  \t\t\treturn this.pushResult({\r\n  \t\t\t\tresult: result,\r\n  \t\t\t\tmessage: message || \"You must provide a message to assert.step\"\r\n  \t\t\t});\r\n  \t\t}\r\n\r\n  \t\t// Verifies the steps in a test match a given array of string values\r\n\r\n  \t}, {\r\n  \t\tkey: \"verifySteps\",\r\n  \t\tvalue: function verifySteps(steps, message) {\r\n  \t\t\tthis.deepEqual(this.test.steps, steps, message);\r\n  \t\t}\r\n\r\n  \t\t// Specify the number of expected assertions to guarantee that failed test\r\n  \t\t// (no assertions are run at all) don't slip through.\r\n\r\n  \t}, {\r\n  \t\tkey: \"expect\",\r\n  \t\tvalue: function expect(asserts) {\r\n  \t\t\tif (arguments.length === 1) {\r\n  \t\t\t\tthis.test.expected = asserts;\r\n  \t\t\t} else {\r\n  \t\t\t\treturn this.test.expected;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Put a hold on processing and return a function that will release it a maximum of once.\r\n\r\n  \t}, {\r\n  \t\tkey: \"async\",\r\n  \t\tvalue: function async(count) {\r\n  \t\t\tvar test$$1 = this.test;\r\n\r\n  \t\t\tvar popped = false,\r\n  \t\t\t    acceptCallCount = count;\r\n\r\n  \t\t\tif (typeof acceptCallCount === \"undefined\") {\r\n  \t\t\t\tacceptCallCount = 1;\r\n  \t\t\t}\r\n\r\n  \t\t\tvar resume = internalStop(test$$1);\r\n\r\n  \t\t\treturn function done() {\r\n  \t\t\t\tif (config.current !== test$$1) {\r\n  \t\t\t\t\tthrow Error(\"assert.async callback called after test finished.\");\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tif (popped) {\r\n  \t\t\t\t\ttest$$1.pushFailure(\"Too many calls to the `assert.async` callback\", sourceFromStacktrace(2));\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tacceptCallCount -= 1;\r\n  \t\t\t\tif (acceptCallCount > 0) {\r\n  \t\t\t\t\treturn;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tpopped = true;\r\n  \t\t\t\tresume();\r\n  \t\t\t};\r\n  \t\t}\r\n\r\n  \t\t// Exports test.push() to the user API\r\n  \t\t// Alias of pushResult.\r\n\r\n  \t}, {\r\n  \t\tkey: \"push\",\r\n  \t\tvalue: function push(result, actual, expected, message, negative) {\r\n  \t\t\tLogger.warn(\"assert.push is deprecated and will be removed in QUnit 3.0.\" + \" Please use assert.pushResult instead (https://api.qunitjs.com/assert/pushResult).\");\r\n\r\n  \t\t\tvar currentAssert = this instanceof Assert ? this : config.current.assert;\r\n  \t\t\treturn currentAssert.pushResult({\r\n  \t\t\t\tresult: result,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tnegative: negative\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"pushResult\",\r\n  \t\tvalue: function pushResult(resultInfo) {\r\n\r\n  \t\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\r\n  \t\t\tvar assert = this;\r\n  \t\t\tvar currentTest = assert instanceof Assert && assert.test || config.current;\r\n\r\n  \t\t\t// Backwards compatibility fix.\r\n  \t\t\t// Allows the direct use of global exported assertions and QUnit.assert.*\r\n  \t\t\t// Although, it's use is not recommended as it can leak assertions\r\n  \t\t\t// to other tests from async tests, because we only get a reference to the current test,\r\n  \t\t\t// not exactly the test where assertion were intended to be called.\r\n  \t\t\tif (!currentTest) {\r\n  \t\t\t\tthrow new Error(\"assertion outside test context, in \" + sourceFromStacktrace(2));\r\n  \t\t\t}\r\n\r\n  \t\t\tif (!(assert instanceof Assert)) {\r\n  \t\t\t\tassert = currentTest.assert;\r\n  \t\t\t}\r\n\r\n  \t\t\treturn assert.test.pushResult(resultInfo);\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"ok\",\r\n  \t\tvalue: function ok(result, message) {\r\n  \t\t\tif (!message) {\r\n  \t\t\t\tmessage = result ? \"okay\" : \"failed, expected argument to be truthy, was: \" + dump.parse(result);\r\n  \t\t\t}\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: !!result,\r\n  \t\t\t\tactual: result,\r\n  \t\t\t\texpected: true,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"notOk\",\r\n  \t\tvalue: function notOk(result, message) {\r\n  \t\t\tif (!message) {\r\n  \t\t\t\tmessage = !result ? \"okay\" : \"failed, expected argument to be falsy, was: \" + dump.parse(result);\r\n  \t\t\t}\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: !result,\r\n  \t\t\t\tactual: result,\r\n  \t\t\t\texpected: false,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"equal\",\r\n  \t\tvalue: function equal(actual, expected, message) {\r\n\r\n  \t\t\t// eslint-disable-next-line eqeqeq\r\n  \t\t\tvar result = expected == actual;\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: result,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"notEqual\",\r\n  \t\tvalue: function notEqual(actual, expected, message) {\r\n\r\n  \t\t\t// eslint-disable-next-line eqeqeq\r\n  \t\t\tvar result = expected != actual;\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: result,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tnegative: true\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"propEqual\",\r\n  \t\tvalue: function propEqual(actual, expected, message) {\r\n  \t\t\tactual = objectValues(actual);\r\n  \t\t\texpected = objectValues(expected);\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: equiv(actual, expected),\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"notPropEqual\",\r\n  \t\tvalue: function notPropEqual(actual, expected, message) {\r\n  \t\t\tactual = objectValues(actual);\r\n  \t\t\texpected = objectValues(expected);\r\n\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: !equiv(actual, expected),\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tnegative: true\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"deepEqual\",\r\n  \t\tvalue: function deepEqual(actual, expected, message) {\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: equiv(actual, expected),\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"notDeepEqual\",\r\n  \t\tvalue: function notDeepEqual(actual, expected, message) {\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: !equiv(actual, expected),\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tnegative: true\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"strictEqual\",\r\n  \t\tvalue: function strictEqual(actual, expected, message) {\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: expected === actual,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"notStrictEqual\",\r\n  \t\tvalue: function notStrictEqual(actual, expected, message) {\r\n  \t\t\tthis.pushResult({\r\n  \t\t\t\tresult: expected !== actual,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tnegative: true\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"throws\",\r\n  \t\tvalue: function throws(block, expected, message) {\r\n  \t\t\tvar actual = void 0,\r\n  \t\t\t    result = false;\r\n\r\n  \t\t\tvar currentTest = this instanceof Assert && this.test || config.current;\r\n\r\n  \t\t\t// 'expected' is optional unless doing string comparison\r\n  \t\t\tif (objectType(expected) === \"string\") {\r\n  \t\t\t\tif (message == null) {\r\n  \t\t\t\t\tmessage = expected;\r\n  \t\t\t\t\texpected = null;\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tthrow new Error(\"throws/raises does not accept a string value for the expected argument.\\n\" + \"Use a non-string object value (e.g. regExp) instead if it's necessary.\");\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n\r\n  \t\t\tcurrentTest.ignoreGlobalErrors = true;\r\n  \t\t\ttry {\r\n  \t\t\t\tblock.call(currentTest.testEnvironment);\r\n  \t\t\t} catch (e) {\r\n  \t\t\t\tactual = e;\r\n  \t\t\t}\r\n  \t\t\tcurrentTest.ignoreGlobalErrors = false;\r\n\r\n  \t\t\tif (actual) {\r\n  \t\t\t\tvar expectedType = objectType(expected);\r\n\r\n  \t\t\t\t// We don't want to validate thrown error\r\n  \t\t\t\tif (!expected) {\r\n  \t\t\t\t\tresult = true;\r\n  \t\t\t\t\texpected = null;\r\n\r\n  \t\t\t\t\t// Expected is a regexp\r\n  \t\t\t\t} else if (expectedType === \"regexp\") {\r\n  \t\t\t\t\tresult = expected.test(errorString(actual));\r\n\r\n  \t\t\t\t\t// Expected is a constructor, maybe an Error constructor\r\n  \t\t\t\t} else if (expectedType === \"function\" && actual instanceof expected) {\r\n  \t\t\t\t\tresult = true;\r\n\r\n  \t\t\t\t\t// Expected is an Error object\r\n  \t\t\t\t} else if (expectedType === \"object\") {\r\n  \t\t\t\t\tresult = actual instanceof expected.constructor && actual.name === expected.name && actual.message === expected.message;\r\n\r\n  \t\t\t\t\t// Expected is a validation function which returns true if validation passed\r\n  \t\t\t\t} else if (expectedType === \"function\" && expected.call({}, actual) === true) {\r\n  \t\t\t\t\texpected = null;\r\n  \t\t\t\t\tresult = true;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n\r\n  \t\t\tcurrentTest.assert.pushResult({\r\n  \t\t\t\tresult: result,\r\n  \t\t\t\tactual: actual,\r\n  \t\t\t\texpected: expected,\r\n  \t\t\t\tmessage: message\r\n  \t\t\t});\r\n  \t\t}\r\n  \t}]);\r\n  \treturn Assert;\r\n  }();\r\n\r\n  // Provide an alternative to assert.throws(), for environments that consider throws a reserved word\r\n  // Known to us are: Closure Compiler, Narwhal\r\n  // eslint-disable-next-line dot-notation\r\n\r\n\r\n  Assert.prototype.raises = Assert.prototype[\"throws\"];\r\n\r\n  /**\r\n   * Converts an error into a simple string for comparisons.\r\n   *\r\n   * @param {Error} error\r\n   * @return {String}\r\n   */\r\n  function errorString(error) {\r\n  \tvar resultErrorString = error.toString();\r\n\r\n  \tif (resultErrorString.substring(0, 7) === \"[object\") {\r\n  \t\tvar name = error.name ? error.name.toString() : \"Error\";\r\n  \t\tvar message = error.message ? error.message.toString() : \"\";\r\n\r\n  \t\tif (name && message) {\r\n  \t\t\treturn name + \": \" + message;\r\n  \t\t} else if (name) {\r\n  \t\t\treturn name;\r\n  \t\t} else if (message) {\r\n  \t\t\treturn message;\r\n  \t\t} else {\r\n  \t\t\treturn \"Error\";\r\n  \t\t}\r\n  \t} else {\r\n  \t\treturn resultErrorString;\r\n  \t}\r\n  }\r\n\r\n  /* global module, exports, define */\r\n  function exportQUnit(QUnit) {\r\n\r\n  \tif (defined.document) {\r\n\r\n  \t\t// QUnit may be defined when it is preconfigured but then only QUnit and QUnit.config may be defined.\r\n  \t\tif (window.QUnit && window.QUnit.version) {\r\n  \t\t\tthrow new Error(\"QUnit has already been defined.\");\r\n  \t\t}\r\n\r\n  \t\twindow.QUnit = QUnit;\r\n  \t}\r\n\r\n  \t// For nodejs\r\n  \tif (typeof module !== \"undefined\" && module && module.exports) {\r\n  \t\tmodule.exports = QUnit;\r\n\r\n  \t\t// For consistency with CommonJS environments' exports\r\n  \t\tmodule.exports.QUnit = QUnit;\r\n  \t}\r\n\r\n  \t// For CommonJS with exports, but without module.exports, like Rhino\r\n  \tif (typeof exports !== \"undefined\" && exports) {\r\n  \t\texports.QUnit = QUnit;\r\n  \t}\r\n\r\n  \tif (typeof define === \"function\" && define.amd) {\r\n  \t\tdefine(function () {\r\n  \t\t\treturn QUnit;\r\n  \t\t});\r\n  \t\tQUnit.config.autostart = false;\r\n  \t}\r\n\r\n  \t// For Web/Service Workers\r\n  \tif (self$1 && self$1.WorkerGlobalScope && self$1 instanceof self$1.WorkerGlobalScope) {\r\n  \t\tself$1.QUnit = QUnit;\r\n  \t}\r\n  }\r\n\r\n  var SuiteReport = function () {\r\n  \tfunction SuiteReport(name, parentSuite) {\r\n  \t\tclassCallCheck(this, SuiteReport);\r\n\r\n  \t\tthis.name = name;\r\n  \t\tthis.fullName = parentSuite ? parentSuite.fullName.concat(name) : [];\r\n\r\n  \t\tthis.tests = [];\r\n  \t\tthis.childSuites = [];\r\n\r\n  \t\tif (parentSuite) {\r\n  \t\t\tparentSuite.pushChildSuite(this);\r\n  \t\t}\r\n  \t}\r\n\r\n  \tcreateClass(SuiteReport, [{\r\n  \t\tkey: \"start\",\r\n  \t\tvalue: function start(recordTime) {\r\n  \t\t\tif (recordTime) {\r\n  \t\t\t\tthis._startTime = Date.now();\r\n  \t\t\t}\r\n\r\n  \t\t\treturn {\r\n  \t\t\t\tname: this.name,\r\n  \t\t\t\tfullName: this.fullName.slice(),\r\n  \t\t\t\ttests: this.tests.map(function (test) {\r\n  \t\t\t\t\treturn test.start();\r\n  \t\t\t\t}),\r\n  \t\t\t\tchildSuites: this.childSuites.map(function (suite) {\r\n  \t\t\t\t\treturn suite.start();\r\n  \t\t\t\t}),\r\n  \t\t\t\ttestCounts: {\r\n  \t\t\t\t\ttotal: this.getTestCounts().total\r\n  \t\t\t\t}\r\n  \t\t\t};\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"end\",\r\n  \t\tvalue: function end(recordTime) {\r\n  \t\t\tif (recordTime) {\r\n  \t\t\t\tthis._endTime = Date.now();\r\n  \t\t\t}\r\n\r\n  \t\t\treturn {\r\n  \t\t\t\tname: this.name,\r\n  \t\t\t\tfullName: this.fullName.slice(),\r\n  \t\t\t\ttests: this.tests.map(function (test) {\r\n  \t\t\t\t\treturn test.end();\r\n  \t\t\t\t}),\r\n  \t\t\t\tchildSuites: this.childSuites.map(function (suite) {\r\n  \t\t\t\t\treturn suite.end();\r\n  \t\t\t\t}),\r\n  \t\t\t\ttestCounts: this.getTestCounts(),\r\n  \t\t\t\truntime: this.getRuntime(),\r\n  \t\t\t\tstatus: this.getStatus()\r\n  \t\t\t};\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"pushChildSuite\",\r\n  \t\tvalue: function pushChildSuite(suite) {\r\n  \t\t\tthis.childSuites.push(suite);\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"pushTest\",\r\n  \t\tvalue: function pushTest(test) {\r\n  \t\t\tthis.tests.push(test);\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getRuntime\",\r\n  \t\tvalue: function getRuntime() {\r\n  \t\t\treturn this._endTime - this._startTime;\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getTestCounts\",\r\n  \t\tvalue: function getTestCounts() {\r\n  \t\t\tvar counts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { passed: 0, failed: 0, skipped: 0, todo: 0, total: 0 };\r\n\r\n  \t\t\tcounts = this.tests.reduce(function (counts, test) {\r\n  \t\t\t\tif (test.valid) {\r\n  \t\t\t\t\tcounts[test.getStatus()]++;\r\n  \t\t\t\t\tcounts.total++;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\treturn counts;\r\n  \t\t\t}, counts);\r\n\r\n  \t\t\treturn this.childSuites.reduce(function (counts, suite) {\r\n  \t\t\t\treturn suite.getTestCounts(counts);\r\n  \t\t\t}, counts);\r\n  \t\t}\r\n  \t}, {\r\n  \t\tkey: \"getStatus\",\r\n  \t\tvalue: function getStatus() {\r\n  \t\t\tvar _getTestCounts = this.getTestCounts(),\r\n  \t\t\t    total = _getTestCounts.total,\r\n  \t\t\t    failed = _getTestCounts.failed,\r\n  \t\t\t    skipped = _getTestCounts.skipped,\r\n  \t\t\t    todo = _getTestCounts.todo;\r\n\r\n  \t\t\tif (failed) {\r\n  \t\t\t\treturn \"failed\";\r\n  \t\t\t} else {\r\n  \t\t\t\tif (skipped === total) {\r\n  \t\t\t\t\treturn \"skipped\";\r\n  \t\t\t\t} else if (todo === total) {\r\n  \t\t\t\t\treturn \"todo\";\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\treturn \"passed\";\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}]);\r\n  \treturn SuiteReport;\r\n  }();\r\n\r\n  // Handle an unhandled exception. By convention, returns true if further\r\n  // error handling should be suppressed and false otherwise.\r\n  // In this case, we will only suppress further error handling if the\r\n  // \"ignoreGlobalErrors\" configuration option is enabled.\r\n  function onError(error) {\r\n  \tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n  \t\targs[_key - 1] = arguments[_key];\r\n  \t}\r\n\r\n  \tif (config.current) {\r\n  \t\tif (config.current.ignoreGlobalErrors) {\r\n  \t\t\treturn true;\r\n  \t\t}\r\n  \t\tpushFailure.apply(undefined, [error.message, error.fileName + \":\" + error.lineNumber].concat(args));\r\n  \t} else {\r\n  \t\ttest(\"global failure\", extend(function () {\r\n  \t\t\tpushFailure.apply(undefined, [error.message, error.fileName + \":\" + error.lineNumber].concat(args));\r\n  \t\t}, { validTest: true }));\r\n  \t}\r\n\r\n  \treturn false;\r\n  }\r\n\r\n  var focused = false;\r\n  var QUnit = {};\r\n  var globalSuite = new SuiteReport();\r\n\r\n  // The initial \"currentModule\" represents the global (or top-level) module that\r\n  // is not explicitly defined by the user, therefore we add the \"globalSuite\" to\r\n  // it since each module has a suiteReport associated with it.\r\n  config.currentModule.suiteReport = globalSuite;\r\n\r\n  var moduleStack = [];\r\n  var globalStartCalled = false;\r\n  var runStarted = false;\r\n\r\n  // Figure out if we're running the tests from a server or not\r\n  QUnit.isLocal = !(defined.document && window.location.protocol !== \"file:\");\r\n\r\n  // Expose the current QUnit version\r\n  QUnit.version = \"2.4.0\";\r\n\r\n  function createModule(name, testEnvironment, modifiers) {\r\n  \tvar parentModule = moduleStack.length ? moduleStack.slice(-1)[0] : null;\r\n  \tvar moduleName = parentModule !== null ? [parentModule.name, name].join(\" > \") : name;\r\n  \tvar parentSuite = parentModule ? parentModule.suiteReport : globalSuite;\r\n\r\n  \tvar skip$$1 = parentModule !== null && parentModule.skip || modifiers.skip;\r\n  \tvar todo$$1 = parentModule !== null && parentModule.todo || modifiers.todo;\r\n\r\n  \tvar module = {\r\n  \t\tname: moduleName,\r\n  \t\tparentModule: parentModule,\r\n  \t\ttests: [],\r\n  \t\tmoduleId: generateHash(moduleName),\r\n  \t\ttestsRun: 0,\r\n  \t\tunskippedTestsRun: 0,\r\n  \t\tchildModules: [],\r\n  \t\tsuiteReport: new SuiteReport(name, parentSuite),\r\n\r\n  \t\t// Pass along `skip` and `todo` properties from parent module, in case\r\n  \t\t// there is one, to childs. And use own otherwise.\r\n  \t\t// This property will be used to mark own tests and tests of child suites\r\n  \t\t// as either `skipped` or `todo`.\r\n  \t\tskip: skip$$1,\r\n  \t\ttodo: skip$$1 ? false : todo$$1\r\n  \t};\r\n\r\n  \tvar env = {};\r\n  \tif (parentModule) {\r\n  \t\tparentModule.childModules.push(module);\r\n  \t\textend(env, parentModule.testEnvironment);\r\n  \t}\r\n  \textend(env, testEnvironment);\r\n  \tmodule.testEnvironment = env;\r\n\r\n  \tconfig.modules.push(module);\r\n  \treturn module;\r\n  }\r\n\r\n  function processModule(name, options, executeNow) {\r\n  \tvar modifiers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\r\n\r\n  \tvar module = createModule(name, options, modifiers);\r\n\r\n  \t// Move any hooks to a 'hooks' object\r\n  \tvar testEnvironment = module.testEnvironment;\r\n  \tvar hooks = module.hooks = {};\r\n\r\n  \tsetHookFromEnvironment(hooks, testEnvironment, \"before\");\r\n  \tsetHookFromEnvironment(hooks, testEnvironment, \"beforeEach\");\r\n  \tsetHookFromEnvironment(hooks, testEnvironment, \"afterEach\");\r\n  \tsetHookFromEnvironment(hooks, testEnvironment, \"after\");\r\n\r\n  \tfunction setHookFromEnvironment(hooks, environment, name) {\r\n  \t\tvar potentialHook = environment[name];\r\n  \t\thooks[name] = typeof potentialHook === \"function\" ? [potentialHook] : [];\r\n  \t\tdelete environment[name];\r\n  \t}\r\n\r\n  \tvar moduleFns = {\r\n  \t\tbefore: setHookFunction(module, \"before\"),\r\n  \t\tbeforeEach: setHookFunction(module, \"beforeEach\"),\r\n  \t\tafterEach: setHookFunction(module, \"afterEach\"),\r\n  \t\tafter: setHookFunction(module, \"after\")\r\n  \t};\r\n\r\n  \tvar currentModule = config.currentModule;\r\n  \tif (objectType(executeNow) === \"function\") {\r\n  \t\tmoduleStack.push(module);\r\n  \t\tconfig.currentModule = module;\r\n  \t\texecuteNow.call(module.testEnvironment, moduleFns);\r\n  \t\tmoduleStack.pop();\r\n  \t\tmodule = module.parentModule || currentModule;\r\n  \t}\r\n\r\n  \tconfig.currentModule = module;\r\n  }\r\n\r\n  // TODO: extract this to a new file alongside its related functions\r\n  function module$1(name, options, executeNow) {\r\n  \tif (focused) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tif (arguments.length === 2) {\r\n  \t\tif (objectType(options) === \"function\") {\r\n  \t\t\texecuteNow = options;\r\n  \t\t\toptions = undefined;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tprocessModule(name, options, executeNow);\r\n  }\r\n\r\n  module$1.only = function () {\r\n  \tif (focused) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tconfig.modules.length = 0;\r\n  \tconfig.queue.length = 0;\r\n\r\n  \tmodule$1.apply(undefined, arguments);\r\n\r\n  \tfocused = true;\r\n  };\r\n\r\n  module$1.skip = function (name, options, executeNow) {\r\n  \tif (focused) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tif (arguments.length === 2) {\r\n  \t\tif (objectType(options) === \"function\") {\r\n  \t\t\texecuteNow = options;\r\n  \t\t\toptions = undefined;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tprocessModule(name, options, executeNow, { skip: true });\r\n  };\r\n\r\n  module$1.todo = function (name, options, executeNow) {\r\n  \tif (focused) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tif (arguments.length === 2) {\r\n  \t\tif (objectType(options) === \"function\") {\r\n  \t\t\texecuteNow = options;\r\n  \t\t\toptions = undefined;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tprocessModule(name, options, executeNow, { todo: true });\r\n  };\r\n\r\n  extend(QUnit, {\r\n  \ton: on,\r\n\r\n  \tmodule: module$1,\r\n\r\n  \ttest: test,\r\n\r\n  \ttodo: todo,\r\n\r\n  \tskip: skip,\r\n\r\n  \tonly: only,\r\n\r\n  \tstart: function start(count) {\r\n  \t\tvar globalStartAlreadyCalled = globalStartCalled;\r\n\r\n  \t\tif (!config.current) {\r\n  \t\t\tglobalStartCalled = true;\r\n\r\n  \t\t\tif (runStarted) {\r\n  \t\t\t\tthrow new Error(\"Called start() while test already started running\");\r\n  \t\t\t} else if (globalStartAlreadyCalled || count > 1) {\r\n  \t\t\t\tthrow new Error(\"Called start() outside of a test context too many times\");\r\n  \t\t\t} else if (config.autostart) {\r\n  \t\t\t\tthrow new Error(\"Called start() outside of a test context when \" + \"QUnit.config.autostart was true\");\r\n  \t\t\t} else if (!config.pageLoaded) {\r\n\r\n  \t\t\t\t// The page isn't completely loaded yet, so we set autostart and then\r\n  \t\t\t\t// load if we're in Node or wait for the browser's load event.\r\n  \t\t\t\tconfig.autostart = true;\r\n\r\n  \t\t\t\t// Starts from Node even if .load was not previously called. We still return\r\n  \t\t\t\t// early otherwise we'll wind up \"beginning\" twice.\r\n  \t\t\t\tif (!defined.document) {\r\n  \t\t\t\t\tQUnit.load();\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\treturn;\r\n  \t\t\t}\r\n  \t\t} else {\r\n  \t\t\tthrow new Error(\"QUnit.start cannot be called inside a test context.\");\r\n  \t\t}\r\n\r\n  \t\tscheduleBegin();\r\n  \t},\r\n\r\n  \tconfig: config,\r\n\r\n  \tis: is,\r\n\r\n  \tobjectType: objectType,\r\n\r\n  \textend: extend,\r\n\r\n  \tload: function load() {\r\n  \t\tconfig.pageLoaded = true;\r\n\r\n  \t\t// Initialize the configuration options\r\n  \t\textend(config, {\r\n  \t\t\tstats: { all: 0, bad: 0 },\r\n  \t\t\tstarted: 0,\r\n  \t\t\tupdateRate: 1000,\r\n  \t\t\tautostart: true,\r\n  \t\t\tfilter: \"\"\r\n  \t\t}, true);\r\n\r\n  \t\tif (!runStarted) {\r\n  \t\t\tconfig.blocking = false;\r\n\r\n  \t\t\tif (config.autostart) {\r\n  \t\t\t\tscheduleBegin();\r\n  \t\t\t}\r\n  \t\t}\r\n  \t},\r\n\r\n  \tstack: function stack(offset) {\r\n  \t\toffset = (offset || 0) + 2;\r\n  \t\treturn sourceFromStacktrace(offset);\r\n  \t},\r\n\r\n  \tonError: onError\r\n  });\r\n\r\n  QUnit.pushFailure = pushFailure;\r\n  QUnit.assert = Assert.prototype;\r\n  QUnit.equiv = equiv;\r\n  QUnit.dump = dump;\r\n\r\n  registerLoggingCallbacks(QUnit);\r\n\r\n  function scheduleBegin() {\r\n\r\n  \trunStarted = true;\r\n\r\n  \t// Add a slight delay to allow definition of more modules and tests.\r\n  \tif (defined.setTimeout) {\r\n  \t\tsetTimeout(function () {\r\n  \t\t\tbegin();\r\n  \t\t}, 13);\r\n  \t} else {\r\n  \t\tbegin();\r\n  \t}\r\n  }\r\n\r\n  function begin() {\r\n  \tvar i,\r\n  \t    l,\r\n  \t    modulesLog = [];\r\n\r\n  \t// If the test run hasn't officially begun yet\r\n  \tif (!config.started) {\r\n\r\n  \t\t// Record the time of the test run's beginning\r\n  \t\tconfig.started = now();\r\n\r\n  \t\t// Delete the loose unnamed module if unused.\r\n  \t\tif (config.modules[0].name === \"\" && config.modules[0].tests.length === 0) {\r\n  \t\t\tconfig.modules.shift();\r\n  \t\t}\r\n\r\n  \t\t// Avoid unnecessary information by not logging modules' test environments\r\n  \t\tfor (i = 0, l = config.modules.length; i < l; i++) {\r\n  \t\t\tmodulesLog.push({\r\n  \t\t\t\tname: config.modules[i].name,\r\n  \t\t\t\ttests: config.modules[i].tests\r\n  \t\t\t});\r\n  \t\t}\r\n\r\n  \t\t// The test run is officially beginning now\r\n  \t\temit(\"runStart\", globalSuite.start(true));\r\n  \t\trunLoggingCallbacks(\"begin\", {\r\n  \t\t\ttotalTests: Test.count,\r\n  \t\t\tmodules: modulesLog\r\n  \t\t});\r\n  \t}\r\n\r\n  \tconfig.blocking = false;\r\n  \tProcessingQueue.advance();\r\n  }\r\n\r\n  function setHookFunction(module, hookName) {\r\n  \treturn function setHook(callback) {\r\n  \t\tmodule.hooks[hookName].push(callback);\r\n  \t};\r\n  }\r\n\r\n  exportQUnit(QUnit);\r\n\r\n  (function () {\r\n\r\n  \tif (typeof window === \"undefined\" || typeof document === \"undefined\") {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar config = QUnit.config,\r\n  \t    hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n  \t// Stores fixture HTML for resetting later\r\n  \tfunction storeFixture() {\r\n\r\n  \t\t// Avoid overwriting user-defined values\r\n  \t\tif (hasOwn.call(config, \"fixture\")) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tvar fixture = document.getElementById(\"qunit-fixture\");\r\n  \t\tif (fixture) {\r\n  \t\t\tconfig.fixture = fixture.innerHTML;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tQUnit.begin(storeFixture);\r\n\r\n  \t// Resets the fixture DOM element if available.\r\n  \tfunction resetFixture() {\r\n  \t\tif (config.fixture == null) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tvar fixture = document.getElementById(\"qunit-fixture\");\r\n  \t\tif (fixture) {\r\n  \t\t\tfixture.innerHTML = config.fixture;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tQUnit.testStart(resetFixture);\r\n  })();\r\n\r\n  (function () {\r\n\r\n  \t// Only interact with URLs via window.location\r\n  \tvar location = typeof window !== \"undefined\" && window.location;\r\n  \tif (!location) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar urlParams = getUrlParams();\r\n\r\n  \tQUnit.urlParams = urlParams;\r\n\r\n  \t// Match module/test by inclusion in an array\r\n  \tQUnit.config.moduleId = [].concat(urlParams.moduleId || []);\r\n  \tQUnit.config.testId = [].concat(urlParams.testId || []);\r\n\r\n  \t// Exact case-insensitive match of the module name\r\n  \tQUnit.config.module = urlParams.module;\r\n\r\n  \t// Regular expression or case-insenstive substring match against \"moduleName: testName\"\r\n  \tQUnit.config.filter = urlParams.filter;\r\n\r\n  \t// Test order randomization\r\n  \tif (urlParams.seed === true) {\r\n\r\n  \t\t// Generate a random seed if the option is specified without a value\r\n  \t\tQUnit.config.seed = Math.random().toString(36).slice(2);\r\n  \t} else if (urlParams.seed) {\r\n  \t\tQUnit.config.seed = urlParams.seed;\r\n  \t}\r\n\r\n  \t// Add URL-parameter-mapped config values with UI form rendering data\r\n  \tQUnit.config.urlConfig.push({\r\n  \t\tid: \"hidepassed\",\r\n  \t\tlabel: \"Hide passed tests\",\r\n  \t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\r\n  \t}, {\r\n  \t\tid: \"noglobals\",\r\n  \t\tlabel: \"Check for Globals\",\r\n  \t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" + \"global object (`window` in Browsers). Stored as query-strings.\"\r\n  \t}, {\r\n  \t\tid: \"notrycatch\",\r\n  \t\tlabel: \"No try-catch\",\r\n  \t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" + \"exceptions in IE reasonable. Stored as query-strings.\"\r\n  \t});\r\n\r\n  \tQUnit.begin(function () {\r\n  \t\tvar i,\r\n  \t\t    option,\r\n  \t\t    urlConfig = QUnit.config.urlConfig;\r\n\r\n  \t\tfor (i = 0; i < urlConfig.length; i++) {\r\n\r\n  \t\t\t// Options can be either strings or objects with nonempty \"id\" properties\r\n  \t\t\toption = QUnit.config.urlConfig[i];\r\n  \t\t\tif (typeof option !== \"string\") {\r\n  \t\t\t\toption = option.id;\r\n  \t\t\t}\r\n\r\n  \t\t\tif (QUnit.config[option] === undefined) {\r\n  \t\t\t\tQUnit.config[option] = urlParams[option];\r\n  \t\t\t}\r\n  \t\t}\r\n  \t});\r\n\r\n  \tfunction getUrlParams() {\r\n  \t\tvar i, param, name, value;\r\n  \t\tvar urlParams = Object.create(null);\r\n  \t\tvar params = location.search.slice(1).split(\"&\");\r\n  \t\tvar length = params.length;\r\n\r\n  \t\tfor (i = 0; i < length; i++) {\r\n  \t\t\tif (params[i]) {\r\n  \t\t\t\tparam = params[i].split(\"=\");\r\n  \t\t\t\tname = decodeQueryParam(param[0]);\r\n\r\n  \t\t\t\t// Allow just a key to turn on a flag, e.g., test.html?noglobals\r\n  \t\t\t\tvalue = param.length === 1 || decodeQueryParam(param.slice(1).join(\"=\"));\r\n  \t\t\t\tif (name in urlParams) {\r\n  \t\t\t\t\turlParams[name] = [].concat(urlParams[name], value);\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\turlParams[name] = value;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\treturn urlParams;\r\n  \t}\r\n\r\n  \tfunction decodeQueryParam(param) {\r\n  \t\treturn decodeURIComponent(param.replace(/\\+/g, \"%20\"));\r\n  \t}\r\n  })();\r\n\r\n  var stats = {\r\n  \tpassedTests: 0,\r\n  \tfailedTests: 0,\r\n  \tskippedTests: 0,\r\n  \ttodoTests: 0\r\n  };\r\n\r\n  // Escape text for attribute or text content.\r\n  function escapeText(s) {\r\n  \tif (!s) {\r\n  \t\treturn \"\";\r\n  \t}\r\n  \ts = s + \"\";\r\n\r\n  \t// Both single quotes and double quotes (for attributes)\r\n  \treturn s.replace(/['\"<>&]/g, function (s) {\r\n  \t\tswitch (s) {\r\n  \t\t\tcase \"'\":\r\n  \t\t\t\treturn \"&#039;\";\r\n  \t\t\tcase \"\\\"\":\r\n  \t\t\t\treturn \"&quot;\";\r\n  \t\t\tcase \"<\":\r\n  \t\t\t\treturn \"&lt;\";\r\n  \t\t\tcase \">\":\r\n  \t\t\t\treturn \"&gt;\";\r\n  \t\t\tcase \"&\":\r\n  \t\t\t\treturn \"&amp;\";\r\n  \t\t}\r\n  \t});\r\n  }\r\n\r\n  (function () {\r\n\r\n  \t// Don't load the HTML Reporter on non-browser environments\r\n  \tif (typeof window === \"undefined\" || !window.document) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tvar config = QUnit.config,\r\n  \t    document$$1 = window.document,\r\n  \t    collapseNext = false,\r\n  \t    hasOwn = Object.prototype.hasOwnProperty,\r\n  \t    unfilteredUrl = setUrl({ filter: undefined, module: undefined,\r\n  \t\tmoduleId: undefined, testId: undefined }),\r\n  \t    modulesList = [];\r\n\r\n  \tfunction addEvent(elem, type, fn) {\r\n  \t\telem.addEventListener(type, fn, false);\r\n  \t}\r\n\r\n  \tfunction removeEvent(elem, type, fn) {\r\n  \t\telem.removeEventListener(type, fn, false);\r\n  \t}\r\n\r\n  \tfunction addEvents(elems, type, fn) {\r\n  \t\tvar i = elems.length;\r\n  \t\twhile (i--) {\r\n  \t\t\taddEvent(elems[i], type, fn);\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction hasClass(elem, name) {\r\n  \t\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") >= 0;\r\n  \t}\r\n\r\n  \tfunction addClass(elem, name) {\r\n  \t\tif (!hasClass(elem, name)) {\r\n  \t\t\telem.className += (elem.className ? \" \" : \"\") + name;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction toggleClass(elem, name, force) {\r\n  \t\tif (force || typeof force === \"undefined\" && !hasClass(elem, name)) {\r\n  \t\t\taddClass(elem, name);\r\n  \t\t} else {\r\n  \t\t\tremoveClass(elem, name);\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction removeClass(elem, name) {\r\n  \t\tvar set = \" \" + elem.className + \" \";\r\n\r\n  \t\t// Class name may appear multiple times\r\n  \t\twhile (set.indexOf(\" \" + name + \" \") >= 0) {\r\n  \t\t\tset = set.replace(\" \" + name + \" \", \" \");\r\n  \t\t}\r\n\r\n  \t\t// Trim for prettiness\r\n  \t\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\r\n  \t}\r\n\r\n  \tfunction id(name) {\r\n  \t\treturn document$$1.getElementById && document$$1.getElementById(name);\r\n  \t}\r\n\r\n  \tfunction abortTests() {\r\n  \t\tvar abortButton = id(\"qunit-abort-tests-button\");\r\n  \t\tif (abortButton) {\r\n  \t\t\tabortButton.disabled = true;\r\n  \t\t\tabortButton.innerHTML = \"Aborting...\";\r\n  \t\t}\r\n  \t\tQUnit.config.queue.length = 0;\r\n  \t\treturn false;\r\n  \t}\r\n\r\n  \tfunction interceptNavigation(ev) {\r\n  \t\tapplyUrlParams();\r\n\r\n  \t\tif (ev && ev.preventDefault) {\r\n  \t\t\tev.preventDefault();\r\n  \t\t}\r\n\r\n  \t\treturn false;\r\n  \t}\r\n\r\n  \tfunction getUrlConfigHtml() {\r\n  \t\tvar i,\r\n  \t\t    j,\r\n  \t\t    val,\r\n  \t\t    escaped,\r\n  \t\t    escapedTooltip,\r\n  \t\t    selection = false,\r\n  \t\t    urlConfig = config.urlConfig,\r\n  \t\t    urlConfigHtml = \"\";\r\n\r\n  \t\tfor (i = 0; i < urlConfig.length; i++) {\r\n\r\n  \t\t\t// Options can be either strings or objects with nonempty \"id\" properties\r\n  \t\t\tval = config.urlConfig[i];\r\n  \t\t\tif (typeof val === \"string\") {\r\n  \t\t\t\tval = {\r\n  \t\t\t\t\tid: val,\r\n  \t\t\t\t\tlabel: val\r\n  \t\t\t\t};\r\n  \t\t\t}\r\n\r\n  \t\t\tescaped = escapeText(val.id);\r\n  \t\t\tescapedTooltip = escapeText(val.tooltip);\r\n\r\n  \t\t\tif (!val.value || typeof val.value === \"string\") {\r\n  \t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped + \"' title='\" + escapedTooltip + \"'><input id='qunit-urlconfig-\" + escaped + \"' name='\" + escaped + \"' type='checkbox'\" + (val.value ? \" value='\" + escapeText(val.value) + \"'\" : \"\") + (config[val.id] ? \" checked='checked'\" : \"\") + \" title='\" + escapedTooltip + \"' />\" + escapeText(val.label) + \"</label>\";\r\n  \t\t\t} else {\r\n  \t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped + \"' title='\" + escapedTooltip + \"'>\" + val.label + \": </label><select id='qunit-urlconfig-\" + escaped + \"' name='\" + escaped + \"' title='\" + escapedTooltip + \"'><option></option>\";\r\n\r\n  \t\t\t\tif (QUnit.is(\"array\", val.value)) {\r\n  \t\t\t\t\tfor (j = 0; j < val.value.length; j++) {\r\n  \t\t\t\t\t\tescaped = escapeText(val.value[j]);\r\n  \t\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"'\" + (config[val.id] === val.value[j] ? (selection = true) && \" selected='selected'\" : \"\") + \">\" + escaped + \"</option>\";\r\n  \t\t\t\t\t}\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tfor (j in val.value) {\r\n  \t\t\t\t\t\tif (hasOwn.call(val.value, j)) {\r\n  \t\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText(j) + \"'\" + (config[val.id] === j ? (selection = true) && \" selected='selected'\" : \"\") + \">\" + escapeText(val.value[j]) + \"</option>\";\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tif (config[val.id] && !selection) {\r\n  \t\t\t\t\tescaped = escapeText(config[val.id]);\r\n  \t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"' selected='selected' disabled='disabled'>\" + escaped + \"</option>\";\r\n  \t\t\t\t}\r\n  \t\t\t\turlConfigHtml += \"</select>\";\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\treturn urlConfigHtml;\r\n  \t}\r\n\r\n  \t// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\r\n  \t// Updates the URL with the new state of `config.urlConfig` values.\r\n  \tfunction toolbarChanged() {\r\n  \t\tvar updatedUrl,\r\n  \t\t    value,\r\n  \t\t    tests,\r\n  \t\t    field = this,\r\n  \t\t    params = {};\r\n\r\n  \t\t// Detect if field is a select menu or a checkbox\r\n  \t\tif (\"selectedIndex\" in field) {\r\n  \t\t\tvalue = field.options[field.selectedIndex].value || undefined;\r\n  \t\t} else {\r\n  \t\t\tvalue = field.checked ? field.defaultValue || true : undefined;\r\n  \t\t}\r\n\r\n  \t\tparams[field.name] = value;\r\n  \t\tupdatedUrl = setUrl(params);\r\n\r\n  \t\t// Check if we can apply the change without a page refresh\r\n  \t\tif (\"hidepassed\" === field.name && \"replaceState\" in window.history) {\r\n  \t\t\tQUnit.urlParams[field.name] = value;\r\n  \t\t\tconfig[field.name] = value || false;\r\n  \t\t\ttests = id(\"qunit-tests\");\r\n  \t\t\tif (tests) {\r\n  \t\t\t\ttoggleClass(tests, \"hidepass\", value || false);\r\n  \t\t\t}\r\n  \t\t\twindow.history.replaceState(null, \"\", updatedUrl);\r\n  \t\t} else {\r\n  \t\t\twindow.location = updatedUrl;\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction setUrl(params) {\r\n  \t\tvar key,\r\n  \t\t    arrValue,\r\n  \t\t    i,\r\n  \t\t    querystring = \"?\",\r\n  \t\t    location = window.location;\r\n\r\n  \t\tparams = QUnit.extend(QUnit.extend({}, QUnit.urlParams), params);\r\n\r\n  \t\tfor (key in params) {\r\n\r\n  \t\t\t// Skip inherited or undefined properties\r\n  \t\t\tif (hasOwn.call(params, key) && params[key] !== undefined) {\r\n\r\n  \t\t\t\t// Output a parameter for each value of this key (but usually just one)\r\n  \t\t\t\tarrValue = [].concat(params[key]);\r\n  \t\t\t\tfor (i = 0; i < arrValue.length; i++) {\r\n  \t\t\t\t\tquerystring += encodeURIComponent(key);\r\n  \t\t\t\t\tif (arrValue[i] !== true) {\r\n  \t\t\t\t\t\tquerystring += \"=\" + encodeURIComponent(arrValue[i]);\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\tquerystring += \"&\";\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\treturn location.protocol + \"//\" + location.host + location.pathname + querystring.slice(0, -1);\r\n  \t}\r\n\r\n  \tfunction applyUrlParams() {\r\n  \t\tvar i,\r\n  \t\t    selectedModules = [],\r\n  \t\t    modulesList = id(\"qunit-modulefilter-dropdown-list\").getElementsByTagName(\"input\"),\r\n  \t\t    filter = id(\"qunit-filter-input\").value;\r\n\r\n  \t\tfor (i = 0; i < modulesList.length; i++) {\r\n  \t\t\tif (modulesList[i].checked) {\r\n  \t\t\t\tselectedModules.push(modulesList[i].value);\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\twindow.location = setUrl({\r\n  \t\t\tfilter: filter === \"\" ? undefined : filter,\r\n  \t\t\tmoduleId: selectedModules.length === 0 ? undefined : selectedModules,\r\n\r\n  \t\t\t// Remove module and testId filter\r\n  \t\t\tmodule: undefined,\r\n  \t\t\ttestId: undefined\r\n  \t\t});\r\n  \t}\r\n\r\n  \tfunction toolbarUrlConfigContainer() {\r\n  \t\tvar urlConfigContainer = document$$1.createElement(\"span\");\r\n\r\n  \t\turlConfigContainer.innerHTML = getUrlConfigHtml();\r\n  \t\taddClass(urlConfigContainer, \"qunit-url-config\");\r\n\r\n  \t\taddEvents(urlConfigContainer.getElementsByTagName(\"input\"), \"change\", toolbarChanged);\r\n  \t\taddEvents(urlConfigContainer.getElementsByTagName(\"select\"), \"change\", toolbarChanged);\r\n\r\n  \t\treturn urlConfigContainer;\r\n  \t}\r\n\r\n  \tfunction abortTestsButton() {\r\n  \t\tvar button = document$$1.createElement(\"button\");\r\n  \t\tbutton.id = \"qunit-abort-tests-button\";\r\n  \t\tbutton.innerHTML = \"Abort\";\r\n  \t\taddEvent(button, \"click\", abortTests);\r\n  \t\treturn button;\r\n  \t}\r\n\r\n  \tfunction toolbarLooseFilter() {\r\n  \t\tvar filter = document$$1.createElement(\"form\"),\r\n  \t\t    label = document$$1.createElement(\"label\"),\r\n  \t\t    input = document$$1.createElement(\"input\"),\r\n  \t\t    button = document$$1.createElement(\"button\");\r\n\r\n  \t\taddClass(filter, \"qunit-filter\");\r\n\r\n  \t\tlabel.innerHTML = \"Filter: \";\r\n\r\n  \t\tinput.type = \"text\";\r\n  \t\tinput.value = config.filter || \"\";\r\n  \t\tinput.name = \"filter\";\r\n  \t\tinput.id = \"qunit-filter-input\";\r\n\r\n  \t\tbutton.innerHTML = \"Go\";\r\n\r\n  \t\tlabel.appendChild(input);\r\n\r\n  \t\tfilter.appendChild(label);\r\n  \t\tfilter.appendChild(document$$1.createTextNode(\" \"));\r\n  \t\tfilter.appendChild(button);\r\n  \t\taddEvent(filter, \"submit\", interceptNavigation);\r\n\r\n  \t\treturn filter;\r\n  \t}\r\n\r\n  \tfunction moduleListHtml() {\r\n  \t\tvar i,\r\n  \t\t    checked,\r\n  \t\t    html = \"\";\r\n\r\n  \t\tfor (i = 0; i < config.modules.length; i++) {\r\n  \t\t\tif (config.modules[i].name !== \"\") {\r\n  \t\t\t\tchecked = config.moduleId.indexOf(config.modules[i].moduleId) > -1;\r\n  \t\t\t\thtml += \"<li><label class='clickable\" + (checked ? \" checked\" : \"\") + \"'><input type='checkbox' \" + \"value='\" + config.modules[i].moduleId + \"'\" + (checked ? \" checked='checked'\" : \"\") + \" />\" + escapeText(config.modules[i].name) + \"</label></li>\";\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\treturn html;\r\n  \t}\r\n\r\n  \tfunction toolbarModuleFilter() {\r\n  \t\tvar allCheckbox,\r\n  \t\t    commit,\r\n  \t\t    reset,\r\n  \t\t    moduleFilter = document$$1.createElement(\"form\"),\r\n  \t\t    label = document$$1.createElement(\"label\"),\r\n  \t\t    moduleSearch = document$$1.createElement(\"input\"),\r\n  \t\t    dropDown = document$$1.createElement(\"div\"),\r\n  \t\t    actions = document$$1.createElement(\"span\"),\r\n  \t\t    dropDownList = document$$1.createElement(\"ul\"),\r\n  \t\t    dirty = false;\r\n\r\n  \t\tmoduleSearch.id = \"qunit-modulefilter-search\";\r\n  \t\taddEvent(moduleSearch, \"input\", searchInput);\r\n  \t\taddEvent(moduleSearch, \"input\", searchFocus);\r\n  \t\taddEvent(moduleSearch, \"focus\", searchFocus);\r\n  \t\taddEvent(moduleSearch, \"click\", searchFocus);\r\n\r\n  \t\tlabel.id = \"qunit-modulefilter-search-container\";\r\n  \t\tlabel.innerHTML = \"Module: \";\r\n  \t\tlabel.appendChild(moduleSearch);\r\n\r\n  \t\tactions.id = \"qunit-modulefilter-actions\";\r\n  \t\tactions.innerHTML = \"<button style='display:none'>Apply</button>\" + \"<button type='reset' style='display:none'>Reset</button>\" + \"<label class='clickable\" + (config.moduleId.length ? \"\" : \" checked\") + \"'><input type='checkbox'\" + (config.moduleId.length ? \"\" : \" checked='checked'\") + \">All modules</label>\";\r\n  \t\tallCheckbox = actions.lastChild.firstChild;\r\n  \t\tcommit = actions.firstChild;\r\n  \t\treset = commit.nextSibling;\r\n  \t\taddEvent(commit, \"click\", applyUrlParams);\r\n\r\n  \t\tdropDownList.id = \"qunit-modulefilter-dropdown-list\";\r\n  \t\tdropDownList.innerHTML = moduleListHtml();\r\n\r\n  \t\tdropDown.id = \"qunit-modulefilter-dropdown\";\r\n  \t\tdropDown.style.display = \"none\";\r\n  \t\tdropDown.appendChild(actions);\r\n  \t\tdropDown.appendChild(dropDownList);\r\n  \t\taddEvent(dropDown, \"change\", selectionChange);\r\n  \t\tselectionChange();\r\n\r\n  \t\tmoduleFilter.id = \"qunit-modulefilter\";\r\n  \t\tmoduleFilter.appendChild(label);\r\n  \t\tmoduleFilter.appendChild(dropDown);\r\n  \t\taddEvent(moduleFilter, \"submit\", interceptNavigation);\r\n  \t\taddEvent(moduleFilter, \"reset\", function () {\r\n\r\n  \t\t\t// Let the reset happen, then update styles\r\n  \t\t\twindow.setTimeout(selectionChange);\r\n  \t\t});\r\n\r\n  \t\t// Enables show/hide for the dropdown\r\n  \t\tfunction searchFocus() {\r\n  \t\t\tif (dropDown.style.display !== \"none\") {\r\n  \t\t\t\treturn;\r\n  \t\t\t}\r\n\r\n  \t\t\tdropDown.style.display = \"block\";\r\n  \t\t\taddEvent(document$$1, \"click\", hideHandler);\r\n  \t\t\taddEvent(document$$1, \"keydown\", hideHandler);\r\n\r\n  \t\t\t// Hide on Escape keydown or outside-container click\r\n  \t\t\tfunction hideHandler(e) {\r\n  \t\t\t\tvar inContainer = moduleFilter.contains(e.target);\r\n\r\n  \t\t\t\tif (e.keyCode === 27 || !inContainer) {\r\n  \t\t\t\t\tif (e.keyCode === 27 && inContainer) {\r\n  \t\t\t\t\t\tmoduleSearch.focus();\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\tdropDown.style.display = \"none\";\r\n  \t\t\t\t\tremoveEvent(document$$1, \"click\", hideHandler);\r\n  \t\t\t\t\tremoveEvent(document$$1, \"keydown\", hideHandler);\r\n  \t\t\t\t\tmoduleSearch.value = \"\";\r\n  \t\t\t\t\tsearchInput();\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Processes module search box input\r\n  \t\tfunction searchInput() {\r\n  \t\t\tvar i,\r\n  \t\t\t    item,\r\n  \t\t\t    searchText = moduleSearch.value.toLowerCase(),\r\n  \t\t\t    listItems = dropDownList.children;\r\n\r\n  \t\t\tfor (i = 0; i < listItems.length; i++) {\r\n  \t\t\t\titem = listItems[i];\r\n  \t\t\t\tif (!searchText || item.textContent.toLowerCase().indexOf(searchText) > -1) {\r\n  \t\t\t\t\titem.style.display = \"\";\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\titem.style.display = \"none\";\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Processes selection changes\r\n  \t\tfunction selectionChange(evt) {\r\n  \t\t\tvar i,\r\n  \t\t\t    item,\r\n  \t\t\t    checkbox = evt && evt.target || allCheckbox,\r\n  \t\t\t    modulesList = dropDownList.getElementsByTagName(\"input\"),\r\n  \t\t\t    selectedNames = [];\r\n\r\n  \t\t\ttoggleClass(checkbox.parentNode, \"checked\", checkbox.checked);\r\n\r\n  \t\t\tdirty = false;\r\n  \t\t\tif (checkbox.checked && checkbox !== allCheckbox) {\r\n  \t\t\t\tallCheckbox.checked = false;\r\n  \t\t\t\tremoveClass(allCheckbox.parentNode, \"checked\");\r\n  \t\t\t}\r\n  \t\t\tfor (i = 0; i < modulesList.length; i++) {\r\n  \t\t\t\titem = modulesList[i];\r\n  \t\t\t\tif (!evt) {\r\n  \t\t\t\t\ttoggleClass(item.parentNode, \"checked\", item.checked);\r\n  \t\t\t\t} else if (checkbox === allCheckbox && checkbox.checked) {\r\n  \t\t\t\t\titem.checked = false;\r\n  \t\t\t\t\tremoveClass(item.parentNode, \"checked\");\r\n  \t\t\t\t}\r\n  \t\t\t\tdirty = dirty || item.checked !== item.defaultChecked;\r\n  \t\t\t\tif (item.checked) {\r\n  \t\t\t\t\tselectedNames.push(item.parentNode.textContent);\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n\r\n  \t\t\tcommit.style.display = reset.style.display = dirty ? \"\" : \"none\";\r\n  \t\t\tmoduleSearch.placeholder = selectedNames.join(\", \") || allCheckbox.parentNode.textContent;\r\n  \t\t\tmoduleSearch.title = \"Type to filter list. Current selection:\\n\" + (selectedNames.join(\"\\n\") || allCheckbox.parentNode.textContent);\r\n  \t\t}\r\n\r\n  \t\treturn moduleFilter;\r\n  \t}\r\n\r\n  \tfunction appendToolbar() {\r\n  \t\tvar toolbar = id(\"qunit-testrunner-toolbar\");\r\n\r\n  \t\tif (toolbar) {\r\n  \t\t\ttoolbar.appendChild(toolbarUrlConfigContainer());\r\n  \t\t\ttoolbar.appendChild(toolbarModuleFilter());\r\n  \t\t\ttoolbar.appendChild(toolbarLooseFilter());\r\n  \t\t\ttoolbar.appendChild(document$$1.createElement(\"div\")).className = \"clearfix\";\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendHeader() {\r\n  \t\tvar header = id(\"qunit-header\");\r\n\r\n  \t\tif (header) {\r\n  \t\t\theader.innerHTML = \"<a href='\" + escapeText(unfilteredUrl) + \"'>\" + header.innerHTML + \"</a> \";\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendBanner() {\r\n  \t\tvar banner = id(\"qunit-banner\");\r\n\r\n  \t\tif (banner) {\r\n  \t\t\tbanner.className = \"\";\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendTestResults() {\r\n  \t\tvar tests = id(\"qunit-tests\"),\r\n  \t\t    result = id(\"qunit-testresult\"),\r\n  \t\t    controls;\r\n\r\n  \t\tif (result) {\r\n  \t\t\tresult.parentNode.removeChild(result);\r\n  \t\t}\r\n\r\n  \t\tif (tests) {\r\n  \t\t\ttests.innerHTML = \"\";\r\n  \t\t\tresult = document$$1.createElement(\"p\");\r\n  \t\t\tresult.id = \"qunit-testresult\";\r\n  \t\t\tresult.className = \"result\";\r\n  \t\t\ttests.parentNode.insertBefore(result, tests);\r\n  \t\t\tresult.innerHTML = \"<div id=\\\"qunit-testresult-display\\\">Running...<br />&#160;</div>\" + \"<div id=\\\"qunit-testresult-controls\\\"></div>\" + \"<div class=\\\"clearfix\\\"></div>\";\r\n  \t\t\tcontrols = id(\"qunit-testresult-controls\");\r\n  \t\t}\r\n\r\n  \t\tif (controls) {\r\n  \t\t\tcontrols.appendChild(abortTestsButton());\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendFilteredTest() {\r\n  \t\tvar testId = QUnit.config.testId;\r\n  \t\tif (!testId || testId.length <= 0) {\r\n  \t\t\treturn \"\";\r\n  \t\t}\r\n  \t\treturn \"<div id='qunit-filteredTest'>Rerunning selected tests: \" + escapeText(testId.join(\", \")) + \" <a id='qunit-clearFilter' href='\" + escapeText(unfilteredUrl) + \"'>Run all tests</a></div>\";\r\n  \t}\r\n\r\n  \tfunction appendUserAgent() {\r\n  \t\tvar userAgent = id(\"qunit-userAgent\");\r\n\r\n  \t\tif (userAgent) {\r\n  \t\t\tuserAgent.innerHTML = \"\";\r\n  \t\t\tuserAgent.appendChild(document$$1.createTextNode(\"QUnit \" + QUnit.version + \"; \" + navigator.userAgent));\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendInterface() {\r\n  \t\tvar qunit = id(\"qunit\");\r\n\r\n  \t\tif (qunit) {\r\n  \t\t\tqunit.innerHTML = \"<h1 id='qunit-header'>\" + escapeText(document$$1.title) + \"</h1>\" + \"<h2 id='qunit-banner'></h2>\" + \"<div id='qunit-testrunner-toolbar'></div>\" + appendFilteredTest() + \"<h2 id='qunit-userAgent'></h2>\" + \"<ol id='qunit-tests'></ol>\";\r\n  \t\t}\r\n\r\n  \t\tappendHeader();\r\n  \t\tappendBanner();\r\n  \t\tappendTestResults();\r\n  \t\tappendUserAgent();\r\n  \t\tappendToolbar();\r\n  \t}\r\n\r\n  \tfunction appendTestsList(modules) {\r\n  \t\tvar i, l, x, z, test, moduleObj;\r\n\r\n  \t\tfor (i = 0, l = modules.length; i < l; i++) {\r\n  \t\t\tmoduleObj = modules[i];\r\n\r\n  \t\t\tfor (x = 0, z = moduleObj.tests.length; x < z; x++) {\r\n  \t\t\t\ttest = moduleObj.tests[x];\r\n\r\n  \t\t\t\tappendTest(test.name, test.testId, moduleObj.name);\r\n  \t\t\t}\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfunction appendTest(name, testId, moduleName) {\r\n  \t\tvar title,\r\n  \t\t    rerunTrigger,\r\n  \t\t    testBlock,\r\n  \t\t    assertList,\r\n  \t\t    tests = id(\"qunit-tests\");\r\n\r\n  \t\tif (!tests) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\ttitle = document$$1.createElement(\"strong\");\r\n  \t\ttitle.innerHTML = getNameHtml(name, moduleName);\r\n\r\n  \t\trerunTrigger = document$$1.createElement(\"a\");\r\n  \t\trerunTrigger.innerHTML = \"Rerun\";\r\n  \t\trerunTrigger.href = setUrl({ testId: testId });\r\n\r\n  \t\ttestBlock = document$$1.createElement(\"li\");\r\n  \t\ttestBlock.appendChild(title);\r\n  \t\ttestBlock.appendChild(rerunTrigger);\r\n  \t\ttestBlock.id = \"qunit-test-output-\" + testId;\r\n\r\n  \t\tassertList = document$$1.createElement(\"ol\");\r\n  \t\tassertList.className = \"qunit-assert-list\";\r\n\r\n  \t\ttestBlock.appendChild(assertList);\r\n\r\n  \t\ttests.appendChild(testBlock);\r\n  \t}\r\n\r\n  \t// HTML Reporter initialization and load\r\n  \tQUnit.begin(function (details) {\r\n  \t\tvar i, moduleObj, tests;\r\n\r\n  \t\t// Sort modules by name for the picker\r\n  \t\tfor (i = 0; i < details.modules.length; i++) {\r\n  \t\t\tmoduleObj = details.modules[i];\r\n  \t\t\tif (moduleObj.name) {\r\n  \t\t\t\tmodulesList.push(moduleObj.name);\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\tmodulesList.sort(function (a, b) {\r\n  \t\t\treturn a.localeCompare(b);\r\n  \t\t});\r\n\r\n  \t\t// Initialize QUnit elements\r\n  \t\tappendInterface();\r\n  \t\tappendTestsList(details.modules);\r\n  \t\ttests = id(\"qunit-tests\");\r\n  \t\tif (tests && config.hidepassed) {\r\n  \t\t\taddClass(tests, \"hidepass\");\r\n  \t\t}\r\n  \t});\r\n\r\n  \tQUnit.done(function (details) {\r\n  \t\tvar banner = id(\"qunit-banner\"),\r\n  \t\t    tests = id(\"qunit-tests\"),\r\n  \t\t    abortButton = id(\"qunit-abort-tests-button\"),\r\n  \t\t    totalTests = stats.passedTests + stats.skippedTests + stats.todoTests + stats.failedTests,\r\n  \t\t    html = [totalTests, \" tests completed in \", details.runtime, \" milliseconds, with \", stats.failedTests, \" failed, \", stats.skippedTests, \" skipped, and \", stats.todoTests, \" todo.<br />\", \"<span class='passed'>\", details.passed, \"</span> assertions of <span class='total'>\", details.total, \"</span> passed, <span class='failed'>\", details.failed, \"</span> failed.\"].join(\"\"),\r\n  \t\t    test,\r\n  \t\t    assertLi,\r\n  \t\t    assertList;\r\n\r\n  \t\t// Update remaing tests to aborted\r\n  \t\tif (abortButton && abortButton.disabled) {\r\n  \t\t\thtml = \"Tests aborted after \" + details.runtime + \" milliseconds.\";\r\n\r\n  \t\t\tfor (var i = 0; i < tests.children.length; i++) {\r\n  \t\t\t\ttest = tests.children[i];\r\n  \t\t\t\tif (test.className === \"\" || test.className === \"running\") {\r\n  \t\t\t\t\ttest.className = \"aborted\";\r\n  \t\t\t\t\tassertList = test.getElementsByTagName(\"ol\")[0];\r\n  \t\t\t\t\tassertLi = document$$1.createElement(\"li\");\r\n  \t\t\t\t\tassertLi.className = \"fail\";\r\n  \t\t\t\t\tassertLi.innerHTML = \"Test aborted.\";\r\n  \t\t\t\t\tassertList.appendChild(assertLi);\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\tif (banner && (!abortButton || abortButton.disabled === false)) {\r\n  \t\t\tbanner.className = stats.failedTests ? \"qunit-fail\" : \"qunit-pass\";\r\n  \t\t}\r\n\r\n  \t\tif (abortButton) {\r\n  \t\t\tabortButton.parentNode.removeChild(abortButton);\r\n  \t\t}\r\n\r\n  \t\tif (tests) {\r\n  \t\t\tid(\"qunit-testresult-display\").innerHTML = html;\r\n  \t\t}\r\n\r\n  \t\tif (config.altertitle && document$$1.title) {\r\n\r\n  \t\t\t// Show â for good, â for bad suite result in title\r\n  \t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\r\n  \t\t\tdocument$$1.title = [stats.failedTests ? \"\\u2716\" : \"\\u2714\", document$$1.title.replace(/^[\\u2714\\u2716] /i, \"\")].join(\" \");\r\n  \t\t}\r\n\r\n  \t\t// Scroll back to top to show results\r\n  \t\tif (config.scrolltop && window.scrollTo) {\r\n  \t\t\twindow.scrollTo(0, 0);\r\n  \t\t}\r\n  \t});\r\n\r\n  \tfunction getNameHtml(name, module) {\r\n  \t\tvar nameHtml = \"\";\r\n\r\n  \t\tif (module) {\r\n  \t\t\tnameHtml = \"<span class='module-name'>\" + escapeText(module) + \"</span>: \";\r\n  \t\t}\r\n\r\n  \t\tnameHtml += \"<span class='test-name'>\" + escapeText(name) + \"</span>\";\r\n\r\n  \t\treturn nameHtml;\r\n  \t}\r\n\r\n  \tQUnit.testStart(function (details) {\r\n  \t\tvar running, testBlock, bad;\r\n\r\n  \t\ttestBlock = id(\"qunit-test-output-\" + details.testId);\r\n  \t\tif (testBlock) {\r\n  \t\t\ttestBlock.className = \"running\";\r\n  \t\t} else {\r\n\r\n  \t\t\t// Report later registered tests\r\n  \t\t\tappendTest(details.name, details.testId, details.module);\r\n  \t\t}\r\n\r\n  \t\trunning = id(\"qunit-testresult-display\");\r\n  \t\tif (running) {\r\n  \t\t\tbad = QUnit.config.reorder && details.previousFailure;\r\n\r\n  \t\t\trunning.innerHTML = (bad ? \"Rerunning previously failed test: <br />\" : \"Running: <br />\") + getNameHtml(details.name, details.module);\r\n  \t\t}\r\n  \t});\r\n\r\n  \tfunction stripHtml(string) {\r\n\r\n  \t\t// Strip tags, html entity and whitespaces\r\n  \t\treturn string.replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/\\&quot;/g, \"\").replace(/\\s+/g, \"\");\r\n  \t}\r\n\r\n  \tQUnit.log(function (details) {\r\n  \t\tvar assertList,\r\n  \t\t    assertLi,\r\n  \t\t    message,\r\n  \t\t    expected,\r\n  \t\t    actual,\r\n  \t\t    diff,\r\n  \t\t    showDiff = false,\r\n  \t\t    testItem = id(\"qunit-test-output-\" + details.testId);\r\n\r\n  \t\tif (!testItem) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tmessage = escapeText(details.message) || (details.result ? \"okay\" : \"failed\");\r\n  \t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\r\n  \t\tmessage += \"<span class='runtime'>@ \" + details.runtime + \" ms</span>\";\r\n\r\n  \t\t// The pushFailure doesn't provide details.expected\r\n  \t\t// when it calls, it's implicit to also not show expected and diff stuff\r\n  \t\t// Also, we need to check details.expected existence, as it can exist and be undefined\r\n  \t\tif (!details.result && hasOwn.call(details, \"expected\")) {\r\n  \t\t\tif (details.negative) {\r\n  \t\t\t\texpected = \"NOT \" + QUnit.dump.parse(details.expected);\r\n  \t\t\t} else {\r\n  \t\t\t\texpected = QUnit.dump.parse(details.expected);\r\n  \t\t\t}\r\n\r\n  \t\t\tactual = QUnit.dump.parse(details.actual);\r\n  \t\t\tmessage += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + escapeText(expected) + \"</pre></td></tr>\";\r\n\r\n  \t\t\tif (actual !== expected) {\r\n\r\n  \t\t\t\tmessage += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText(actual) + \"</pre></td></tr>\";\r\n\r\n  \t\t\t\tif (typeof details.actual === \"number\" && typeof details.expected === \"number\") {\r\n  \t\t\t\t\tif (!isNaN(details.actual) && !isNaN(details.expected)) {\r\n  \t\t\t\t\t\tshowDiff = true;\r\n  \t\t\t\t\t\tdiff = details.actual - details.expected;\r\n  \t\t\t\t\t\tdiff = (diff > 0 ? \"+\" : \"\") + diff;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t} else if (typeof details.actual !== \"boolean\" && typeof details.expected !== \"boolean\") {\r\n  \t\t\t\t\tdiff = QUnit.diff(expected, actual);\r\n\r\n  \t\t\t\t\t// don't show diff if there is zero overlap\r\n  \t\t\t\t\tshowDiff = stripHtml(diff).length !== stripHtml(expected).length + stripHtml(actual).length;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\tif (showDiff) {\r\n  \t\t\t\t\tmessage += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + diff + \"</pre></td></tr>\";\r\n  \t\t\t\t}\r\n  \t\t\t} else if (expected.indexOf(\"[object Array]\") !== -1 || expected.indexOf(\"[object Object]\") !== -1) {\r\n  \t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" + \"Diff suppressed as the depth of object is more than current max depth (\" + QUnit.config.maxDepth + \").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to \" + \" run with a higher max depth or <a href='\" + escapeText(setUrl({ maxDepth: -1 })) + \"'>\" + \"Rerun</a> without max depth.</p></td></tr>\";\r\n  \t\t\t} else {\r\n  \t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" + \"Diff suppressed as the expected and actual results have an equivalent\" + \" serialization</td></tr>\";\r\n  \t\t\t}\r\n\r\n  \t\t\tif (details.source) {\r\n  \t\t\t\tmessage += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText(details.source) + \"</pre></td></tr>\";\r\n  \t\t\t}\r\n\r\n  \t\t\tmessage += \"</table>\";\r\n\r\n  \t\t\t// This occurs when pushFailure is set and we have an extracted stack trace\r\n  \t\t} else if (!details.result && details.source) {\r\n  \t\t\tmessage += \"<table>\" + \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText(details.source) + \"</pre></td></tr>\" + \"</table>\";\r\n  \t\t}\r\n\r\n  \t\tassertList = testItem.getElementsByTagName(\"ol\")[0];\r\n\r\n  \t\tassertLi = document$$1.createElement(\"li\");\r\n  \t\tassertLi.className = details.result ? \"pass\" : \"fail\";\r\n  \t\tassertLi.innerHTML = message;\r\n  \t\tassertList.appendChild(assertLi);\r\n  \t});\r\n\r\n  \tQUnit.testDone(function (details) {\r\n  \t\tvar testTitle,\r\n  \t\t    time,\r\n  \t\t    testItem,\r\n  \t\t    assertList,\r\n  \t\t    good,\r\n  \t\t    bad,\r\n  \t\t    testCounts,\r\n  \t\t    skipped,\r\n  \t\t    sourceName,\r\n  \t\t    tests = id(\"qunit-tests\");\r\n\r\n  \t\tif (!tests) {\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\ttestItem = id(\"qunit-test-output-\" + details.testId);\r\n\r\n  \t\tassertList = testItem.getElementsByTagName(\"ol\")[0];\r\n\r\n  \t\tgood = details.passed;\r\n  \t\tbad = details.failed;\r\n\r\n  \t\t// This test passed if it has no unexpected failed assertions\r\n  \t\tvar testPassed = details.failed > 0 ? details.todo : !details.todo;\r\n\r\n  \t\tif (testPassed) {\r\n\r\n  \t\t\t// Collapse the passing tests\r\n  \t\t\taddClass(assertList, \"qunit-collapsed\");\r\n  \t\t} else if (config.collapse) {\r\n  \t\t\tif (!collapseNext) {\r\n\r\n  \t\t\t\t// Skip collapsing the first failing test\r\n  \t\t\t\tcollapseNext = true;\r\n  \t\t\t} else {\r\n\r\n  \t\t\t\t// Collapse remaining tests\r\n  \t\t\t\taddClass(assertList, \"qunit-collapsed\");\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// The testItem.firstChild is the test name\r\n  \t\ttestTitle = testItem.firstChild;\r\n\r\n  \t\ttestCounts = bad ? \"<b class='failed'>\" + bad + \"</b>, \" + \"<b class='passed'>\" + good + \"</b>, \" : \"\";\r\n\r\n  \t\ttestTitle.innerHTML += \" <b class='counts'>(\" + testCounts + details.assertions.length + \")</b>\";\r\n\r\n  \t\tif (details.skipped) {\r\n  \t\t\tstats.skippedTests++;\r\n\r\n  \t\t\ttestItem.className = \"skipped\";\r\n  \t\t\tskipped = document$$1.createElement(\"em\");\r\n  \t\t\tskipped.className = \"qunit-skipped-label\";\r\n  \t\t\tskipped.innerHTML = \"skipped\";\r\n  \t\t\ttestItem.insertBefore(skipped, testTitle);\r\n  \t\t} else {\r\n  \t\t\taddEvent(testTitle, \"click\", function () {\r\n  \t\t\t\ttoggleClass(assertList, \"qunit-collapsed\");\r\n  \t\t\t});\r\n\r\n  \t\t\ttestItem.className = testPassed ? \"pass\" : \"fail\";\r\n\r\n  \t\t\tif (details.todo) {\r\n  \t\t\t\tvar todoLabel = document$$1.createElement(\"em\");\r\n  \t\t\t\ttodoLabel.className = \"qunit-todo-label\";\r\n  \t\t\t\ttodoLabel.innerHTML = \"todo\";\r\n  \t\t\t\ttestItem.className += \" todo\";\r\n  \t\t\t\ttestItem.insertBefore(todoLabel, testTitle);\r\n  \t\t\t}\r\n\r\n  \t\t\ttime = document$$1.createElement(\"span\");\r\n  \t\t\ttime.className = \"runtime\";\r\n  \t\t\ttime.innerHTML = details.runtime + \" ms\";\r\n  \t\t\ttestItem.insertBefore(time, assertList);\r\n\r\n  \t\t\tif (!testPassed) {\r\n  \t\t\t\tstats.failedTests++;\r\n  \t\t\t} else if (details.todo) {\r\n  \t\t\t\tstats.todoTests++;\r\n  \t\t\t} else {\r\n  \t\t\t\tstats.passedTests++;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Show the source of the test when showing assertions\r\n  \t\tif (details.source) {\r\n  \t\t\tsourceName = document$$1.createElement(\"p\");\r\n  \t\t\tsourceName.innerHTML = \"<strong>Source: </strong>\" + details.source;\r\n  \t\t\taddClass(sourceName, \"qunit-source\");\r\n  \t\t\tif (testPassed) {\r\n  \t\t\t\taddClass(sourceName, \"qunit-collapsed\");\r\n  \t\t\t}\r\n  \t\t\taddEvent(testTitle, \"click\", function () {\r\n  \t\t\t\ttoggleClass(sourceName, \"qunit-collapsed\");\r\n  \t\t\t});\r\n  \t\t\ttestItem.appendChild(sourceName);\r\n  \t\t}\r\n  \t});\r\n\r\n  \t// Avoid readyState issue with phantomjs\r\n  \t// Ref: #818\r\n  \tvar notPhantom = function (p) {\r\n  \t\treturn !(p && p.version && p.version.major > 0);\r\n  \t}(window.phantom);\r\n\r\n  \tif (notPhantom && document$$1.readyState === \"complete\") {\r\n  \t\tQUnit.load();\r\n  \t} else {\r\n  \t\taddEvent(window, \"load\", QUnit.load);\r\n  \t}\r\n\r\n  \t// Wrap window.onerror. We will call the original window.onerror to see if\r\n  \t// the existing handler fully handles the error; if not, we will call the\r\n  \t// QUnit.onError function.\r\n  \tvar originalWindowOnError = window.onerror;\r\n\r\n  \t// Cover uncaught exceptions\r\n  \t// Returning true will suppress the default browser handler,\r\n  \t// returning false will let it run.\r\n  \twindow.onerror = function (message, fileName, lineNumber) {\r\n  \t\tvar ret = false;\r\n  \t\tif (originalWindowOnError) {\r\n  \t\t\tfor (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\r\n  \t\t\t\targs[_key - 3] = arguments[_key];\r\n  \t\t\t}\r\n\r\n  \t\t\tret = originalWindowOnError.call.apply(originalWindowOnError, [this, message, fileName, lineNumber].concat(args));\r\n  \t\t}\r\n\r\n  \t\t// Treat return value as window.onerror itself does,\r\n  \t\t// Only do our handling if not suppressed.\r\n  \t\tif (ret !== true) {\r\n  \t\t\tvar error = {\r\n  \t\t\t\tmessage: message,\r\n  \t\t\t\tfileName: fileName,\r\n  \t\t\t\tlineNumber: lineNumber\r\n  \t\t\t};\r\n\r\n  \t\t\tret = QUnit.onError(error);\r\n  \t\t}\r\n\r\n  \t\treturn ret;\r\n  \t};\r\n  })();\r\n\r\n  /*\r\n   * This file is a modified version of google-diff-match-patch's JavaScript implementation\r\n   * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\r\n   * modifications are licensed as more fully set forth in LICENSE.txt.\r\n   *\r\n   * The original source of google-diff-match-patch is attributable and licensed as follows:\r\n   *\r\n   * Copyright 2006 Google Inc.\r\n   * https://code.google.com/p/google-diff-match-patch/\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   * https://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   *\r\n   * More Info:\r\n   *  https://code.google.com/p/google-diff-match-patch/\r\n   *\r\n   * Usage: QUnit.diff(expected, actual)\r\n   *\r\n   */\r\n  QUnit.diff = function () {\r\n  \tfunction DiffMatchPatch() {}\r\n\r\n  \t//  DIFF FUNCTIONS\r\n\r\n  \t/**\r\n    * The data structure representing a diff is an array of tuples:\r\n    * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\r\n    * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\r\n    */\r\n  \tvar DIFF_DELETE = -1,\r\n  \t    DIFF_INSERT = 1,\r\n  \t    DIFF_EQUAL = 0;\r\n\r\n  \t/**\r\n    * Find the differences between two texts.  Simplifies the problem by stripping\r\n    * any common prefix or suffix off the texts before diffing.\r\n    * @param {string} text1 Old string to be diffed.\r\n    * @param {string} text2 New string to be diffed.\r\n    * @param {boolean=} optChecklines Optional speedup flag. If present and false,\r\n    *     then don't run a line-level diff first to identify the changed areas.\r\n    *     Defaults to true, which does a faster, slightly less optimal diff.\r\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\r\n    */\r\n  \tDiffMatchPatch.prototype.DiffMain = function (text1, text2, optChecklines) {\r\n  \t\tvar deadline, checklines, commonlength, commonprefix, commonsuffix, diffs;\r\n\r\n  \t\t// The diff must be complete in up to 1 second.\r\n  \t\tdeadline = new Date().getTime() + 1000;\r\n\r\n  \t\t// Check for null inputs.\r\n  \t\tif (text1 === null || text2 === null) {\r\n  \t\t\tthrow new Error(\"Null input. (DiffMain)\");\r\n  \t\t}\r\n\r\n  \t\t// Check for equality (speedup).\r\n  \t\tif (text1 === text2) {\r\n  \t\t\tif (text1) {\r\n  \t\t\t\treturn [[DIFF_EQUAL, text1]];\r\n  \t\t\t}\r\n  \t\t\treturn [];\r\n  \t\t}\r\n\r\n  \t\tif (typeof optChecklines === \"undefined\") {\r\n  \t\t\toptChecklines = true;\r\n  \t\t}\r\n\r\n  \t\tchecklines = optChecklines;\r\n\r\n  \t\t// Trim off common prefix (speedup).\r\n  \t\tcommonlength = this.diffCommonPrefix(text1, text2);\r\n  \t\tcommonprefix = text1.substring(0, commonlength);\r\n  \t\ttext1 = text1.substring(commonlength);\r\n  \t\ttext2 = text2.substring(commonlength);\r\n\r\n  \t\t// Trim off common suffix (speedup).\r\n  \t\tcommonlength = this.diffCommonSuffix(text1, text2);\r\n  \t\tcommonsuffix = text1.substring(text1.length - commonlength);\r\n  \t\ttext1 = text1.substring(0, text1.length - commonlength);\r\n  \t\ttext2 = text2.substring(0, text2.length - commonlength);\r\n\r\n  \t\t// Compute the diff on the middle block.\r\n  \t\tdiffs = this.diffCompute(text1, text2, checklines, deadline);\r\n\r\n  \t\t// Restore the prefix and suffix.\r\n  \t\tif (commonprefix) {\r\n  \t\t\tdiffs.unshift([DIFF_EQUAL, commonprefix]);\r\n  \t\t}\r\n  \t\tif (commonsuffix) {\r\n  \t\t\tdiffs.push([DIFF_EQUAL, commonsuffix]);\r\n  \t\t}\r\n  \t\tthis.diffCleanupMerge(diffs);\r\n  \t\treturn diffs;\r\n  \t};\r\n\r\n  \t/**\r\n    * Reduce the number of edits by eliminating operationally trivial equalities.\r\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCleanupEfficiency = function (diffs) {\r\n  \t\tvar changes, equalities, equalitiesLength, lastequality, pointer, preIns, preDel, postIns, postDel;\r\n  \t\tchanges = false;\r\n  \t\tequalities = []; // Stack of indices where equalities are found.\r\n  \t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\r\n  \t\t/** @type {?string} */\r\n  \t\tlastequality = null;\r\n\r\n  \t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  \t\tpointer = 0; // Index of current position.\r\n\r\n  \t\t// Is there an insertion operation before the last equality.\r\n  \t\tpreIns = false;\r\n\r\n  \t\t// Is there a deletion operation before the last equality.\r\n  \t\tpreDel = false;\r\n\r\n  \t\t// Is there an insertion operation after the last equality.\r\n  \t\tpostIns = false;\r\n\r\n  \t\t// Is there a deletion operation after the last equality.\r\n  \t\tpostDel = false;\r\n  \t\twhile (pointer < diffs.length) {\r\n\r\n  \t\t\t// Equality found.\r\n  \t\t\tif (diffs[pointer][0] === DIFF_EQUAL) {\r\n  \t\t\t\tif (diffs[pointer][1].length < 4 && (postIns || postDel)) {\r\n\r\n  \t\t\t\t\t// Candidate found.\r\n  \t\t\t\t\tequalities[equalitiesLength++] = pointer;\r\n  \t\t\t\t\tpreIns = postIns;\r\n  \t\t\t\t\tpreDel = postDel;\r\n  \t\t\t\t\tlastequality = diffs[pointer][1];\r\n  \t\t\t\t} else {\r\n\r\n  \t\t\t\t\t// Not a candidate, and can never become one.\r\n  \t\t\t\t\tequalitiesLength = 0;\r\n  \t\t\t\t\tlastequality = null;\r\n  \t\t\t\t}\r\n  \t\t\t\tpostIns = postDel = false;\r\n\r\n  \t\t\t\t// An insertion or deletion.\r\n  \t\t\t} else {\r\n\r\n  \t\t\t\tif (diffs[pointer][0] === DIFF_DELETE) {\r\n  \t\t\t\t\tpostDel = true;\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tpostIns = true;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\t/*\r\n       * Five types to be split:\r\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\r\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\r\n       * <ins>A</del>X<ins>C</ins><del>D</del>\r\n       * <ins>A</ins><del>B</del>X<del>C</del>\r\n       */\r\n  \t\t\t\tif (lastequality && (preIns && preDel && postIns && postDel || lastequality.length < 2 && preIns + preDel + postIns + postDel === 3)) {\r\n\r\n  \t\t\t\t\t// Duplicate record.\r\n  \t\t\t\t\tdiffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]);\r\n\r\n  \t\t\t\t\t// Change second copy to insert.\r\n  \t\t\t\t\tdiffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n  \t\t\t\t\tequalitiesLength--; // Throw away the equality we just deleted;\r\n  \t\t\t\t\tlastequality = null;\r\n  \t\t\t\t\tif (preIns && preDel) {\r\n\r\n  \t\t\t\t\t\t// No changes made which could affect previous entry, keep going.\r\n  \t\t\t\t\t\tpostIns = postDel = true;\r\n  \t\t\t\t\t\tequalitiesLength = 0;\r\n  \t\t\t\t\t} else {\r\n  \t\t\t\t\t\tequalitiesLength--; // Throw away the previous equality.\r\n  \t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\r\n  \t\t\t\t\t\tpostIns = postDel = false;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\tchanges = true;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\tpointer++;\r\n  \t\t}\r\n\r\n  \t\tif (changes) {\r\n  \t\t\tthis.diffCleanupMerge(diffs);\r\n  \t\t}\r\n  \t};\r\n\r\n  \t/**\r\n    * Convert a diff array into a pretty HTML report.\r\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\r\n    * @param {integer} string to be beautified.\r\n    * @return {string} HTML representation.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffPrettyHtml = function (diffs) {\r\n  \t\tvar op,\r\n  \t\t    data,\r\n  \t\t    x,\r\n  \t\t    html = [];\r\n  \t\tfor (x = 0; x < diffs.length; x++) {\r\n  \t\t\top = diffs[x][0]; // Operation (insert, delete, equal)\r\n  \t\t\tdata = diffs[x][1]; // Text of change.\r\n  \t\t\tswitch (op) {\r\n  \t\t\t\tcase DIFF_INSERT:\r\n  \t\t\t\t\thtml[x] = \"<ins>\" + escapeText(data) + \"</ins>\";\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_DELETE:\r\n  \t\t\t\t\thtml[x] = \"<del>\" + escapeText(data) + \"</del>\";\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_EQUAL:\r\n  \t\t\t\t\thtml[x] = \"<span>\" + escapeText(data) + \"</span>\";\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\treturn html.join(\"\");\r\n  \t};\r\n\r\n  \t/**\r\n    * Determine the common prefix of two strings.\r\n    * @param {string} text1 First string.\r\n    * @param {string} text2 Second string.\r\n    * @return {number} The number of characters common to the start of each\r\n    *     string.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCommonPrefix = function (text1, text2) {\r\n  \t\tvar pointermid, pointermax, pointermin, pointerstart;\r\n\r\n  \t\t// Quick check for common null cases.\r\n  \t\tif (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\r\n  \t\t\treturn 0;\r\n  \t\t}\r\n\r\n  \t\t// Binary search.\r\n  \t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\r\n  \t\tpointermin = 0;\r\n  \t\tpointermax = Math.min(text1.length, text2.length);\r\n  \t\tpointermid = pointermax;\r\n  \t\tpointerstart = 0;\r\n  \t\twhile (pointermin < pointermid) {\r\n  \t\t\tif (text1.substring(pointerstart, pointermid) === text2.substring(pointerstart, pointermid)) {\r\n  \t\t\t\tpointermin = pointermid;\r\n  \t\t\t\tpointerstart = pointermin;\r\n  \t\t\t} else {\r\n  \t\t\t\tpointermax = pointermid;\r\n  \t\t\t}\r\n  \t\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  \t\t}\r\n  \t\treturn pointermid;\r\n  \t};\r\n\r\n  \t/**\r\n    * Determine the common suffix of two strings.\r\n    * @param {string} text1 First string.\r\n    * @param {string} text2 Second string.\r\n    * @return {number} The number of characters common to the end of each string.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCommonSuffix = function (text1, text2) {\r\n  \t\tvar pointermid, pointermax, pointermin, pointerend;\r\n\r\n  \t\t// Quick check for common null cases.\r\n  \t\tif (!text1 || !text2 || text1.charAt(text1.length - 1) !== text2.charAt(text2.length - 1)) {\r\n  \t\t\treturn 0;\r\n  \t\t}\r\n\r\n  \t\t// Binary search.\r\n  \t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\r\n  \t\tpointermin = 0;\r\n  \t\tpointermax = Math.min(text1.length, text2.length);\r\n  \t\tpointermid = pointermax;\r\n  \t\tpointerend = 0;\r\n  \t\twhile (pointermin < pointermid) {\r\n  \t\t\tif (text1.substring(text1.length - pointermid, text1.length - pointerend) === text2.substring(text2.length - pointermid, text2.length - pointerend)) {\r\n  \t\t\t\tpointermin = pointermid;\r\n  \t\t\t\tpointerend = pointermin;\r\n  \t\t\t} else {\r\n  \t\t\t\tpointermax = pointermid;\r\n  \t\t\t}\r\n  \t\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\r\n  \t\t}\r\n  \t\treturn pointermid;\r\n  \t};\r\n\r\n  \t/**\r\n    * Find the differences between two texts.  Assumes that the texts do not\r\n    * have any common prefix or suffix.\r\n    * @param {string} text1 Old string to be diffed.\r\n    * @param {string} text2 New string to be diffed.\r\n    * @param {boolean} checklines Speedup flag.  If false, then don't run a\r\n    *     line-level diff first to identify the changed areas.\r\n    *     If true, then run a faster, slightly less optimal diff.\r\n    * @param {number} deadline Time when the diff should be complete by.\r\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCompute = function (text1, text2, checklines, deadline) {\r\n  \t\tvar diffs, longtext, shorttext, i, hm, text1A, text2A, text1B, text2B, midCommon, diffsA, diffsB;\r\n\r\n  \t\tif (!text1) {\r\n\r\n  \t\t\t// Just add some text (speedup).\r\n  \t\t\treturn [[DIFF_INSERT, text2]];\r\n  \t\t}\r\n\r\n  \t\tif (!text2) {\r\n\r\n  \t\t\t// Just delete some text (speedup).\r\n  \t\t\treturn [[DIFF_DELETE, text1]];\r\n  \t\t}\r\n\r\n  \t\tlongtext = text1.length > text2.length ? text1 : text2;\r\n  \t\tshorttext = text1.length > text2.length ? text2 : text1;\r\n  \t\ti = longtext.indexOf(shorttext);\r\n  \t\tif (i !== -1) {\r\n\r\n  \t\t\t// Shorter text is inside the longer text (speedup).\r\n  \t\t\tdiffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\r\n\r\n  \t\t\t// Swap insertions for deletions if diff is reversed.\r\n  \t\t\tif (text1.length > text2.length) {\r\n  \t\t\t\tdiffs[0][0] = diffs[2][0] = DIFF_DELETE;\r\n  \t\t\t}\r\n  \t\t\treturn diffs;\r\n  \t\t}\r\n\r\n  \t\tif (shorttext.length === 1) {\r\n\r\n  \t\t\t// Single character string.\r\n  \t\t\t// After the previous speedup, the character can't be an equality.\r\n  \t\t\treturn [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n  \t\t}\r\n\r\n  \t\t// Check to see if the problem can be split in two.\r\n  \t\thm = this.diffHalfMatch(text1, text2);\r\n  \t\tif (hm) {\r\n\r\n  \t\t\t// A half-match was found, sort out the return data.\r\n  \t\t\ttext1A = hm[0];\r\n  \t\t\ttext1B = hm[1];\r\n  \t\t\ttext2A = hm[2];\r\n  \t\t\ttext2B = hm[3];\r\n  \t\t\tmidCommon = hm[4];\r\n\r\n  \t\t\t// Send both pairs off for separate processing.\r\n  \t\t\tdiffsA = this.DiffMain(text1A, text2A, checklines, deadline);\r\n  \t\t\tdiffsB = this.DiffMain(text1B, text2B, checklines, deadline);\r\n\r\n  \t\t\t// Merge the results.\r\n  \t\t\treturn diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\r\n  \t\t}\r\n\r\n  \t\tif (checklines && text1.length > 100 && text2.length > 100) {\r\n  \t\t\treturn this.diffLineMode(text1, text2, deadline);\r\n  \t\t}\r\n\r\n  \t\treturn this.diffBisect(text1, text2, deadline);\r\n  \t};\r\n\r\n  \t/**\r\n    * Do the two texts share a substring which is at least half the length of the\r\n    * longer text?\r\n    * This speedup can produce non-minimal diffs.\r\n    * @param {string} text1 First string.\r\n    * @param {string} text2 Second string.\r\n    * @return {Array.<string>} Five element Array, containing the prefix of\r\n    *     text1, the suffix of text1, the prefix of text2, the suffix of\r\n    *     text2 and the common middle.  Or null if there was no match.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffHalfMatch = function (text1, text2) {\r\n  \t\tvar longtext, shorttext, dmp, text1A, text2B, text2A, text1B, midCommon, hm1, hm2, hm;\r\n\r\n  \t\tlongtext = text1.length > text2.length ? text1 : text2;\r\n  \t\tshorttext = text1.length > text2.length ? text2 : text1;\r\n  \t\tif (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\r\n  \t\t\treturn null; // Pointless.\r\n  \t\t}\r\n  \t\tdmp = this; // 'this' becomes 'window' in a closure.\r\n\r\n  \t\t/**\r\n     * Does a substring of shorttext exist within longtext such that the substring\r\n     * is at least half the length of longtext?\r\n     * Closure, but does not reference any external variables.\r\n     * @param {string} longtext Longer string.\r\n     * @param {string} shorttext Shorter string.\r\n     * @param {number} i Start index of quarter length substring within longtext.\r\n     * @return {Array.<string>} Five element Array, containing the prefix of\r\n     *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\r\n     *     of shorttext and the common middle.  Or null if there was no match.\r\n     * @private\r\n     */\r\n  \t\tfunction diffHalfMatchI(longtext, shorttext, i) {\r\n  \t\t\tvar seed, j, bestCommon, prefixLength, suffixLength, bestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB;\r\n\r\n  \t\t\t// Start with a 1/4 length substring at position i as a seed.\r\n  \t\t\tseed = longtext.substring(i, i + Math.floor(longtext.length / 4));\r\n  \t\t\tj = -1;\r\n  \t\t\tbestCommon = \"\";\r\n  \t\t\twhile ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\r\n  \t\t\t\tprefixLength = dmp.diffCommonPrefix(longtext.substring(i), shorttext.substring(j));\r\n  \t\t\t\tsuffixLength = dmp.diffCommonSuffix(longtext.substring(0, i), shorttext.substring(0, j));\r\n  \t\t\t\tif (bestCommon.length < suffixLength + prefixLength) {\r\n  \t\t\t\t\tbestCommon = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\r\n  \t\t\t\t\tbestLongtextA = longtext.substring(0, i - suffixLength);\r\n  \t\t\t\t\tbestLongtextB = longtext.substring(i + prefixLength);\r\n  \t\t\t\t\tbestShorttextA = shorttext.substring(0, j - suffixLength);\r\n  \t\t\t\t\tbestShorttextB = shorttext.substring(j + prefixLength);\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\tif (bestCommon.length * 2 >= longtext.length) {\r\n  \t\t\t\treturn [bestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB, bestCommon];\r\n  \t\t\t} else {\r\n  \t\t\t\treturn null;\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// First check if the second quarter is the seed for a half-match.\r\n  \t\thm1 = diffHalfMatchI(longtext, shorttext, Math.ceil(longtext.length / 4));\r\n\r\n  \t\t// Check again based on the third quarter.\r\n  \t\thm2 = diffHalfMatchI(longtext, shorttext, Math.ceil(longtext.length / 2));\r\n  \t\tif (!hm1 && !hm2) {\r\n  \t\t\treturn null;\r\n  \t\t} else if (!hm2) {\r\n  \t\t\thm = hm1;\r\n  \t\t} else if (!hm1) {\r\n  \t\t\thm = hm2;\r\n  \t\t} else {\r\n\r\n  \t\t\t// Both matched.  Select the longest.\r\n  \t\t\thm = hm1[4].length > hm2[4].length ? hm1 : hm2;\r\n  \t\t}\r\n\r\n  \t\t// A half-match was found, sort out the return data.\r\n  \t\tif (text1.length > text2.length) {\r\n  \t\t\ttext1A = hm[0];\r\n  \t\t\ttext1B = hm[1];\r\n  \t\t\ttext2A = hm[2];\r\n  \t\t\ttext2B = hm[3];\r\n  \t\t} else {\r\n  \t\t\ttext2A = hm[0];\r\n  \t\t\ttext2B = hm[1];\r\n  \t\t\ttext1A = hm[2];\r\n  \t\t\ttext1B = hm[3];\r\n  \t\t}\r\n  \t\tmidCommon = hm[4];\r\n  \t\treturn [text1A, text1B, text2A, text2B, midCommon];\r\n  \t};\r\n\r\n  \t/**\r\n    * Do a quick line-level diff on both strings, then rediff the parts for\r\n    * greater accuracy.\r\n    * This speedup can produce non-minimal diffs.\r\n    * @param {string} text1 Old string to be diffed.\r\n    * @param {string} text2 New string to be diffed.\r\n    * @param {number} deadline Time when the diff should be complete by.\r\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffLineMode = function (text1, text2, deadline) {\r\n  \t\tvar a, diffs, linearray, pointer, countInsert, countDelete, textInsert, textDelete, j;\r\n\r\n  \t\t// Scan the text on a line-by-line basis first.\r\n  \t\ta = this.diffLinesToChars(text1, text2);\r\n  \t\ttext1 = a.chars1;\r\n  \t\ttext2 = a.chars2;\r\n  \t\tlinearray = a.lineArray;\r\n\r\n  \t\tdiffs = this.DiffMain(text1, text2, false, deadline);\r\n\r\n  \t\t// Convert the diff back to original text.\r\n  \t\tthis.diffCharsToLines(diffs, linearray);\r\n\r\n  \t\t// Eliminate freak matches (e.g. blank lines)\r\n  \t\tthis.diffCleanupSemantic(diffs);\r\n\r\n  \t\t// Rediff any replacement blocks, this time character-by-character.\r\n  \t\t// Add a dummy entry at the end.\r\n  \t\tdiffs.push([DIFF_EQUAL, \"\"]);\r\n  \t\tpointer = 0;\r\n  \t\tcountDelete = 0;\r\n  \t\tcountInsert = 0;\r\n  \t\ttextDelete = \"\";\r\n  \t\ttextInsert = \"\";\r\n  \t\twhile (pointer < diffs.length) {\r\n  \t\t\tswitch (diffs[pointer][0]) {\r\n  \t\t\t\tcase DIFF_INSERT:\r\n  \t\t\t\t\tcountInsert++;\r\n  \t\t\t\t\ttextInsert += diffs[pointer][1];\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_DELETE:\r\n  \t\t\t\t\tcountDelete++;\r\n  \t\t\t\t\ttextDelete += diffs[pointer][1];\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_EQUAL:\r\n\r\n  \t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\r\n  \t\t\t\t\tif (countDelete >= 1 && countInsert >= 1) {\r\n\r\n  \t\t\t\t\t\t// Delete the offending records and add the merged ones.\r\n  \t\t\t\t\t\tdiffs.splice(pointer - countDelete - countInsert, countDelete + countInsert);\r\n  \t\t\t\t\t\tpointer = pointer - countDelete - countInsert;\r\n  \t\t\t\t\t\ta = this.DiffMain(textDelete, textInsert, false, deadline);\r\n  \t\t\t\t\t\tfor (j = a.length - 1; j >= 0; j--) {\r\n  \t\t\t\t\t\t\tdiffs.splice(pointer, 0, a[j]);\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t\tpointer = pointer + a.length;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\tcountInsert = 0;\r\n  \t\t\t\t\tcountDelete = 0;\r\n  \t\t\t\t\ttextDelete = \"\";\r\n  \t\t\t\t\ttextInsert = \"\";\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t}\r\n  \t\t\tpointer++;\r\n  \t\t}\r\n  \t\tdiffs.pop(); // Remove the dummy entry at the end.\r\n\r\n  \t\treturn diffs;\r\n  \t};\r\n\r\n  \t/**\r\n    * Find the 'middle snake' of a diff, split the problem in two\r\n    * and return the recursively constructed diff.\r\n    * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\r\n    * @param {string} text1 Old string to be diffed.\r\n    * @param {string} text2 New string to be diffed.\r\n    * @param {number} deadline Time at which to bail if not yet complete.\r\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffBisect = function (text1, text2, deadline) {\r\n  \t\tvar text1Length, text2Length, maxD, vOffset, vLength, v1, v2, x, delta, front, k1start, k1end, k2start, k2end, k2Offset, k1Offset, x1, x2, y1, y2, d, k1, k2;\r\n\r\n  \t\t// Cache the text lengths to prevent multiple calls.\r\n  \t\ttext1Length = text1.length;\r\n  \t\ttext2Length = text2.length;\r\n  \t\tmaxD = Math.ceil((text1Length + text2Length) / 2);\r\n  \t\tvOffset = maxD;\r\n  \t\tvLength = 2 * maxD;\r\n  \t\tv1 = new Array(vLength);\r\n  \t\tv2 = new Array(vLength);\r\n\r\n  \t\t// Setting all elements to -1 is faster in Chrome & Firefox than mixing\r\n  \t\t// integers and undefined.\r\n  \t\tfor (x = 0; x < vLength; x++) {\r\n  \t\t\tv1[x] = -1;\r\n  \t\t\tv2[x] = -1;\r\n  \t\t}\r\n  \t\tv1[vOffset + 1] = 0;\r\n  \t\tv2[vOffset + 1] = 0;\r\n  \t\tdelta = text1Length - text2Length;\r\n\r\n  \t\t// If the total number of characters is odd, then the front path will collide\r\n  \t\t// with the reverse path.\r\n  \t\tfront = delta % 2 !== 0;\r\n\r\n  \t\t// Offsets for start and end of k loop.\r\n  \t\t// Prevents mapping of space beyond the grid.\r\n  \t\tk1start = 0;\r\n  \t\tk1end = 0;\r\n  \t\tk2start = 0;\r\n  \t\tk2end = 0;\r\n  \t\tfor (d = 0; d < maxD; d++) {\r\n\r\n  \t\t\t// Bail out if deadline is reached.\r\n  \t\t\tif (new Date().getTime() > deadline) {\r\n  \t\t\t\tbreak;\r\n  \t\t\t}\r\n\r\n  \t\t\t// Walk the front path one step.\r\n  \t\t\tfor (k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\r\n  \t\t\t\tk1Offset = vOffset + k1;\r\n  \t\t\t\tif (k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1]) {\r\n  \t\t\t\t\tx1 = v1[k1Offset + 1];\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tx1 = v1[k1Offset - 1] + 1;\r\n  \t\t\t\t}\r\n  \t\t\t\ty1 = x1 - k1;\r\n  \t\t\t\twhile (x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1)) {\r\n  \t\t\t\t\tx1++;\r\n  \t\t\t\t\ty1++;\r\n  \t\t\t\t}\r\n  \t\t\t\tv1[k1Offset] = x1;\r\n  \t\t\t\tif (x1 > text1Length) {\r\n\r\n  \t\t\t\t\t// Ran off the right of the graph.\r\n  \t\t\t\t\tk1end += 2;\r\n  \t\t\t\t} else if (y1 > text2Length) {\r\n\r\n  \t\t\t\t\t// Ran off the bottom of the graph.\r\n  \t\t\t\t\tk1start += 2;\r\n  \t\t\t\t} else if (front) {\r\n  \t\t\t\t\tk2Offset = vOffset + delta - k1;\r\n  \t\t\t\t\tif (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\r\n\r\n  \t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\r\n  \t\t\t\t\t\tx2 = text1Length - v2[k2Offset];\r\n  \t\t\t\t\t\tif (x1 >= x2) {\r\n\r\n  \t\t\t\t\t\t\t// Overlap detected.\r\n  \t\t\t\t\t\t\treturn this.diffBisectSplit(text1, text2, x1, y1, deadline);\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n\r\n  \t\t\t// Walk the reverse path one step.\r\n  \t\t\tfor (k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\r\n  \t\t\t\tk2Offset = vOffset + k2;\r\n  \t\t\t\tif (k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1]) {\r\n  \t\t\t\t\tx2 = v2[k2Offset + 1];\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tx2 = v2[k2Offset - 1] + 1;\r\n  \t\t\t\t}\r\n  \t\t\t\ty2 = x2 - k2;\r\n  \t\t\t\twhile (x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1)) {\r\n  \t\t\t\t\tx2++;\r\n  \t\t\t\t\ty2++;\r\n  \t\t\t\t}\r\n  \t\t\t\tv2[k2Offset] = x2;\r\n  \t\t\t\tif (x2 > text1Length) {\r\n\r\n  \t\t\t\t\t// Ran off the left of the graph.\r\n  \t\t\t\t\tk2end += 2;\r\n  \t\t\t\t} else if (y2 > text2Length) {\r\n\r\n  \t\t\t\t\t// Ran off the top of the graph.\r\n  \t\t\t\t\tk2start += 2;\r\n  \t\t\t\t} else if (!front) {\r\n  \t\t\t\t\tk1Offset = vOffset + delta - k2;\r\n  \t\t\t\t\tif (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\r\n  \t\t\t\t\t\tx1 = v1[k1Offset];\r\n  \t\t\t\t\t\ty1 = vOffset + x1 - k1Offset;\r\n\r\n  \t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\r\n  \t\t\t\t\t\tx2 = text1Length - x2;\r\n  \t\t\t\t\t\tif (x1 >= x2) {\r\n\r\n  \t\t\t\t\t\t\t// Overlap detected.\r\n  \t\t\t\t\t\t\treturn this.diffBisectSplit(text1, text2, x1, y1, deadline);\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n\r\n  \t\t// Diff took too long and hit the deadline or\r\n  \t\t// number of diffs equals number of characters, no commonality at all.\r\n  \t\treturn [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\r\n  \t};\r\n\r\n  \t/**\r\n    * Given the location of the 'middle snake', split the diff in two parts\r\n    * and recurse.\r\n    * @param {string} text1 Old string to be diffed.\r\n    * @param {string} text2 New string to be diffed.\r\n    * @param {number} x Index of split point in text1.\r\n    * @param {number} y Index of split point in text2.\r\n    * @param {number} deadline Time at which to bail if not yet complete.\r\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffBisectSplit = function (text1, text2, x, y, deadline) {\r\n  \t\tvar text1a, text1b, text2a, text2b, diffs, diffsb;\r\n  \t\ttext1a = text1.substring(0, x);\r\n  \t\ttext2a = text2.substring(0, y);\r\n  \t\ttext1b = text1.substring(x);\r\n  \t\ttext2b = text2.substring(y);\r\n\r\n  \t\t// Compute both diffs serially.\r\n  \t\tdiffs = this.DiffMain(text1a, text2a, false, deadline);\r\n  \t\tdiffsb = this.DiffMain(text1b, text2b, false, deadline);\r\n\r\n  \t\treturn diffs.concat(diffsb);\r\n  \t};\r\n\r\n  \t/**\r\n    * Reduce the number of edits by eliminating semantically trivial equalities.\r\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCleanupSemantic = function (diffs) {\r\n  \t\tvar changes, equalities, equalitiesLength, lastequality, pointer, lengthInsertions2, lengthDeletions2, lengthInsertions1, lengthDeletions1, deletion, insertion, overlapLength1, overlapLength2;\r\n  \t\tchanges = false;\r\n  \t\tequalities = []; // Stack of indices where equalities are found.\r\n  \t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\r\n  \t\t/** @type {?string} */\r\n  \t\tlastequality = null;\r\n\r\n  \t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\r\n  \t\tpointer = 0; // Index of current position.\r\n\r\n  \t\t// Number of characters that changed prior to the equality.\r\n  \t\tlengthInsertions1 = 0;\r\n  \t\tlengthDeletions1 = 0;\r\n\r\n  \t\t// Number of characters that changed after the equality.\r\n  \t\tlengthInsertions2 = 0;\r\n  \t\tlengthDeletions2 = 0;\r\n  \t\twhile (pointer < diffs.length) {\r\n  \t\t\tif (diffs[pointer][0] === DIFF_EQUAL) {\r\n  \t\t\t\t// Equality found.\r\n  \t\t\t\tequalities[equalitiesLength++] = pointer;\r\n  \t\t\t\tlengthInsertions1 = lengthInsertions2;\r\n  \t\t\t\tlengthDeletions1 = lengthDeletions2;\r\n  \t\t\t\tlengthInsertions2 = 0;\r\n  \t\t\t\tlengthDeletions2 = 0;\r\n  \t\t\t\tlastequality = diffs[pointer][1];\r\n  \t\t\t} else {\r\n  \t\t\t\t// An insertion or deletion.\r\n  \t\t\t\tif (diffs[pointer][0] === DIFF_INSERT) {\r\n  \t\t\t\t\tlengthInsertions2 += diffs[pointer][1].length;\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tlengthDeletions2 += diffs[pointer][1].length;\r\n  \t\t\t\t}\r\n\r\n  \t\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\r\n  \t\t\t\t// sides of it.\r\n  \t\t\t\tif (lastequality && lastequality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastequality.length <= Math.max(lengthInsertions2, lengthDeletions2)) {\r\n\r\n  \t\t\t\t\t// Duplicate record.\r\n  \t\t\t\t\tdiffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]);\r\n\r\n  \t\t\t\t\t// Change second copy to insert.\r\n  \t\t\t\t\tdiffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\r\n\r\n  \t\t\t\t\t// Throw away the equality we just deleted.\r\n  \t\t\t\t\tequalitiesLength--;\r\n\r\n  \t\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\r\n  \t\t\t\t\tequalitiesLength--;\r\n  \t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\r\n\r\n  \t\t\t\t\t// Reset the counters.\r\n  \t\t\t\t\tlengthInsertions1 = 0;\r\n  \t\t\t\t\tlengthDeletions1 = 0;\r\n  \t\t\t\t\tlengthInsertions2 = 0;\r\n  \t\t\t\t\tlengthDeletions2 = 0;\r\n  \t\t\t\t\tlastequality = null;\r\n  \t\t\t\t\tchanges = true;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\tpointer++;\r\n  \t\t}\r\n\r\n  \t\t// Normalize the diff.\r\n  \t\tif (changes) {\r\n  \t\t\tthis.diffCleanupMerge(diffs);\r\n  \t\t}\r\n\r\n  \t\t// Find any overlaps between deletions and insertions.\r\n  \t\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\r\n  \t\t//   -> <del>abc</del>xxx<ins>def</ins>\r\n  \t\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\r\n  \t\t//   -> <ins>def</ins>xxx<del>abc</del>\r\n  \t\t// Only extract an overlap if it is as big as the edit ahead or behind it.\r\n  \t\tpointer = 1;\r\n  \t\twhile (pointer < diffs.length) {\r\n  \t\t\tif (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\r\n  \t\t\t\tdeletion = diffs[pointer - 1][1];\r\n  \t\t\t\tinsertion = diffs[pointer][1];\r\n  \t\t\t\toverlapLength1 = this.diffCommonOverlap(deletion, insertion);\r\n  \t\t\t\toverlapLength2 = this.diffCommonOverlap(insertion, deletion);\r\n  \t\t\t\tif (overlapLength1 >= overlapLength2) {\r\n  \t\t\t\t\tif (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) {\r\n\r\n  \t\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\r\n  \t\t\t\t\t\tdiffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]);\r\n  \t\t\t\t\t\tdiffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1);\r\n  \t\t\t\t\t\tdiffs[pointer + 1][1] = insertion.substring(overlapLength1);\r\n  \t\t\t\t\t\tpointer++;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tif (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) {\r\n\r\n  \t\t\t\t\t\t// Reverse overlap found.\r\n  \t\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\r\n  \t\t\t\t\t\tdiffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]);\r\n\r\n  \t\t\t\t\t\tdiffs[pointer - 1][0] = DIFF_INSERT;\r\n  \t\t\t\t\t\tdiffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2);\r\n  \t\t\t\t\t\tdiffs[pointer + 1][0] = DIFF_DELETE;\r\n  \t\t\t\t\t\tdiffs[pointer + 1][1] = deletion.substring(overlapLength2);\r\n  \t\t\t\t\t\tpointer++;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\tpointer++;\r\n  \t\t\t}\r\n  \t\t\tpointer++;\r\n  \t\t}\r\n  \t};\r\n\r\n  \t/**\r\n    * Determine if the suffix of one string is the prefix of another.\r\n    * @param {string} text1 First string.\r\n    * @param {string} text2 Second string.\r\n    * @return {number} The number of characters common to the end of the first\r\n    *     string and the start of the second string.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCommonOverlap = function (text1, text2) {\r\n  \t\tvar text1Length, text2Length, textLength, best, length, pattern, found;\r\n\r\n  \t\t// Cache the text lengths to prevent multiple calls.\r\n  \t\ttext1Length = text1.length;\r\n  \t\ttext2Length = text2.length;\r\n\r\n  \t\t// Eliminate the null case.\r\n  \t\tif (text1Length === 0 || text2Length === 0) {\r\n  \t\t\treturn 0;\r\n  \t\t}\r\n\r\n  \t\t// Truncate the longer string.\r\n  \t\tif (text1Length > text2Length) {\r\n  \t\t\ttext1 = text1.substring(text1Length - text2Length);\r\n  \t\t} else if (text1Length < text2Length) {\r\n  \t\t\ttext2 = text2.substring(0, text1Length);\r\n  \t\t}\r\n  \t\ttextLength = Math.min(text1Length, text2Length);\r\n\r\n  \t\t// Quick check for the worst case.\r\n  \t\tif (text1 === text2) {\r\n  \t\t\treturn textLength;\r\n  \t\t}\r\n\r\n  \t\t// Start by looking for a single character match\r\n  \t\t// and increase length until no match is found.\r\n  \t\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\r\n  \t\tbest = 0;\r\n  \t\tlength = 1;\r\n  \t\twhile (true) {\r\n  \t\t\tpattern = text1.substring(textLength - length);\r\n  \t\t\tfound = text2.indexOf(pattern);\r\n  \t\t\tif (found === -1) {\r\n  \t\t\t\treturn best;\r\n  \t\t\t}\r\n  \t\t\tlength += found;\r\n  \t\t\tif (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) {\r\n  \t\t\t\tbest = length;\r\n  \t\t\t\tlength++;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t};\r\n\r\n  \t/**\r\n    * Split two texts into an array of strings.  Reduce the texts to a string of\r\n    * hashes where each Unicode character represents one line.\r\n    * @param {string} text1 First string.\r\n    * @param {string} text2 Second string.\r\n    * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\r\n    *     An object containing the encoded text1, the encoded text2 and\r\n    *     the array of unique strings.\r\n    *     The zeroth element of the array of unique strings is intentionally blank.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffLinesToChars = function (text1, text2) {\r\n  \t\tvar lineArray, lineHash, chars1, chars2;\r\n  \t\tlineArray = []; // E.g. lineArray[4] === 'Hello\\n'\r\n  \t\tlineHash = {}; // E.g. lineHash['Hello\\n'] === 4\r\n\r\n  \t\t// '\\x00' is a valid character, but various debuggers don't like it.\r\n  \t\t// So we'll insert a junk entry to avoid generating a null character.\r\n  \t\tlineArray[0] = \"\";\r\n\r\n  \t\t/**\r\n     * Split a text into an array of strings.  Reduce the texts to a string of\r\n     * hashes where each Unicode character represents one line.\r\n     * Modifies linearray and linehash through being a closure.\r\n     * @param {string} text String to encode.\r\n     * @return {string} Encoded string.\r\n     * @private\r\n     */\r\n  \t\tfunction diffLinesToCharsMunge(text) {\r\n  \t\t\tvar chars, lineStart, lineEnd, lineArrayLength, line;\r\n  \t\t\tchars = \"\";\r\n\r\n  \t\t\t// Walk the text, pulling out a substring for each line.\r\n  \t\t\t// text.split('\\n') would would temporarily double our memory footprint.\r\n  \t\t\t// Modifying text would create many large strings to garbage collect.\r\n  \t\t\tlineStart = 0;\r\n  \t\t\tlineEnd = -1;\r\n\r\n  \t\t\t// Keeping our own length variable is faster than looking it up.\r\n  \t\t\tlineArrayLength = lineArray.length;\r\n  \t\t\twhile (lineEnd < text.length - 1) {\r\n  \t\t\t\tlineEnd = text.indexOf(\"\\n\", lineStart);\r\n  \t\t\t\tif (lineEnd === -1) {\r\n  \t\t\t\t\tlineEnd = text.length - 1;\r\n  \t\t\t\t}\r\n  \t\t\t\tline = text.substring(lineStart, lineEnd + 1);\r\n  \t\t\t\tlineStart = lineEnd + 1;\r\n\r\n  \t\t\t\tif (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {\r\n  \t\t\t\t\tchars += String.fromCharCode(lineHash[line]);\r\n  \t\t\t\t} else {\r\n  \t\t\t\t\tchars += String.fromCharCode(lineArrayLength);\r\n  \t\t\t\t\tlineHash[line] = lineArrayLength;\r\n  \t\t\t\t\tlineArray[lineArrayLength++] = line;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\treturn chars;\r\n  \t\t}\r\n\r\n  \t\tchars1 = diffLinesToCharsMunge(text1);\r\n  \t\tchars2 = diffLinesToCharsMunge(text2);\r\n  \t\treturn {\r\n  \t\t\tchars1: chars1,\r\n  \t\t\tchars2: chars2,\r\n  \t\t\tlineArray: lineArray\r\n  \t\t};\r\n  \t};\r\n\r\n  \t/**\r\n    * Rehydrate the text in a diff from a string of line hashes to real lines of\r\n    * text.\r\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\r\n    * @param {!Array.<string>} lineArray Array of unique strings.\r\n    * @private\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCharsToLines = function (diffs, lineArray) {\r\n  \t\tvar x, chars, text, y;\r\n  \t\tfor (x = 0; x < diffs.length; x++) {\r\n  \t\t\tchars = diffs[x][1];\r\n  \t\t\ttext = [];\r\n  \t\t\tfor (y = 0; y < chars.length; y++) {\r\n  \t\t\t\ttext[y] = lineArray[chars.charCodeAt(y)];\r\n  \t\t\t}\r\n  \t\t\tdiffs[x][1] = text.join(\"\");\r\n  \t\t}\r\n  \t};\r\n\r\n  \t/**\r\n    * Reorder and merge like edit sections.  Merge equalities.\r\n    * Any edit section can move as long as it doesn't cross an equality.\r\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\r\n    */\r\n  \tDiffMatchPatch.prototype.diffCleanupMerge = function (diffs) {\r\n  \t\tvar pointer, countDelete, countInsert, textInsert, textDelete, commonlength, changes, diffPointer, position;\r\n  \t\tdiffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\r\n  \t\tpointer = 0;\r\n  \t\tcountDelete = 0;\r\n  \t\tcountInsert = 0;\r\n  \t\ttextDelete = \"\";\r\n  \t\ttextInsert = \"\";\r\n\r\n  \t\twhile (pointer < diffs.length) {\r\n  \t\t\tswitch (diffs[pointer][0]) {\r\n  \t\t\t\tcase DIFF_INSERT:\r\n  \t\t\t\t\tcountInsert++;\r\n  \t\t\t\t\ttextInsert += diffs[pointer][1];\r\n  \t\t\t\t\tpointer++;\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_DELETE:\r\n  \t\t\t\t\tcountDelete++;\r\n  \t\t\t\t\ttextDelete += diffs[pointer][1];\r\n  \t\t\t\t\tpointer++;\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t\tcase DIFF_EQUAL:\r\n\r\n  \t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\r\n  \t\t\t\t\tif (countDelete + countInsert > 1) {\r\n  \t\t\t\t\t\tif (countDelete !== 0 && countInsert !== 0) {\r\n\r\n  \t\t\t\t\t\t\t// Factor out any common prefixes.\r\n  \t\t\t\t\t\t\tcommonlength = this.diffCommonPrefix(textInsert, textDelete);\r\n  \t\t\t\t\t\t\tif (commonlength !== 0) {\r\n  \t\t\t\t\t\t\t\tif (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL) {\r\n  \t\t\t\t\t\t\t\t\tdiffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(0, commonlength);\r\n  \t\t\t\t\t\t\t\t} else {\r\n  \t\t\t\t\t\t\t\t\tdiffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]);\r\n  \t\t\t\t\t\t\t\t\tpointer++;\r\n  \t\t\t\t\t\t\t\t}\r\n  \t\t\t\t\t\t\t\ttextInsert = textInsert.substring(commonlength);\r\n  \t\t\t\t\t\t\t\ttextDelete = textDelete.substring(commonlength);\r\n  \t\t\t\t\t\t\t}\r\n\r\n  \t\t\t\t\t\t\t// Factor out any common suffixies.\r\n  \t\t\t\t\t\t\tcommonlength = this.diffCommonSuffix(textInsert, textDelete);\r\n  \t\t\t\t\t\t\tif (commonlength !== 0) {\r\n  \t\t\t\t\t\t\t\tdiffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1];\r\n  \t\t\t\t\t\t\t\ttextInsert = textInsert.substring(0, textInsert.length - commonlength);\r\n  \t\t\t\t\t\t\t\ttextDelete = textDelete.substring(0, textDelete.length - commonlength);\r\n  \t\t\t\t\t\t\t}\r\n  \t\t\t\t\t\t}\r\n\r\n  \t\t\t\t\t\t// Delete the offending records and add the merged ones.\r\n  \t\t\t\t\t\tif (countDelete === 0) {\r\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countInsert, countDelete + countInsert, [DIFF_INSERT, textInsert]);\r\n  \t\t\t\t\t\t} else if (countInsert === 0) {\r\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countDelete, countDelete + countInsert, [DIFF_DELETE, textDelete]);\r\n  \t\t\t\t\t\t} else {\r\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countDelete - countInsert, countDelete + countInsert, [DIFF_DELETE, textDelete], [DIFF_INSERT, textInsert]);\r\n  \t\t\t\t\t\t}\r\n  \t\t\t\t\t\tpointer = pointer - countDelete - countInsert + (countDelete ? 1 : 0) + (countInsert ? 1 : 0) + 1;\r\n  \t\t\t\t\t} else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\r\n\r\n  \t\t\t\t\t\t// Merge this equality with the previous one.\r\n  \t\t\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer][1];\r\n  \t\t\t\t\t\tdiffs.splice(pointer, 1);\r\n  \t\t\t\t\t} else {\r\n  \t\t\t\t\t\tpointer++;\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\tcountInsert = 0;\r\n  \t\t\t\t\tcountDelete = 0;\r\n  \t\t\t\t\ttextDelete = \"\";\r\n  \t\t\t\t\ttextInsert = \"\";\r\n  \t\t\t\t\tbreak;\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\tif (diffs[diffs.length - 1][1] === \"\") {\r\n  \t\t\tdiffs.pop(); // Remove the dummy entry at the end.\r\n  \t\t}\r\n\r\n  \t\t// Second pass: look for single edits surrounded on both sides by equalities\r\n  \t\t// which can be shifted sideways to eliminate an equality.\r\n  \t\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\r\n  \t\tchanges = false;\r\n  \t\tpointer = 1;\r\n\r\n  \t\t// Intentionally ignore the first and last element (don't need checking).\r\n  \t\twhile (pointer < diffs.length - 1) {\r\n  \t\t\tif (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\r\n\r\n  \t\t\t\tdiffPointer = diffs[pointer][1];\r\n  \t\t\t\tposition = diffPointer.substring(diffPointer.length - diffs[pointer - 1][1].length);\r\n\r\n  \t\t\t\t// This is a single edit surrounded by equalities.\r\n  \t\t\t\tif (position === diffs[pointer - 1][1]) {\r\n\r\n  \t\t\t\t\t// Shift the edit over the previous equality.\r\n  \t\t\t\t\tdiffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\r\n  \t\t\t\t\tdiffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\r\n  \t\t\t\t\tdiffs.splice(pointer - 1, 1);\r\n  \t\t\t\t\tchanges = true;\r\n  \t\t\t\t} else if (diffPointer.substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\r\n\r\n  \t\t\t\t\t// Shift the edit over the next equality.\r\n  \t\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer + 1][1];\r\n  \t\t\t\t\tdiffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\r\n  \t\t\t\t\tdiffs.splice(pointer + 1, 1);\r\n  \t\t\t\t\tchanges = true;\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t\tpointer++;\r\n  \t\t}\r\n\r\n  \t\t// If shifts were made, the diff needs reordering and another shift sweep.\r\n  \t\tif (changes) {\r\n  \t\t\tthis.diffCleanupMerge(diffs);\r\n  \t\t}\r\n  \t};\r\n\r\n  \treturn function (o, n) {\r\n  \t\tvar diff, output, text;\r\n  \t\tdiff = new DiffMatchPatch();\r\n  \t\toutput = diff.DiffMain(o, n);\r\n  \t\tdiff.diffCleanupEfficiency(output);\r\n  \t\ttext = diff.diffPrettyHtml(output);\r\n\r\n  \t\treturn text;\r\n  \t};\r\n  }();\r\n\r\n}((function() { return this; }())));"],"names":["global$1","diff","a","b","i","j","result","slice","length","splice","inArray","elem","array","indexOf","objectValues","obj","key","val","vals","is","hasOwn","call","Object","extend","undefOnly","prop","undefined","objectType","match","toString","type","isNaN","toLowerCase","_typeof","generateHash","module","testName","str","hash","charCodeAt","hex","emit","eventName","data","TypeError","originalCallbacks","LISTENERS","callbacks","concat","toConsumableArray","runLoggingCallbacks","args","l","config","extractStacktrace","e","offset","stack","include","split","test","shift","fileName","push","join","sourceFromStacktrace","error","Error","err","advance","start","now","depth","queue","blocking","elapsedTime","defined","setTimeout","updateRate","priorityCount","done","addToQueueImmediate","callback","unshift","pop","unitSamplerGenerator","seed","sample","parseInt","storage","ProcessingQueue","finished","runtime","started","passed","stats","all","bad","globalSuite","end","failed","total","removeItem","Test","settings","count","this","expected","assertions","semaphore","currentModule","steps","timeout","skip","todo","testReport","TestReport","suiteReport","valid","tests","name","testId","async","assert","Assert","getNotStartedModules","startModule","modules","testsRun","parentModule","pushFailure","current","currentTest","apply","arguments","saveGlobal","pollution","noglobals","checkPollution","newGlobals","deletedGlobals","old","focused$1","internalStop","timeoutDuration","testTimeout","clearTimeout","internalRecover","released","internalStart","begin","collectTests","childModules","nextModule","numberOfTests","numberOfUnskippedTests","filter","notifyTestsRan","skipped","unskippedTestsRun","errorString","resultErrorString","substring","message","createModule","testEnvironment","modifiers","moduleStack","moduleName","parentSuite","skip$$1","todo$$1","moduleId","SuiteReport","env","processModule","options","executeNow","setHookFromEnvironment","hooks","environment","potentialHook","moduleFns","before","setHookFunction","beforeEach","afterEach","after","module$1","focused","scheduleBegin","runStarted","modulesLog","totalTests","hookName","escapeText","s","replace","window","self$1","self","console","document","navigator","localSessionStorage","x","sessionStorage","setItem","Symbol","iterator","constructor","prototype","classCallCheck","instance","Constructor","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","arr","Array","isArray","arr2","from","hasOwnProperty","Date","getTime","equiv","useStrictEquality","valueOf","compareConstructors","protoA","getProto","protoB","getRegExpFlags","regexp","flags","isContainer","breadthFirstCompareChild","pairs","every","pair","typeEquiv","innerEquiv","getPrototypeOf","__proto__","string","boolean","number","null","symbol","date","nan","source","function","len","set","innerEq","outerEq","size","forEach","aVal","bVal","parentPairs","map","aKey","bKey","object","aProperties","bProperties","sort","reorder","altertitle","collapse","scrolltop","maxDepth","requireExpects","urlConfig","globalConfig","QUnit","version","dump","quote","literal","o","pre","post","separator","base","indent","inner","ret","up","parse","down","item","reName","objType","res","parser","parserType","objIndex","typeOf","parsers","setInterval","nodeType","multiline","HTML","extra","chr","indentChar","setParser","_error","unknown","fn","exec","nodelist","keys","nonEnumerableProperties","node","_node","open","close","tag","nodeName","attrs","attributes","nodeValue","functionArgs","String","fromCharCode","functionCode","attribute","sym","create","SUPPORTED_EVENTS","unitSampler","add","prioritize","index","Math","floor","addImmediate","suite","suiteName","fullName","_startTime","_endTime","pushTest","value","recordTime","getRuntime","status","getStatus","errors","getFailedAssertions","getAssertions","assertion","actual","notStartedModules","previousFailure","run","runTest","promise","resolvePromise","callbackStarted","notrycatch","queueHook","hook","hookOwner","_this","callHook","preserveEnvironment","handler","processHooks","finish","logSuiteEnd","slimAssertions","parent","preserveTestEnvironment","previousFailCount","getItem","reverse","pushResult","resultInfo","details","negative","logAssertion","pushAssertion","phase","then","resume","moduleChainNameMatch","testModule","moduleChainIdMatch","regexFilter","validTest","stringFilter","exclude","pattern","RegExp","charAt","Logger","warn","method","consoleProxy","testContext","duration","deepEqual","asserts","test$$1","popped","acceptCallCount","block","ignoreGlobalErrors","expectedType","raises","childSuites","pushChildSuite","testCounts","getTestCounts","counts","reduce","_getTestCounts","globalStartCalled","isLocal","location","protocol","only","on","events","globalStartAlreadyCalled","autostart","pageLoaded","load","onError","_len","_key","lineNumber","callbackNames","registerLoggingCallback","registerLoggingCallbacks","exports","define","amd","WorkerGlobalScope","exportQUnit","fixture","getElementById","innerHTML","testStart","decodeQueryParam","param","decodeURIComponent","urlParams","params","search","getUrlParams","random","id","label","tooltip","option","passedTests","failedTests","skippedTests","todoTests","addEvent","addEventListener","removeEvent","removeEventListener","addEvents","elems","hasClass","className","addClass","toggleClass","force","removeClass","trim","document$$1","abortTests","abortButton","disabled","interceptNavigation","ev","applyUrlParams","preventDefault","getUrlConfigHtml","escaped","escapedTooltip","selection","urlConfigHtml","toolbarChanged","updatedUrl","field","selectedIndex","checked","defaultValue","setUrl","history","replaceState","arrValue","querystring","encodeURIComponent","host","pathname","selectedModules","modulesList","getElementsByTagName","toolbarUrlConfigContainer","urlConfigContainer","createElement","abortTestsButton","button","toolbarLooseFilter","input","appendChild","createTextNode","moduleListHtml","html","toolbarModuleFilter","searchFocus","hideHandler","inContainer","moduleFilter","contains","keyCode","moduleSearch","focus","dropDown","style","display","searchInput","searchText","listItems","dropDownList","children","textContent","selectionChange","evt","checkbox","allCheckbox","selectedNames","parentNode","dirty","defaultChecked","commit","reset","placeholder","title","actions","lastChild","firstChild","nextSibling","appendToolbar","toolbar","appendHeader","header","unfilteredUrl","appendBanner","banner","appendTestResults","controls","removeChild","insertBefore","appendFilteredTest","appendUserAgent","userAgent","appendInterface","qunit","appendTestsList","z","moduleObj","appendTest","rerunTrigger","testBlock","assertList","getNameHtml","href","nameHtml","stripHtml","collapseNext","localeCompare","hidepassed","assertLi","scrollTo","running","log","showDiff","testItem","testDone","testTitle","time","good","sourceName","testPassed","todoLabel","p","major","phantom","readyState","originalWindowOnError","onerror","DiffMatchPatch","DiffMain","text1","text2","optChecklines","deadline","checklines","commonlength","commonprefix","commonsuffix","diffs","diffCommonPrefix","diffCommonSuffix","diffCompute","diffCleanupMerge","diffCleanupEfficiency","changes","equalities","equalitiesLength","lastequality","pointer","preIns","preDel","postIns","postDel","diffPrettyHtml","op","pointermid","pointermax","pointermin","pointerstart","min","pointerend","longtext","shorttext","hm","text1A","text2A","text1B","text2B","midCommon","diffsA","diffsB","diffHalfMatch","diffLineMode","diffBisect","diffHalfMatchI","bestCommon","prefixLength","suffixLength","bestLongtextA","bestLongtextB","bestShorttextA","bestShorttextB","dmp","hm1","hm2","ceil","linearray","countInsert","countDelete","textInsert","textDelete","diffLinesToChars","chars1","chars2","lineArray","diffCharsToLines","diffCleanupSemantic","text1Length","text2Length","maxD","vOffset","vLength","v1","v2","delta","front","k1start","k1end","k2start","k2end","k2Offset","k1Offset","x1","x2","y1","y2","d","k1","k2","diffBisectSplit","y","text1a","text1b","text2a","text2b","diffsb","lengthInsertions2","lengthDeletions2","lengthInsertions1","lengthDeletions1","deletion","insertion","overlapLength1","overlapLength2","max","diffCommonOverlap","textLength","best","found","diffLinesToCharsMunge","text","chars","lineStart","lineEnd","lineArrayLength","line","lineHash","diffPointer","n","output"],"mappings":"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"}